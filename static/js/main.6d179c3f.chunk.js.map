{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/Login.js","components/Register.js","components/Reset.js","components/Dashboard.js","components/ReadOnlyRow.js","components/EditableRow.js","assets/winner-cup.png","components/NewGame.js","components/RegisterPlayer.js","components/GameHistory.js","components/PieChart.js","components/GameStats.js","components/OldGame.js","components/App.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","db","getFirestore","googleProvider","GoogleAuthProvider","signInWithGoogle","a","signInWithPopup","res","user","q","query","collection","where","uid","getDocs","docs","length","addDoc","name","displayName","authProvider","email","console","error","alert","message","logInWithEmailAndPassword","password","signInWithEmailAndPassword","registerWithEmailAndPassword","createUserWithEmailAndPassword","sendPasswordReset","sendPasswordResetEmail","logout","signOut","registerPlayer","player","getRegisteredPlayers","players","forEach","doc","push","data","sort","p1","p2","id","savePlayers","playersObj","Object","assign","getPlayers","saveRoundData","roundData","Date","now","updateRoundData","d","docRef","updateDoc","deleteRoundData","roundId","deleteDoc","getGameData","gameData","round1","round2","roundNumber","saveGame","saveGameHistory","gameQuery","playersQuery","keys","playerTotals","rounds","round","Number","playerRanking","total","gameHistory","utcDateMS","winner","discardGame","getGameHistoryData","gameHistoryData","game","gameDate","date","getMonth","getDate","getFullYear","roundsData","winnerScore","runner","runnerScore","game1","game2","AuthContext","React","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","value","signup","Provider","Login","setEmail","setPassword","useAuthState","navigate","useNavigate","className","type","onChange","e","target","placeholder","onClick","to","Register","setName","Reset","Dashboard","fetchUserName","gameInProgress","setGameInProgress","class","ReadOnlyRow","roundIndex","handleEditClick","handleDeleteClick","oldGame","subRoundTotal","playerSubScores","i","playerSubScoresTemp","map","event","points","style","EditableRow","editRoundData","handleEditRoundChange","handleCancelClick","key","idx","required","NewGame","registeredPlayers","setRegisteredPlayers","setPlayers","playerName","setPlayerName","setRounds","addRoundData","setAddRoundData","allPlayersAdded","setAllPlayersAdded","playerScores","setPlayerScores","gameOver","setGameOver","setWinner","regsiteredPlayers","savedPlayers","tempSavedPlayers","playerScoresTemp","lowScore","savePlayersHandler","preventDefault","setEditRoundData","editRoundId","setEditRoundId","index","fieldValue","newRoundData","handleAddRoundSubmit","newRound","nanoid","newRounds","window","location","reload","handleEditRoundSubmit","editedRound","findIndex","roundValues","splice","saveGameHandler","discardGameHandler","leadingPlayer","leadingScore","getWinningPlayer","src","WinnerCup","width","height","getLosingPlayer","display","flexDirection","onSubmit","includes","marginRight","disabled","handleAddRoundChange","RegisterPlayer","handleRegisterPlayerSubmit","GameHistory","setGameHistory","color","href","PieChart","props","outerRadius","innerRadius","colorScale","d3","select","remove","svg","append","attr","arcGenerator","pieGenerator","padAngle","arc","selectAll","enter","_","text","label","centroid","x","y","drawChart","GameStats","playerWinnerRunner","setPlayerWinnerRunner","playerGameCombo","setPlayerGameCombo","winnerChartData","setWinnerChartData","runnerChartData","setRunnerChartData","outChartData","setOutChartData","playerWinnerCount","playerRunnerCount","playerOutCount","playerGameCount","gameWinsCount","winCount","runnerCount","out","outCount","gameCount","gameWin","gameWinCount","playerGameComboKey","join","games","gameWinPlayers","split","gameWinPlayersSorted","gameWinPlayersSortedKey","gameWinsCountEntries","entries","g1","g2","sortedGameWinsCount","reduce","acc","playerGameComboObj","gamesPlayed","winPercentage","Math","runnerPercentage","outPercentage","gameWins","playersParticipated","g","obj","wins","document","getElementsByClassName","addEventListener","this","classList","toggle","panel","nextElementSibling","marginTop","marginBottom","OldGame","setGame","playerStats","setPlayerStats","gameId","useParams","find","rummys","drops","outs","seventyFives","log","App","Container","minHeight","maxWidth","basename","exact","path","element","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6d179c3f.chunk.js","sourcesContent":["/*import { initializeApp } from 'firebase/app'\nimport { getAuth } from 'firebase/auth'\n\n// console.log('api key : ', process.env.RUMMY_SCORE_TRACKER_FIREBASE_API_KEY)\n\n// const app = initializeApp({\n//     apiKey: process.env.RUMMY_SCORE_TRACKER_FIREBASE_API_KEY,\n//     authDomain: process.env.RUMMY_SCORE_TRACKER_FIREBASE_AUTH_DOMAIN,\n//     projectId: process.env.RUMMY_SCORE_TRACKER_FIREBASE_PROJECT_ID,\n//     storageBucket: process.env.RUMMY_SCORE_TRACKER_FIREBASE_STORAGE_BUCKET,\n//     messagingSenderId: process.env.RUMMY_SCORE_TRACKER_FIREBASE_MESSAGING_SENDER_ID,\n//     appId: process.env.RUMMY_SCORE_TRACKER_FIREBASE_APP_ID\n// })\n\nconst app = initializeApp({\n  apiKey: \"AIzaSyDaSmceFuVUP36mJDmdqccjlxSxacjaVg0\",\n  authDomain: \"rummy-score-tracker.firebaseapp.com\",\n  projectId: \"rummy-score-tracker\",\n  storageBucket: \"rummy-score-tracker.appspot.com\",\n  messagingSenderId: \"420450892849\",\n  appId: \"1:420450892849:web:acdc3c6f8d9c875d116910\"\n})\n\nexport const auth = getAuth(app)\nexport default app*/\n\n\nimport { initializeApp } from \"firebase/app\";\nimport {\n  GoogleAuthProvider,\n  getAuth,\n  signInWithPopup,\n  signInWithEmailAndPassword,\n  createUserWithEmailAndPassword,\n  sendPasswordResetEmail,\n  signOut,\n} from \"firebase/auth\";\n\nimport {\n  getFirestore,\n  query,\n  getDocs,\n  collection,\n  where,\n  addDoc,\n  updateDoc,\n  doc,\n  deleteDoc\n} from \"firebase/firestore\";\n\nconst app = initializeApp({\n  apiKey: \"AIzaSyDaSmceFuVUP36mJDmdqccjlxSxacjaVg0\",\n  authDomain: \"rummy-score-tracker.firebaseapp.com\",\n  projectId: \"rummy-score-tracker\",\n  storageBucket: \"rummy-score-tracker.appspot.com\",\n  messagingSenderId: \"420450892849\",\n  appId: \"1:420450892849:web:acdc3c6f8d9c875d116910\"\n});\n\nconst auth = getAuth(app);\nconst db = getFirestore(app);\n\nconst googleProvider = new GoogleAuthProvider();\nconst signInWithGoogle = async () => {\n  try {\n    const res = await signInWithPopup(auth, googleProvider);\n    const user = res.user;\n    const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user.uid));\n    const docs = await getDocs(q);\n    if (docs.docs.length === 0) {\n      await addDoc(collection(db, \"users\"), {\n        uid: user.uid,\n        name: user.displayName,\n        authProvider: \"google\",\n        email: user.email,\n      });\n    }\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst logInWithEmailAndPassword = async (email, password) => {\n  try {\n    await signInWithEmailAndPassword(auth, email, password);\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst registerWithEmailAndPassword = async (name, email, password) => {\n  try {\n    const res = await createUserWithEmailAndPassword(auth, email, password);\n    const user = res.user;\n    await addDoc(collection(db, \"users\"), {\n      uid: user.uid,\n      name,\n      authProvider: \"local\",\n      email,\n    });\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst sendPasswordReset = async (email) => {\n  try {\n    await sendPasswordResetEmail(auth, email);\n    alert(\"Password reset link sent!\");\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst logout = () => {\n  signOut(auth);\n};\n\nconst registerPlayer = async (player) => {\n  try {\n    // let playersObj = {};\n    // Object.assign(playersObj, players);\n    await addDoc(collection(db, \"registered_players\"), player);\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst getRegisteredPlayers = async () => {\n  const players = [];\n  try {\n    const q = query(collection(db, \"registered_players\"));\n    const docs = await getDocs(q);\n    docs.forEach((doc) => {\n      players.push(doc?.data()?.name);\n    });\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  } finally {\n    players?.sort((p1, p2) => p1?.id - p2?.id);\n    return players;\n  }\n};\n\nconst savePlayers = async (players) => {\n  try {\n    let playersObj = {};\n    Object.assign(playersObj, players);\n    await addDoc(collection(db, \"players\"), playersObj);\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst getPlayers = async () => {\n  const players = [];\n  try {\n    const q = query(collection(db, \"players\"));\n    const docs = await getDocs(q);\n    docs.forEach((doc) => {\n      players.push(doc.data());\n    });\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  } finally {\n    return players;\n  }\n};\n\nconst saveRoundData = async (roundData) => {\n  try {\n    roundData['roundNumber'] = Date.now();\n    await addDoc(collection(db, \"game\"), roundData);\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst updateRoundData = async (roundData) => {\n  try {\n    const q = query(collection(db, \"game\"), where(\"id\", \"==\", roundData.id));\n    const docs = await getDocs(q);\n    docs.forEach(async (d) => {\n      const docRef = doc(db, \"game\", d.id);\n      await updateDoc(docRef, roundData);\n    });\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst deleteRoundData = async (roundId) => {\n  try {\n    const q = query(collection(db, \"game\"), where(\"id\", \"==\", roundId));\n    const docs = await getDocs(q);\n    docs.forEach(async (d) => {\n      const docRef = doc(db, \"game\", d.id);\n      await deleteDoc(docRef);\n    });\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst getGameData = async () => {\n  const gameData = [];\n  try {\n    const q = query(collection(db, \"game\"));\n    const docs = await getDocs(q);\n    docs.forEach((doc) => {\n      gameData.push(doc.data());\n    });\n    gameData?.sort((round1, round2) => round1?.roundNumber - round2?.roundNumber);\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  } finally {\n    return gameData;\n  }\n};\n\nconst saveGame = async() => {\n  try {\n    await saveGameHistory();\n    const gameQuery = query(collection(db, \"game\"));\n    const gameDocs = await getDocs(gameQuery);\n    gameDocs.forEach(async (d) => {\n      const docRef = doc(db, \"game\", d.id);\n      await deleteDoc(docRef);\n    });\n    const playersQuery = query(collection(db, \"players\"));\n    const playerDocs = await getDocs(playersQuery);\n    playerDocs.forEach(async (d) => {\n      const docRef = doc(db, \"players\", d.id);\n      await deleteDoc(docRef);\n    });\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst saveGameHistory = async() => {\n  try {\n    //get players\n    const players = [];\n\n    const playersQuery = query(collection(db, \"players\"));\n    const playerDocs = await getDocs(playersQuery);\n    playerDocs.forEach(async (d) => {\n      const playersObj = d?.data();\n      Object.keys(playersObj)?.forEach(player => {\n        players.push(playersObj[player]);\n      });\n    });\n\n    //player scores\n    const playerTotals = {};\n    players?.forEach(player => playerTotals[player] = 0);\n\n    //get rounds\n    const rounds = [];\n    const gameQuery = query(collection(db, \"game\"));\n    const gameDocs = await getDocs(gameQuery);\n    gameDocs.forEach(async (d) => {\n      const round = d?.data();\n      rounds.push(round);\n      players?.forEach(player => {\n        playerTotals[player] += Number(round[player]);\n      });\n    });\n    rounds?.sort((round1, round2) => round1?.roundNumber - round2?.roundNumber);\n\n    const playerRanking = [];\n    players?.forEach(player => {\n      playerRanking.push({\n        name: player,\n        total: playerTotals[player]\n      });\n    });\n    playerRanking?.sort((p1, p2) => p1?.total - p2?.total);\n\n    const gameHistory = {\n      utcDateMS: Date.now(),\n      rounds,\n      players,\n      playerRanking,\n      winner: playerRanking[0]?.name\n    };\n    // console.log(JSON.stringify(gameHistory));\n    await addDoc(collection(db, \"game_history\"), gameHistory);\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst discardGame = async() => {\n  try {\n    const gameQuery = query(collection(db, \"game\"));\n    const gameDocs = await getDocs(gameQuery);\n    gameDocs.forEach(async (d) => {\n      const docRef = doc(db, \"game\", d.id);\n      await deleteDoc(docRef);\n    });\n    const playersQuery = query(collection(db, \"players\"));\n    const playerDocs = await getDocs(playersQuery);\n    playerDocs.forEach(async (d) => {\n      const docRef = doc(db, \"players\", d.id);\n      await deleteDoc(docRef);\n    });\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst getGameHistoryData = async () => {\n  const gameHistoryData = [];\n  try {\n    const q = query(collection(db, \"game_history\"));\n    const docs = await getDocs(q);\n    docs.forEach((doc) => {\n      const game = doc.data();\n      const gameDate = new Date(game?.utcDateMS);\n      gameHistoryData.push({\n        utcDateMS: game?.utcDateMS,\n        playerRanking: game?.playerRanking,\n        date: (gameDate.getMonth()+1) + \"/\" + gameDate.getDate() + \"/\" + gameDate.getFullYear(),\n        rounds: game?.rounds?.length,\n        roundsData: game?.rounds,\n        winner: game?.winner,\n        winnerScore: game?.playerRanking?.[0]?.total,\n        runner: game?.playerRanking?.[1]?.name,\n        runnerScore: game?.playerRanking?.[1]?.total\n      });\n    });\n    gameHistoryData?.sort((game1, game2) => game2?.utcDateMS - game1?.utcDateMS);\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  } finally {\n    return gameHistoryData;\n  }\n};\n\nexport {\n  auth,\n  db,\n  signInWithGoogle,\n  logInWithEmailAndPassword,\n  registerWithEmailAndPassword,\n  sendPasswordReset,\n  logout,\n  registerPlayer,\n  getRegisteredPlayers,\n  savePlayers,\n  getPlayers,\n  saveRoundData,\n  updateRoundData,\n  deleteRoundData,\n  getGameData,\n  saveGame,\n  discardGame,\n  getGameHistoryData\n};\n","import { createUserWithEmailAndPassword } from '@firebase/auth';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { auth } from '../firebase';\n\nconst AuthContext = React.createContext()\n\nexport const useAuth = () => {\n    return useContext(AuthContext);\n};\n\nexport function AuthProvider({ children }) {\n    const [currentUser, setCurrentUser] = useState();\n    const [loading, setLoading] = useState(true);\n\n    function signup(email, password) {\n        return createUserWithEmailAndPassword(auth, email, password);\n    }\n\n    useEffect(() => {\n        const unsubscribe = auth.onAuthStateChanged(user => {\n            setCurrentUser(user);\n            setLoading(false);\n        })\n\n        return unsubscribe;\n    }, []);\n\n\n    const value = {\n        currentUser,\n        signup\n    };\n\n    return (\n        <AuthContext.Provider value={value}>\n            {!loading && children}\n        </AuthContext.Provider>\n    );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { auth, logInWithEmailAndPassword, signInWithGoogle } from \"./../firebase\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\n// import \"./Login.css\";\nfunction Login() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, loading, error] = useAuthState(auth);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (loading) {\n      // maybe trigger a loading screen\n      return;\n    }\n    if (user) navigate(\"/dashboard\");\n  }, [user, loading]);\n  return (\n    <div className=\"login\">\n      <div className=\"login__container\">\n        <input\n          type=\"text\"\n          className=\"m-1\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          placeholder=\"E-mail Address\"\n        />\n        <br></br>\n        <input\n          type=\"password\"\n          className=\"m-1\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          placeholder=\"Password\"\n        />\n        <br></br>\n        <button\n          className=\"btn btn-success m-1\"\n          onClick={() => logInWithEmailAndPassword(email, password)}\n        >\n          Login\n        </button>\n        <br></br>\n        <button className=\"btn btn-success m-1\" onClick={signInWithGoogle}>\n          Login with Google\n        </button>\n        <div>\n          <Link to=\"/reset\">Forgot Password</Link>\n        </div>\n        <div>\n          Don't have an account? <Link to=\"/register\">Register</Link> now.\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default Login;","import React, { useEffect, useState } from \"react\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport {\n  auth,\n  registerWithEmailAndPassword,\n  signInWithGoogle,\n} from \"./../firebase\";\n// import \"./Register.css\";\nfunction Register() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [user, loading, error] = useAuthState(auth);\n  // const history = useHistory();\n  const navigate = useNavigate();\n  const register = () => {\n    if (!name) alert(\"Please enter name\");\n    registerWithEmailAndPassword(name, email, password);\n  };\n  useEffect(() => {\n    if (loading) return;\n    // if (user) history.replace(\"/dashboard\");\n    if (user) navigate(\"/dashboard\");\n  }, [user, loading]);\n  return (\n    <div className=\"register\">\n      <div className=\"register__container\">\n        <input\n          type=\"text\"\n          className=\"register__textBox\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          placeholder=\"Full Name\"\n        />\n        <input\n          type=\"text\"\n          className=\"register__textBox\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          placeholder=\"E-mail Address\"\n        />\n        <input\n          type=\"password\"\n          className=\"register__textBox\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          placeholder=\"Password\"\n        />\n        <button className=\"register__btn\" onClick={register}>\n          Register\n        </button>\n        <button\n          className=\"register__btn register__google\"\n          onClick={signInWithGoogle}\n        >\n          Register with Google\n        </button>\n        <div>\n          Already have an account? <Link to=\"/\">Login</Link> now.\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default Register;\n","import React, { useEffect, useState } from \"react\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { auth, sendPasswordReset } from \"./../firebase\";\n// import \"./Reset.css\";\nfunction Reset() {\n  const [email, setEmail] = useState(\"\");\n  const [user, loading, error] = useAuthState(auth);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (loading) return;\n    if (user) navigate(\"/dashboard\");\n  }, [user, loading]);\n  return (\n    <div className=\"reset\">\n      <div className=\"reset__container\">\n        <input\n          type=\"text\"\n          className=\"reset__textBox\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          placeholder=\"E-mail Address\"\n        />\n        <button\n          className=\"reset__btn\"\n          onClick={() => sendPasswordReset(email)}\n        >\n          Send password reset email\n        </button>\n        <div>\n          Don't have an account? <Link to=\"/register\">Register</Link> now.\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default Reset;\n","import React, { useEffect, useState } from \"react\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useNavigate } from \"react-router-dom\";\n// import \"./Dashboard.css\";\nimport { auth, db, getGameData, logout } from \"./../firebase\";\nimport { query, collection, getDocs, where } from \"firebase/firestore\";\nfunction Dashboard() {\n  const [user, loading, error] = useAuthState(auth);\n  const [name, setName] = useState(\"\");\n  const navigate = useNavigate();\n  const fetchUserName = async () => {\n    try {\n      const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user?.uid));\n      const doc = await getDocs(q);\n      const data = doc.docs[0].data();\n      setName(data.name);\n    } catch (err) {\n      console.error(err);\n      alert(\"An error occured while fetching user data\");\n    }\n  };\n\n  const [gameInProgress, setGameInProgress] = useState(false);\n  useEffect(async() => {\n    if (loading) return;\n    if (!user) return navigate(\"/\");\n    fetchUserName();\n\n    const gameData = await getGameData();\n    setGameInProgress(gameData?.length > 0);\n  }, [user, loading]);\n  return (\n    <div className=\"dashboard\">\n       <div className=\"dashboard__container\">\n        Logged in as\n         <div>{name}</div>\n         <div>{user?.email}</div>\n         <div>\n           <button class=\"btn btn-success my-1\" onClick={() => navigate(\"/registerplayer\")}>Register Player</button>\n         </div>\n         <div>\n          <button class=\"btn btn-success my-1\" onClick={() => navigate(\"/newgame\")}>\n            { gameInProgress ? 'Continue Game' : 'New Game' }\n          </button>\n         </div>\n         <div>\n           <button class=\"btn btn-success my-1\" onClick={() => navigate(\"/gamehistory\")}>Game History</button>\n         </div>\n         <div>\n           <button class=\"btn btn-success my-1\" onClick={() => navigate(\"/gamestats\")}>Game Stats</button>\n         </div>\n         <div>\n          <button class=\"btn btn-success my-1\" onClick={logout}>Logout</button>\n         </div>\n       </div>\n     </div>\n  );\n}\nexport default Dashboard;\n","import React from \"react\";\n\nconst ReadOnlyRow = ({ round, roundIndex, players, rounds, handleEditClick, handleDeleteClick, oldGame }) => {\n  //calculate subround total - start\n  const subRoundTotal = [];\n  let playerSubScores = {};\n  players?.forEach(player => playerSubScores[player] = 0);\n  for(let i = 0; i <= rounds?.length; i++) {\n    if (i > 0 && i % players?.length == 0) {\n      let playerSubScoresTemp = Object.assign({}, playerSubScores);\n      subRoundTotal[(i / players?.length) - 1] = playerSubScoresTemp;\n    }\n    if (i < rounds?.length) {\n      players?.forEach(player => {\n        playerSubScores[player] += Number(rounds[i][player]);\n      });\n    }\n  }\n  //calculate subround total - end\n  if (roundIndex > 0 && roundIndex % players.length === 0) {\n    return (\n      <>\n        <tr class=\"round-total\">\n          <td><b>Round {roundIndex/players.length}</b></td>\n          {\n            players?.map(player => <td>{subRoundTotal?.[(roundIndex / players.length) - 1]?.[player]}</td>)\n          }\n        </tr>\n        <tr>\n          {\n            !oldGame ? \n            <td>\n              <button\n                type=\"button\"\n                class=\"btn btn-success mx-1\"\n                onClick={(event) => handleEditClick(event, round)}\n              >\n                Edit\n              </button>\n              <button type=\"button\" class=\"btn btn-warning\" onClick={() => handleDeleteClick(round.id)}>\n                Delete\n              </button>\n            </td>\n            : <td>{roundIndex + 1}</td>\n          }\n          {\n            players?.map(player => {\n              const points = Number(round[player]);\n              const style = {};\n              if (points <= 25) {\n                style['color'] = 'green';\n              } else if (points > 25 && points <= 50) {\n                style['color'] = 'orange';\n              } else if (points > 50) {\n                style['color'] = 'red';\n              }\n              return <td style={style}>{round[player]}</td>;\n            })\n          }\n        </tr>\n      </>\n    );\n  }\n  return (\n    <tr>\n      {\n        !oldGame ?\n        <td>\n          <button\n            type=\"button\"\n            class=\"btn btn-success mx-1\"\n            onClick={(event) => handleEditClick(event, round)}\n          >\n            Edit\n          </button>\n          <button type=\"button\" class=\"btn btn-warning\" onClick={() => handleDeleteClick(round.id)}>\n            Delete\n          </button>\n        </td>\n        : <td>{roundIndex + 1}</td>\n      }\n      {\n        // Object.keys(round)?.map(key => {\n        //   if(key !== 'id') {\n        //     return (<td>{round[key]}</td>);\n        //   }\n        // })\n        players?.map(player => {\n          const points = Number(round[player]);\n          const style = {};\n          if (points <= 25) {\n            style['color'] = 'green';\n          } else if (points > 25 && points <= 50) {\n            style['color'] = 'orange';\n          } else if (points > 50) {\n            style['color'] = 'red';\n          }\n          return <td style={style}>{round[player]}</td>;\n        })\n      }\n    </tr>\n  );\n};\n\nexport default ReadOnlyRow;","import React from \"react\";\n\nconst EditableRow = ({\n  editRoundData,\n  handleEditRoundChange,\n  handleCancelClick,\n}) => {\n  return (\n    <tr>\n      <td>\n        <button type=\"submit\" class=\"btn btn-success mx-1\">Save</button>\n        <button type=\"button\" class=\"btn btn-warning\" onClick={handleCancelClick}>\n          Cancel\n        </button>\n      </td>\n      {Object.keys(editRoundData)?.map((key, idx) => {\n        if(key !== 'id') {\n          return (\n            <td>\n              <input\n                type=\"text\"\n                required=\"required\"\n                placeholder=\"Enter points...\"\n                name=\"fullName\"\n                value={editRoundData[key]}\n                onChange={(e) => {\n                  handleEditRoundChange(e, idx);\n                }}\n              ></input>\n            </td>\n          );\n        }\n      })}\n    </tr>\n  );\n};\n\nexport default EditableRow;","export default __webpack_public_path__ + \"static/media/winner-cup.dc77caad.png\";","import React, { useState, Fragment, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { nanoid } from \"nanoid\";\nimport ReadOnlyRow from \"./ReadOnlyRow\";\nimport EditableRow from \"./EditableRow\";\nimport { deleteRoundData, getGameData, getPlayers, getRegisteredPlayers, saveGame, discardGame, savePlayers, saveRoundData, updateRoundData } from \"../firebase\";\n\nimport WinnerCup from './../assets/winner-cup.png';\nimport \"./NewGame.css\";\n\nconst NewGame = () => {\n  const navigate = useNavigate();\n\n  const [registeredPlayers, setRegisteredPlayers] = useState([]);\n  const [players, setPlayers] = useState([]);\n  const [playerName, setPlayerName] = useState('');\n\n  const [rounds, setRounds] = useState([]);\n  const [addRoundData, setAddRoundData] = useState({\n  });\n\n  const [allPlayersAdded, setAllPlayersAdded] = useState(false);\n\n  const [playerScores, setPlayerScores] = useState({});\n\n  const [gameOver, setGameOver] = useState(false);\n  const [winner, setWinner] = useState('');\n\n  useEffect(async () => {\n    const regsiteredPlayers = await getRegisteredPlayers();\n    setRegisteredPlayers(regsiteredPlayers);\n\n    const gameData = await getGameData();\n    setRounds(gameData);\n    // const currentPlayers = [];\n    // gameData?.length > 0 && Object.keys(gameData?.[0]).forEach((key) => {\n    //   if(key !== 'id') {\n    //     currentPlayers.push(key);\n    //   }\n    // });\n    // setPlayers(currentPlayers);\n    \n    const savedPlayers = await getPlayers();\n    const tempSavedPlayers = [];\n    if(savedPlayers.length > 0) {\n      setAllPlayersAdded(true);\n      if(players?.length != savedPlayers?.length) {\n        Object.keys(savedPlayers[0]).map((key) => {\n          tempSavedPlayers[key] = savedPlayers[0][key];\n        });\n        setPlayers(tempSavedPlayers);\n      }\n    }\n\n    const playerScoresTemp = {};\n    tempSavedPlayers?.forEach(player => playerScoresTemp[player] = 0);\n    gameData?.forEach(round => {\n      tempSavedPlayers?.forEach(player => {\n        playerScoresTemp[player] += Number(round[player]);\n      });\n    });\n    setPlayerScores(playerScoresTemp);\n\n    let lowScore = 350;\n    tempSavedPlayers?.forEach(player => {\n    // players?.forEach(player => {\n      if(playerScoresTemp[player] > 350) {\n        setGameOver(true);\n      }\n      if(playerScoresTemp[player] < lowScore) {\n        lowScore = playerScoresTemp[player];\n        setWinner(player);\n      }\n    });\n\n  }, []);\n\n  const handleAddPlayerChange = (event) => {\n    event.preventDefault();\n\n    const fieldValue = event.target.value;\n\n    setPlayerName(fieldValue);\n  };\n\n  const handleAddPlayerSubmit = (event) => {\n    event.preventDefault();\n\n    !players?.includes(playerName) && playerName && players.push(playerName);\n    setPlayerName('');\n\n    setPlayers(players);\n  };\n\n  const savePlayersHandler = async (event) => {\n    event.preventDefault();\n    \n    await savePlayers(players);\n\n    const savedPlayers = await getPlayers();\n    const tempSavedPlayers = [];\n    if(savedPlayers.length > 0) {\n      setAllPlayersAdded(true);\n      if(players?.length != savedPlayers?.length) {\n        Object.keys(savedPlayers[0]).map((key) => {\n          tempSavedPlayers[key] = savedPlayers[0][key];\n        });\n        setPlayers(tempSavedPlayers);\n      }\n    }\n  }\n\n  const [editRoundData, setEditRoundData] = useState({\n  });\n\n  const [editRoundId, setEditRoundId] = useState(null);\n\n  const handleAddRoundChange = (event, index) => {\n    event.preventDefault();\n\n    const fieldValue = event.target.value;\n\n    const newRoundData = { ...addRoundData };\n    // newRoundData[index] = fieldValue;\n    newRoundData[players[index]] = fieldValue;\n\n    setAddRoundData(newRoundData);\n  };\n\n  const handleEditRoundChange = (event, index) => {\n    event.preventDefault();\n\n    const fieldValue = event.target.value;\n\n    const newRoundData = { ...editRoundData };\n    // newRoundData[index] = fieldValue;\n    newRoundData[players[index]] = fieldValue;\n\n    setEditRoundData(newRoundData);\n  };\n\n  const handleAddRoundSubmit = async (event) => {\n    event.preventDefault();\n\n    const newRound = {\n      id: nanoid()\n    };\n    players?.map((player, idx) => {\n      // newRound[idx] = addRoundData[idx];\n      newRound[players[idx]] = addRoundData[players[idx]];\n    });\n\n    const newRounds = [...rounds, newRound];\n    Object.keys(addRoundData)?.map((data, idx) => {\n      // addRoundData[idx] = '';\n      addRoundData[players[idx]] = '';\n    });\n    setRounds(newRounds);\n    await saveRoundData(newRound);\n\n    const playerScoresTemp = {};\n    players?.forEach(player => playerScoresTemp[player] = 0);\n    newRounds?.forEach(round => {\n      players?.forEach(player => {\n        playerScoresTemp[player] += Number(round[player]);\n      });\n    });\n    setPlayerScores(playerScoresTemp);\n\n    let lowScore = 350;\n    players?.forEach(player => {\n      if(playerScoresTemp[player] > 350) {\n        setGameOver(true);\n      }\n      if(playerScoresTemp[player] < lowScore) {\n        lowScore = playerScoresTemp[player];\n        setWinner(player);\n      }\n    });\n\n    window.location.reload();\n  };\n\n  const handleEditRoundSubmit = async (event) => {\n    event.preventDefault();\n\n    const editedRound = {\n      id: editRoundId\n    };\n    players?.map((player, idx) => {\n      // editedRound[idx] = editRoundData[idx];\n      editedRound[players[idx]] = editRoundData[players[idx]];\n    });\n\n    const newRounds = [...rounds];\n\n    const index = rounds.findIndex((round) => round.id === editRoundId);\n\n    newRounds[index] = editedRound;\n    // newRounds[players[index]] = editedRound;\n\n    setRounds(newRounds);\n    setEditRoundId(null);\n    await updateRoundData(editedRound);\n  };\n\n  const handleEditClick = (event, round) => {\n    event.preventDefault();\n    setEditRoundId(round.id);\n\n    const roundValues = {\n    };\n    players?.map((player, idx) => {\n      // roundValues[idx] = round[idx];\n      roundValues[players[idx]] = round[players[idx]];\n    });\n\n    setEditRoundData(roundValues);\n  };\n\n  const handleCancelClick = () => {\n    setEditRoundId(null);\n  };\n\n  const handleDeleteClick = (roundId) => {\n    const newRounds = [...rounds];\n\n    const index = rounds.findIndex((round) => round.id === roundId);\n\n    newRounds.splice(index, 1);\n\n    setRounds(newRounds);\n    deleteRoundData(roundId);\n  };\n\n  const saveGameHandler = async () => {\n    await saveGame();\n    navigate(\"/dashboard\");\n  };\n\n  const discardGameHandler = async () => {\n    await discardGame();\n    navigate(\"/dashboard\");\n  };\n\n  const getPlayerTurn = () => {\n    if(rounds?.length == 0 || rounds?.length % players?.length == 0) {\n      return players[players?.length - 1];\n    }\n    return players[(rounds?.length % players?.length) - 1];\n  };\n\n  const getWinningPlayer = () => {\n    let leadingPlayer = '';\n    let leadingScore = 351;\n    players?.forEach(player => {\n      if(playerScores[player] < leadingScore) {\n        leadingScore = playerScores[player];\n        leadingPlayer = player;\n      }\n    });\n    return leadingPlayer;\n  };\n\n  const getLosingPlayer = () => {\n    let leadingPlayer = '';\n    let leadingScore = 0;\n    players?.forEach(player => {\n      if(playerScores[player] > leadingScore) {\n        leadingScore = playerScores[player];\n        leadingPlayer = player;\n      }\n    });\n    return leadingPlayer;\n  };\n\n  return (\n    <div>\n      { allPlayersAdded && \n        <>\n          <div><b>Dealer:</b> { players?.length > 0 && getPlayerTurn() }</div>\n          <div><b>Least:</b> { getWinningPlayer() ?? 'TBD' } <img src={WinnerCup} style={{width: '20px', height: '20px'}}></img> </div>\n          <div><b>Highest:</b> { getLosingPlayer() ?? 'TBD' }</div>\n        </>\n      }\n      {\n        !allPlayersAdded && \n        <div style={{display: 'flex', flexDirection: 'column'}}>\n          <h2>Select Player</h2>\n          <form style={{flexDirection: 'column'}} onSubmit={handleAddPlayerSubmit}>\n            {/* <input\n              type=\"text\"\n              name=\"player\"\n              value={playerName}\n              required=\"required\"\n              placeholder=\"Enter Player Name...\"\n              onChange={handleAddPlayerChange}\n            /> */}\n            <div style={{display: 'flex', flexDirection: 'column'}} onChange={handleAddPlayerChange}>\n              {registeredPlayers?.map(player => \n                <div style={{ marginRight: '10px' }}>\n                  <input\n                    type=\"radio\"\n                    name=\"playerName\"\n                    value={player}\n                  />\n                  {player}\n                </div>\n              )}\n            </div>\n            <button type=\"submit\" class=\"btn btn-success\" style={{width: '150px'}}>Add Player</button>\n            <button class=\"btn btn-success\" style={{width: '150px'}} onClick={savePlayersHandler} disabled={players.length <= 1}>Start Game</button>\n          </form>\n        </div>\n      }\n      {\n        !gameOver && \n        <div className=\"app-container\">\n          <form onSubmit={handleEditRoundSubmit}>\n            <table class=\"table rummy-table\">\n              <thead>\n                <tr>\n                  {players?.length > 0 && <th>Round</th>}\n                  {players?.map(player => <th>{player}</th>)}\n                </tr>\n              </thead>\n              <tbody>\n                {rounds?.map((round, idx) => (\n                  <Fragment>\n                    {editRoundId === round.id ? (\n                      <EditableRow\n                        editRoundData={editRoundData}\n                        handleEditRoundChange={handleEditRoundChange}\n                        handleCancelClick={handleCancelClick}\n                      />\n                    ) : (\n                      <ReadOnlyRow\n                        round={round}\n                        roundIndex={idx}\n                        players={players}\n                        handleEditClick={handleEditClick}\n                        handleDeleteClick={handleDeleteClick}\n                        rounds={rounds}\n                      />\n                    )}\n                  </Fragment>\n                ))}\n                <tr class=\"total\">\n                  <td><b>Total</b></td>\n                  {\n                    players?.map(player => <td>{playerScores[player]}</td>)\n                  }\n                </tr>\n              </tbody>\n            </table>\n          </form>\n\n          {/* <h2>Enter Round Scores</h2> */}\n          <form onSubmit={handleAddRoundSubmit}>\n            <table class=\"table\">\n              <tbody>\n                <tr>\n                  <td>\n                    <button type=\"submit\" class=\"btn btn-success\" style={{width: '150px'}} disabled={!allPlayersAdded}>Add</button>\n                  </td>\n                  {players?.map((player, idx) => \n                    <td>\n                      <input\n                        type=\"text\"\n                        style={{width: '100px'}}\n                        name=\"fullName\"\n                        // value={addRoundData[idx]}\n                        value={addRoundData[players[idx]]}\n                        required=\"required\"\n                        placeholder=\"Enter points...\"\n                        onChange={\n                          (e) => {\n                            handleAddRoundChange(e, idx);\n                          }}\n                      />\n                    </td>\n                  )}\n                </tr>\n              </tbody>\n            </table>\n          </form>\n        </div>\n      }\n      {\n        gameOver && \n        <div>\n          <div>{winner} won the game!!<img src={WinnerCup} style={{width: '25px', height: '25px'}}></img></div>\n          <div>\n            <button class=\"btn btn-success my-1\" onClick={saveGameHandler} disabled={!allPlayersAdded}>Save Game</button>\n          </div>\n          <div>\n            <button class=\"btn btn-warning my-1\" onClick={discardGameHandler} disabled={!allPlayersAdded}>Discard</button>\n          </div>\n        </div>\n      }\n      <button class=\"btn btn-success\" onClick={() => navigate(\"/dashboard\")}>Dashboard</button>\n      {/* <button className=\"dashboard_btn\" onClick={() => navigate(\"/newgame\")}>Refresh</button> */}\n    </div>\n  );\n};\n\nexport default NewGame;","import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getRegisteredPlayers, registerPlayer } from \"../firebase\";\n\nimport \"./NewGame.css\";\n\nconst RegisterPlayer = () => {\n  const navigate = useNavigate();\n\n  const [players, setPlayers] = useState([]);\n  const [playerName, setPlayerName] = useState('');\n\n  useEffect(async () => {\n    const savedPlayers = await getRegisteredPlayers();\n    setPlayers(savedPlayers);\n  }, []);\n\n  const handleRegisterPlayerChange = (event) => {\n    event.preventDefault();\n\n    const fieldValue = event.target.value;\n\n    setPlayerName(fieldValue);\n  };\n\n  const handleRegisterPlayerSubmit = async (event) => {\n    event.preventDefault();\n    \n    await registerPlayer({\n      name: playerName,\n      id: Date.now()\n    });\n\n    setPlayerName('');\n    const savedPlayers = await getRegisteredPlayers();\n    setPlayers(savedPlayers);\n  };\n\n  return (\n    <div>\n      <div>\n        <h2>Players</h2>\n        <form onSubmit={handleRegisterPlayerSubmit}>\n          <input\n            type=\"text\"\n            name=\"player\"\n            value={playerName}\n            required=\"required\"\n            placeholder=\"Enter Player Name...\"\n            onChange={handleRegisterPlayerChange}\n          />\n          <button type=\"submit\" class=\"btn btn-success\">Register</button>\n        </form>\n      </div>\n      {\n        players?.length > 0 &&\n        <div class=\"mt-2\">\n          <table class=\"table register-player\">\n            <thead>\n              <tr>\n                <th>Player Number</th>\n                <th>Player Name</th>\n              </tr>\n            </thead>\n            <tbody>\n                {players?.map((player, idx) => \n                  <tr>\n                    <td>{idx+1}</td>\n                    <td>{player}</td>\n                  </tr>\n                )}\n              </tbody>\n          </table>\n        </div>\n      }\n      <button class=\"btn btn-success\" onClick={() => navigate(\"/dashboard\")}>Dashboard</button>\n    </div>\n  );\n};\n\nexport default RegisterPlayer;","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getGameHistoryData } from \"../firebase\";\n\nconst GameHistory = () => {\n  const navigate = useNavigate();\n\n  const [gameHistory, setGameHistory] = useState([]);\n\n  useEffect(async () => {\n    const gameHistory = await getGameHistoryData();\n    setGameHistory(gameHistory);\n  }, []);\n\n  return (\n    <div>\n      <br></br>\n      <div>\n        <button class=\"btn btn-success\" onClick={() => navigate(\"/dashboard\")}>Dashboard</button>\n      </div>\n      <br></br>\n      <div>\n        <button class=\"btn btn-success\" onClick={() => navigate(\"/gamestats\")}>Game Stats</button>\n      </div>\n      <h1 className=\"mt-3\" style={{color: 'green'}}>Game History</h1>\n      {\n        gameHistory?.length > 0 &&\n        <div>\n          <table class=\"table history-table\">\n            <thead>\n              <tr>\n                <th>Date</th>\n                <th>Rounds Played</th>\n                <th>Winner</th>\n                <th>Runner</th>\n              </tr>\n            </thead>\n            <tbody>\n                {gameHistory?.map(game => \n                  <tr>\n                    <td><a href={`/rummy-score-tracker/gamehistory/${game?.utcDateMS}`}>{game?.date}</a></td>\n                    <td>{game?.rounds}</td>\n                    <td>{game?.winner} <br></br> ({game?.winnerScore})</td>\n                    <td>{game?.runner} <br></br> ({game?.runnerScore})</td>\n                  </tr>\n                )}\n              </tbody>\n          </table>\n        </div>\n      }\n    </div>\n  );\n};\n\nexport default GameHistory;","import React, { useEffect } from 'react';\nimport * as d3 from 'd3';\n\nfunction PieChart(props) {\n  const {\n    name,\n    data,\n    outerRadius,\n    innerRadius,\n  } = props;\n\n  const margin = {\n    top: 50, right: 50, bottom: 50, left: 50,\n  };\n\n  const width = 2 * outerRadius + margin.left + margin.right;\n  const height = 2 * outerRadius + margin.top + margin.bottom;\n\n  // const colorScale = d3     \n  //   .scaleSequential()      \n  //   .interpolator(d3.interpolateCool)      \n  //   .domain([0, data.length]);\n\n  const colorScale = d3.scaleOrdinal(d3.schemeCategory10);\n\n  useEffect(() => {\n    drawChart();\n  }, [data]);\n\n  function drawChart() {\n    // Remove the old svg\n    d3.select('#pie-container'+'-'+name)\n      .select('svg')\n      .remove();\n\n    // Create new svg\n    const svg = d3\n      .select('#pie-container'+'-'+name)\n      .append('svg')\n      .attr('width', width)\n      .attr('height', height)\n      .append('g')\n      .attr('transform', `translate(${width / 2}, ${height / 2})`);\n\n    const arcGenerator = d3\n      .arc()\n      .innerRadius(innerRadius)\n      .outerRadius(outerRadius);\n\n    const pieGenerator = d3\n      .pie()\n      .padAngle(0)\n      .value((d) => d.value);\n\n    const arc = svg\n      .selectAll()\n      .data(pieGenerator(data))\n      .enter();\n\n    // Append arcs\n    arc\n      .append('path')\n      .attr('d', arcGenerator)\n      .style('fill', (_, i) => colorScale(i))\n      .style('stroke', '#ffffff')\n      .style('stroke-width', 0);\n\n    // Append text labels\n    arc\n      .append('text')\n      .attr('text-anchor', 'middle')\n      .attr('alignment-baseline', 'middle')\n      .text((d) => d.data.label)\n      // .style('fill', (_, i) => colorScale(data.length - i))\n      // .style('fill', 'white')\n      .style('fill', '#E3F2E6') // same as html body background color\n      .attr('transform', (d) => {\n        const [x, y] = arcGenerator.centroid(d);\n        return `translate(${x}, ${y})`;\n      });\n  }    \n\n  return <div id={\"pie-container\"+\"-\"+name} />;\n}\n\nexport default PieChart;","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getGameHistoryData } from \"../firebase\";\n\nimport WinnerCup from './../assets/winner-cup.png';\nimport PieChart from \"./PieChart\";\n\nconst GameStats = () => {\n  const navigate = useNavigate();\n\n  const [playerWinnerRunner, setPlayerWinnerRunner] = useState([]);\n\n  const [playerGameCombo, setPlayerGameCombo] = useState({});\n\n  const [winnerChartData, setWinnerChartData] = useState([]);\n  const [runnerChartData, setRunnerChartData] = useState([]);\n  const [outChartData, setOutChartData] = useState([]);\n\n  useEffect(async () => {\n    const gameHistory = await getGameHistoryData();\n\n    const playerWinnerCount = {};\n    const playerRunnerCount = {};\n    const playerOutCount = {};\n    const playerGameCount = {};\n    const gameWinsCount = {};\n    const playerGameCombo = {};\n    gameHistory?.forEach(game => {\n      //winner\n      let winCount = playerWinnerCount[game?.winner];\n      if(!winCount) {\n        playerWinnerCount[game?.winner] = 1;\n      } else {\n        playerWinnerCount[game?.winner] = winCount+1;\n      }\n      //runner\n      let runnerCount = playerRunnerCount[game?.runner];\n      if(!runnerCount) {\n        playerRunnerCount[game?.runner] = 1;\n      } else {\n        playerRunnerCount[game?.runner] = runnerCount+1;\n      }\n      //out\n      const out = game?.playerRanking?.[game?.playerRanking?.length - 1]?.name;\n      let outCount = playerOutCount[out];\n      if(!outCount) {\n        playerOutCount[out] = 1;\n      } else {\n        playerOutCount[out] = outCount+1;\n      }\n      //player game count\n      game?.playerRanking?.forEach(player => {\n        let gameCount = playerGameCount[player?.name];\n        if(!gameCount) {\n          playerGameCount[player?.name] = 1;\n        } else {\n          playerGameCount[player?.name] = gameCount+1;\n        }\n      });\n      //ranking\n      const gameWin = [];\n      game?.playerRanking?.map((player, idx) => gameWin.push(player?.name));\n      let gameWinCount = gameWinsCount[gameWin];\n      if(!gameWinCount) {\n        gameWinsCount[gameWin] = 1;\n      } else {\n        gameWinsCount[gameWin] = gameWinCount+1;\n      }\n      //player game combo\n      const playerGameComboKey = game?.playerRanking?.map(player => player?.name)?.sort()?.join(',');\n      let playerGameComboCount = playerGameCombo[playerGameComboKey];\n      if(!playerGameComboCount) {\n        playerGameCombo[playerGameComboKey] = {games: [game]};\n      } else {\n        playerGameCombo[playerGameComboKey]?.games?.push(game);\n      }\n      Object.keys(gameWinsCount).forEach(gameWin => {\n        const gameWinPlayers = gameWin?.split(',');\n        const gameWinPlayersSorted = gameWinPlayers?.sort();\n        const gameWinPlayersSortedKey = gameWinPlayersSorted?.join(',');\n        let gameWinsCountTemp = playerGameCombo[gameWinPlayersSortedKey]?.gameWinsCount?.gameWin;\n        if(!gameWinsCountTemp) {\n          if(!playerGameCombo[gameWinPlayersSortedKey]?.gameWinsCount) {\n            playerGameCombo[gameWinPlayersSortedKey]['gameWinsCount'] = {};\n          }\n        }\n        playerGameCombo[gameWinPlayersSortedKey].gameWinsCount[gameWin] = gameWinsCount[gameWin];\n        // Convert object to array of key-value pairs\n        const gameWinsCountEntries = Object.entries(playerGameCombo[gameWinPlayersSortedKey].gameWinsCount);\n        // Sort the array based on values\n        gameWinsCountEntries?.sort((g1, g2) => g2?.[1] - g1?.[1]);\n        // Convert sorted array back to object\n        const sortedGameWinsCount = gameWinsCountEntries?.reduce((acc, [key, value]) => {\n          acc[key] = value;\n          return acc;\n        }, {});\n        // Assign the sorted object back to the original structure\n        playerGameCombo[gameWinPlayersSortedKey].gameWinsCount = sortedGameWinsCount;\n      });\n    });\n    //player winner runner out counts by game combo - start\n    Object.keys(playerGameCombo)?.forEach(playerGameComboKey => {\n      const playerGameComboObj = playerGameCombo[playerGameComboKey];\n      const playerWinnerCount = {};\n      const playerRunnerCount = {};\n      const playerOutCount = {};\n      const playerGameCount = {};\n      const playerWinnerRunner = [];\n      playerGameComboObj?.games?.forEach(game => {\n        //winner\n        let winCount = playerWinnerCount[game?.winner];\n        if(!winCount) {\n          playerWinnerCount[game?.winner] = 1;\n        } else {\n          playerWinnerCount[game?.winner] = winCount+1;\n        }\n        //runner\n        let runnerCount = playerRunnerCount[game?.runner];\n        if(!runnerCount) {\n          playerRunnerCount[game?.runner] = 1;\n        } else {\n          playerRunnerCount[game?.runner] = runnerCount+1;\n        }\n        //out\n        const out = game?.playerRanking?.[game?.playerRanking?.length - 1]?.name;\n        let outCount = playerOutCount[out];\n        if(!outCount) {\n          playerOutCount[out] = 1;\n        } else {\n          playerOutCount[out] = outCount+1;\n        }\n        //player game count\n        game?.playerRanking?.forEach(player => {\n          let gameCount = playerGameCount[player?.name];\n          if(!gameCount) {\n            playerGameCount[player?.name] = 1;\n          } else {\n            playerGameCount[player?.name] = gameCount+1;\n          }\n        });\n      });\n      playerGameCombo[playerGameComboKey].playerWinnerCount = playerWinnerCount;\n      playerGameCombo[playerGameComboKey].playerRunnerCount = playerRunnerCount;\n      playerGameCombo[playerGameComboKey].playerOutCount = playerOutCount;\n      playerGameCombo[playerGameComboKey].playerGameCount = playerGameCount;\n      playerGameCombo[playerGameComboKey].playerWinnerRunner = [];\n      playerGameCombo[playerGameComboKey].winnerChartData = [];\n      playerGameCombo[playerGameComboKey].runnerChartData = [];\n      playerGameCombo[playerGameComboKey].outChartData = [];\n      playerGameComboKey?.split(',')?.forEach(player => {\n        playerGameCombo[playerGameComboKey].playerWinnerRunner.push({\n          playerName: player,\n          winner: playerWinnerCount[player],\n          runner: playerRunnerCount[player],\n          out: playerOutCount[player],\n          gamesPlayed: playerGameCount[player],\n          winPercentage: playerWinnerCount[player] ? Math.round((playerWinnerCount[player] / playerGameCount[player]) * 100) : 0,\n          runnerPercentage: playerRunnerCount[player] ? Math.round((playerRunnerCount[player] / playerGameCount[player]) * 100) : 0,\n          outPercentage: playerOutCount[player] ? Math.round((playerOutCount[player] / playerGameCount[player]) * 100) : 0\n        });\n        playerGameCombo[playerGameComboKey].winnerChartData.push({\n          label: player,\n          value: playerGameCombo[playerGameComboKey].playerWinnerCount[player]\n        });\n        playerGameCombo[playerGameComboKey].runnerChartData.push({\n          label: player,\n          value: playerGameCombo[playerGameComboKey].playerRunnerCount[player]\n        });\n        playerGameCombo[playerGameComboKey].outChartData.push({\n          label: player,\n          value: playerGameCombo[playerGameComboKey].playerOutCount[player]\n        });\n      });\n      playerGameCombo[playerGameComboKey].playerWinnerRunner?.sort((p1, p2) => p2?.winPercentage - p1?.winPercentage);\n    });\n    //player winner runner out counts by game combo - end\n    const gameWins = [];\n    const playersParticipated = [];\n    Object?.keys(gameWinsCount)?.map(g => {\n      const obj = {\n        players: g?.split(','),\n        wins: gameWinsCount[g]\n      };\n      obj?.players?.forEach(player => !playersParticipated.includes(player) && playersParticipated.push(player));\n      gameWins.push(obj);\n    });\n    gameWins?.sort((game1, game2) => game2.wins - game1.wins);\n    setPlayerGameCombo(playerGameCombo);\n\n    const playerWinnerRunner = [];\n    Object?.keys(playerWinnerCount)?.forEach(player => {\n    // playersParticipated?.forEach(player => {\n      playerWinnerRunner.push({\n        playerName: player,\n        winner: playerWinnerCount[player],\n        runner: playerRunnerCount[player],\n        out: playerOutCount[player],\n        gamesPlayed: playerGameCount[player],\n        winPercentage: playerWinnerCount[player] ? Math.round((playerWinnerCount[player] / playerGameCount[player]) * 100) : 0,\n        runnerPercentage: playerRunnerCount[player] ? Math.round((playerRunnerCount[player] / playerGameCount[player]) * 100) : 0,\n        outPercentage: playerOutCount[player] ? Math.round((playerOutCount[player] / playerGameCount[player]) * 100) : 0\n      });\n      winnerChartData.push({\n        label: player,\n        value: playerWinnerCount[player]\n      });\n      runnerChartData.push({\n        label: player,\n        value: playerRunnerCount[player]\n      });\n      outChartData.push({\n        label: player,\n        value: playerOutCount[player]\n      });\n    });\n\n    setWinnerChartData(winnerChartData);\n    setRunnerChartData(runnerChartData);\n    setOutChartData(outChartData);\n\n    playerWinnerRunner?.sort((p1, p2) => p2?.winPercentage - p1?.winPercentage);\n\n    setPlayerWinnerRunner(playerWinnerRunner);\n\n    // accordion code\n    var acc = document.getElementsByClassName(\"accordion\");\n    var i;\n\n    for (i = 0; i < acc.length; i++) {\n      acc[i].addEventListener(\"click\", function() {\n        this.classList.toggle(\"active\");\n        var panel = this.nextElementSibling;\n        if (panel.style.display === \"block\") {\n          panel.style.display = \"none\";\n        } else {\n          panel.style.display = \"block\";\n        }\n      });\n    }\n  }, []);\n\n  return (\n    <div>\n      <br></br>\n      <div>\n        <button class=\"btn btn-success\" onClick={() => navigate(\"/dashboard\")}>Dashboard</button>\n      </div>\n      <br></br>\n      <div>\n        <button class=\"btn btn-success\" onClick={() => navigate(\"/gamehistory\")}>Game History</button>\n      </div>\n      {\n        playerWinnerRunner?.length > 0 && \n        // <div style={{width: '360px'}}>\n        <div>\n          <h1 className=\"mt-3\" style={{color: 'green'}}>Game Stats</h1>\n          <div className=\"mt-3\">{playerWinnerRunner[0]?.playerName} is All Time Winner <img src={WinnerCup} style={{width: '20px', height: '20px'}}></img></div>\n          <table class=\"table player-stats-table\">\n            <thead>\n              <tr>\n                <th>Player Name</th>\n                <th>Winner</th>\n                <th>Runner</th>\n                <th>Out</th>\n                <th>Games Played</th>\n                <th>Win %</th>\n                <th>Runner %</th>\n                <th>Out %</th>\n              </tr>\n            </thead>\n            <tbody>\n                {playerWinnerRunner?.map(player => \n                  <tr>\n                    <td>{player?.playerName}</td>\n                    <td>{player?.winner ? player?.winner : 0}</td>\n                    <td>{player?.runner ? player?.runner : 0}</td>\n                    <td>{player?.out ? player?.out : 0}</td>\n                    <td>{player?.gamesPlayed}</td>\n                    <td>{player?.winPercentage}</td>\n                    <td>{player?.runnerPercentage}</td>\n                    <td>{player?.outPercentage}</td>\n                  </tr>\n                )}\n              </tbody>\n          </table>\n          <h4 style={{marginTop: '50px', color: 'green'}}>Winner Chart</h4>\n          <PieChart\n            name='winner'\n            data={winnerChartData}\n            outerRadius={200}\n            innerRadius={100}\n          />\n          <h4 style={{marginTop: '50px', color: 'green'}}>Runner Chart</h4>\n          <PieChart\n            name='runner'\n            data={runnerChartData}\n            outerRadius={200}\n            innerRadius={100}\n          />\n          <h4 style={{marginTop: '50px', color: 'green'}}>Out Chart</h4>\n          <PieChart\n            name='out'\n            data={outChartData}\n            outerRadius={200}\n            innerRadius={100}\n          />\n        </div>\n      }\n      {\n        <div style={{marginBottom: '50px'}}>\n          <h3 style={{marginBottom: '25px', marginTop: '25px', color: 'green'}}>Win Combinations</h3>\n          {\n            Object?.keys(playerGameCombo)?.map((playerGameComboKey, idx) => {\n              const playersParticipated = playerGameComboKey?.split(',');\n              return (\n                <>\n                  <button class=\"accordion mb-2\"><div style={{color: 'white'}}><b>{playersParticipated.join(', ')}</b></div></button>\n                  <div class=\"panel\">\n                    <div style={{marginBottom: '25px'}}>\n                      <div><b>Players</b>{playerGameComboKey?.split(',')?.map(player => <li>{player}</li>)}</div>\n                      <table class=\"table history-table\">\n                        <thead>\n                          <tr>\n                            {\n                              playersParticipated?.map((player, idx) => \n                                <th>\n                                  { idx == 0 ? 'Winner' : (idx == 1 ? 'Runner' : `Place - ${idx+1}`) }\n                                </th>\n                              )\n                            }\n                            <th>Wins</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {\n                            Object?.keys(playerGameCombo[playerGameComboKey]?.gameWinsCount)?.map(gameWin => {\n                              return (\n                                <tr>\n                                  {gameWin?.split(',')?.map((player, idx) => <td>{player}</td> )}\n                                  <td>{playerGameCombo[playerGameComboKey]?.gameWinsCount[gameWin]}</td>\n                                </tr>\n                              )\n                            })\n                          }\n                        </tbody>\n                      </table>\n                      <table class=\"table player-stats-table\">\n                        <thead>\n                          <tr>\n                            <th>Player Name</th>\n                            <th>Winner</th>\n                            <th>Runner</th>\n                            <th>Out</th>\n                            <th>Games Played</th>\n                            <th>Win %</th>\n                            <th>Runner %</th>\n                            <th>Out %</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                            {playerGameCombo[playerGameComboKey]?.playerWinnerRunner?.map(player => \n                              <tr>\n                                <td>{player?.playerName}</td>\n                                <td>{player?.winner ? player?.winner : 0}</td>\n                                <td>{player?.runner ? player?.runner : 0}</td>\n                                <td>{player?.out ? player?.out : 0}</td>\n                                <td>{player?.gamesPlayed}</td>\n                                <td>{player?.winPercentage}</td>\n                                <td>{player?.runnerPercentage}</td>\n                                <td>{player?.outPercentage}</td>\n                              </tr>\n                            )}\n                          </tbody>\n                      </table>\n                      <h4 style={{marginTop: '50px', color: 'green'}}>Winner Chart</h4>\n                      <PieChart\n                        name={`winner-${idx}`}\n                        data={playerGameCombo?.[playerGameComboKey]?.winnerChartData}\n                        outerRadius={200}\n                        innerRadius={100}\n                      />\n                      <h4 style={{marginTop: '50px', color: 'green'}}>Runner Chart</h4>\n                      <PieChart\n                        name={`runner-${idx}`}\n                        data={playerGameCombo?.[playerGameComboKey]?.runnerChartData}\n                        outerRadius={200}\n                        innerRadius={100}\n                      />\n                      <h4 style={{marginTop: '50px', color: 'green'}}>Out Chart</h4>\n                      <PieChart\n                        name={`out-${idx}`}\n                        data={playerGameCombo?.[playerGameComboKey]?.outChartData}\n                        outerRadius={200}\n                        innerRadius={100}\n                      />\n                    </div>\n                  </div>\n                </>\n              )\n            })\n          }\n        </div>\n      }\n      {/* <h2>Accordion</h2>\n\n      <button class=\"accordion\">Section 1</button>\n      <div class=\"panel\">\n        <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>\n      </div>\n\n      <button class=\"accordion\">Section 2</button>\n      <div class=\"panel\">\n        <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>\n      </div>\n\n      <button class=\"accordion\">Section 3</button>\n      <div class=\"panel\">\n        <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>\n      </div> */}\n    </div>\n  );\n};\n\nexport default GameStats;","import React, { Fragment, useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { getGameHistoryData } from \"../firebase\";\nimport ReadOnlyRow from \"./ReadOnlyRow\";\nimport WinnerCup from './../assets/winner-cup.png';\n\nconst OldGame = (props) => {\n  const navigate = useNavigate();\n\n  const [game, setGame] = useState({});\n  const [players, setPlayers] = useState([]);\n\n  const [rummys, setRummys] = useState({});\n  const [drops, setDrops] = useState({});\n  const [outs, setOuts] = useState({});\n  const [seventyFives, setSeventyFives] = useState({});\n  const [playerStats, setPlayerStats] = useState({});\n\n  const gameId = useParams().gameId;\n\n  useEffect(async () => {\n    const gameHistory = await getGameHistoryData();\n\n    const game = gameHistory.find(game => game.utcDateMS == gameId);\n\n    const players = game?.playerRanking?.map(player => player.name);\n    setGame(game);\n    setPlayers(players);\n\n    const playerStats = {};\n    players?.forEach(player => {\n      playerStats[player] = {\n        rummys: 0,\n        drops: 0,\n        outs: 0,\n        seventyFives: 0\n      }\n    });\n\n    game?.roundsData?.forEach(round => {\n      players?.forEach(player => {\n        const points = Number(round[player]);\n        if (points === 0) {\n          playerStats[player].rummys += 1;\n        } else if (points === 25) {\n          playerStats[player].drops += 1;\n        } else if (points > 25) {\n          playerStats[player].outs += 1;\n        }\n        if (points == 75) {\n          playerStats[player].seventyFives += 1;\n        }\n      });\n    });\n    console.log(playerStats);\n    setPlayerStats(playerStats);\n  }, []);\n\n  return (\n    <div>\n      <br></br>\n      <button class=\"btn btn-success my-1\" onClick={() => navigate(\"/dashboard\")}>Dashboard</button>\n      <br></br>\n      <button class=\"btn btn-success my-1\" onClick={() => navigate(\"/gamehistory\")}>Game History</button>\n      <br></br>\n      <button class=\"btn btn-success my-1\" onClick={() => navigate(\"/gamestats\")}>Game Stats</button>\n      <h2 className=\"my-3\" style={{color: 'green'}}>Game Played on {game?.date}</h2>\n      <h4>Players</h4>\n      <ul>\n        {\n          players?.map(player => <li>{player}</li>)\n        }\n      </ul>\n      <h4>Rounds Played: {game?.rounds}</h4>\n      <h4>Winner: {game?.winner} <img src={WinnerCup} style={{width: '20px', height: '20px'}}></img></h4>\n      <h4>Runner: {game?.runner}</h4>\n      <h4 style={{color: 'green'}}>Game Details</h4>\n      <table class=\"table rummy-table\">\n        <thead>\n          <tr>\n            {players?.length > 0 && <th>Turn #</th>}\n            {players?.map(player => <th>{player}</th>)}\n          </tr>\n        </thead>\n        <tbody>\n          {game?.roundsData?.map((round, idx) => (\n            <Fragment>\n              <ReadOnlyRow\n                round={round}\n                roundIndex={idx}\n                players={players}\n                rounds={game?.roundsData}\n                oldGame={true}\n              />\n            </Fragment>\n          ))}\n          <tr class=\"total\">\n            <td><b>Total</b></td>\n            {\n              game?.playerRanking?.map(player => <td>{player?.total}</td>)\n            }\n          </tr>\n        </tbody>\n      </table>\n      <h4 style={{color: 'green'}}>Player Round Stats</h4>\n      <table class=\"table rummy-table\">\n        <thead>\n          <tr>\n            <th>Player Name</th>\n            <th>Rummys</th>\n            <th>Drops</th>\n            <th>Outs</th>\n            <th>75s</th>\n          </tr>\n        </thead>\n        <tbody>\n          {\n            players?.map(player => (\n              <tr>\n                <td>{player}</td>\n                <td>{playerStats[player]?.rummys}</td>\n                <td>{playerStats[player]?.drops}</td>\n                <td>{playerStats[player]?.outs}</td>\n                <td>{playerStats[player]?.seventyFives}</td>\n              </tr>\n            ))\n          }\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default OldGame;\n","import { Container } from \"react-bootstrap\";\nimport { AuthProvider } from \"../contexts/AuthContext\";\nimport Signup from \"./Signup\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport Reset from \"./Reset\";\nimport Dashboard from \"./Dashboard\";\nimport NewGame from \"./NewGame\";\nimport RegisterPlayer from \"./RegisterPlayer\";\nimport GameHistory from \"./GameHistory\";\nimport GameStats from \"./GameStats\";\nimport OldGame from \"./OldGame\";\n\nfunction App() {\n  return (\n    <Container className=\"d-flex align-items-center justify-content-center\" style={{ minHeight: \"100vh\" }}>\n      <div className=\"w-100\" style={{ maxWidth: '700px' }}>\n        <Router basename=\"rummy-score-tracker\">\n          <AuthProvider>\n            <Routes>\n              {/* <Route path=\"/signup\" component={Signup}/> */}\n              <Route exact path=\"/\" element={<Login />} />\n              <Route exact path=\"/register\" element={<Register />} />\n              <Route exact path=\"/reset\" element={<Reset />} />\n              <Route exact path=\"/dashboard\" element={<Dashboard />} />\n              <Route exact path=\"/registerplayer\" element={<RegisterPlayer />} />\n              <Route exact path=\"/newgame\" element={<NewGame />} />\n              <Route exact path=\"/gamehistory\" element={<GameHistory />} />\n              <Route exact path=\"/gamestats\" element={<GameStats />} />\n              <Route exact path=\"/gamehistory/:gameId\" element={<OldGame />} />\n            </Routes>\n          </AuthProvider>\n        </Router>\n      </div>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}