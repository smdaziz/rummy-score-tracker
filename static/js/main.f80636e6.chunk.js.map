{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/Login.js","components/Register.js","components/Reset.js","components/Dashboard.js","components/App.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","db","getFirestore","googleProvider","GoogleAuthProvider","signInWithGoogle","a","signInWithPopup","res","user","q","query","collection","where","uid","getDocs","docs","length","addDoc","name","displayName","authProvider","email","console","error","alert","message","logInWithEmailAndPassword","password","signInWithEmailAndPassword","registerWithEmailAndPassword","createUserWithEmailAndPassword","sendPasswordReset","sendPasswordResetEmail","logout","signOut","AuthContext","React","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","value","signup","Provider","Login","setEmail","setPassword","useAuthState","navigate","useNavigate","className","type","onChange","e","target","placeholder","onClick","to","Register","setName","Reset","Dashboard","fetchUserName","doc","data","App","Container","style","minHeight","maxWidth","basename","exact","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f80636e6.chunk.js","sourcesContent":["/*import { initializeApp } from 'firebase/app'\nimport { getAuth } from 'firebase/auth'\n\n// console.log('api key : ', process.env.RUMMY_SCORE_TRACKER_FIREBASE_API_KEY)\n\n// const app = initializeApp({\n//     apiKey: process.env.RUMMY_SCORE_TRACKER_FIREBASE_API_KEY,\n//     authDomain: process.env.RUMMY_SCORE_TRACKER_FIREBASE_AUTH_DOMAIN,\n//     projectId: process.env.RUMMY_SCORE_TRACKER_FIREBASE_PROJECT_ID,\n//     storageBucket: process.env.RUMMY_SCORE_TRACKER_FIREBASE_STORAGE_BUCKET,\n//     messagingSenderId: process.env.RUMMY_SCORE_TRACKER_FIREBASE_MESSAGING_SENDER_ID,\n//     appId: process.env.RUMMY_SCORE_TRACKER_FIREBASE_APP_ID\n// })\n\nconst app = initializeApp({\n  apiKey: \"AIzaSyDaSmceFuVUP36mJDmdqccjlxSxacjaVg0\",\n  authDomain: \"rummy-score-tracker.firebaseapp.com\",\n  projectId: \"rummy-score-tracker\",\n  storageBucket: \"rummy-score-tracker.appspot.com\",\n  messagingSenderId: \"420450892849\",\n  appId: \"1:420450892849:web:acdc3c6f8d9c875d116910\"\n})\n\nexport const auth = getAuth(app)\nexport default app*/\n\n\nimport { initializeApp } from \"firebase/app\";\nimport {\n  GoogleAuthProvider,\n  getAuth,\n  signInWithPopup,\n  signInWithEmailAndPassword,\n  createUserWithEmailAndPassword,\n  sendPasswordResetEmail,\n  signOut,\n} from \"firebase/auth\";\n\nimport {\n  getFirestore,\n  query,\n  getDocs,\n  collection,\n  where,\n  addDoc,\n} from \"firebase/firestore\";\n\nconst app = initializeApp({\n  apiKey: \"AIzaSyDaSmceFuVUP36mJDmdqccjlxSxacjaVg0\",\n  authDomain: \"rummy-score-tracker.firebaseapp.com\",\n  projectId: \"rummy-score-tracker\",\n  storageBucket: \"rummy-score-tracker.appspot.com\",\n  messagingSenderId: \"420450892849\",\n  appId: \"1:420450892849:web:acdc3c6f8d9c875d116910\"\n});\n\nconst auth = getAuth(app);\nconst db = getFirestore(app);\n\nconst googleProvider = new GoogleAuthProvider();\nconst signInWithGoogle = async () => {\n  try {\n    const res = await signInWithPopup(auth, googleProvider);\n    const user = res.user;\n    const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user.uid));\n    const docs = await getDocs(q);\n    if (docs.docs.length === 0) {\n      await addDoc(collection(db, \"users\"), {\n        uid: user.uid,\n        name: user.displayName,\n        authProvider: \"google\",\n        email: user.email,\n      });\n    }\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst logInWithEmailAndPassword = async (email, password) => {\n  try {\n    await signInWithEmailAndPassword(auth, email, password);\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst registerWithEmailAndPassword = async (name, email, password) => {\n  try {\n    const res = await createUserWithEmailAndPassword(auth, email, password);\n    const user = res.user;\n    await addDoc(collection(db, \"users\"), {\n      uid: user.uid,\n      name,\n      authProvider: \"local\",\n      email,\n    });\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst sendPasswordReset = async (email) => {\n  try {\n    await sendPasswordResetEmail(auth, email);\n    alert(\"Password reset link sent!\");\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst logout = () => {\n  signOut(auth);\n};\n\nexport {\n  auth,\n  db,\n  signInWithGoogle,\n  logInWithEmailAndPassword,\n  registerWithEmailAndPassword,\n  sendPasswordReset,\n  logout,\n};\n","import { createUserWithEmailAndPassword } from '@firebase/auth';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { auth } from '../firebase';\n\nconst AuthContext = React.createContext()\n\nexport const useAuth = () => {\n    return useContext(AuthContext);\n};\n\nexport function AuthProvider({ children }) {\n    const [currentUser, setCurrentUser] = useState();\n    const [loading, setLoading] = useState(true);\n\n    function signup(email, password) {\n        return createUserWithEmailAndPassword(auth, email, password);\n    }\n\n    useEffect(() => {\n        const unsubscribe = auth.onAuthStateChanged(user => {\n            setCurrentUser(user);\n            setLoading(false);\n        })\n\n        return unsubscribe;\n    }, []);\n\n\n    const value = {\n        currentUser,\n        signup\n    };\n\n    return (\n        <AuthContext.Provider value={value}>\n            {!loading && children}\n        </AuthContext.Provider>\n    );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { auth, logInWithEmailAndPassword, signInWithGoogle } from \"./../firebase\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\n// import \"./Login.css\";\nfunction Login() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, loading, error] = useAuthState(auth);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (loading) {\n      // maybe trigger a loading screen\n      return;\n    }\n    if (user) navigate(\"/dashboard\");\n  }, [user, loading]);\n  return (\n    <div className=\"login\">\n      <div className=\"login__container\">\n        <input\n          type=\"text\"\n          className=\"login__textBox\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          placeholder=\"E-mail Address\"\n        />\n        <input\n          type=\"password\"\n          className=\"login__textBox\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          placeholder=\"Password\"\n        />\n        <button\n          className=\"login__btn\"\n          onClick={() => logInWithEmailAndPassword(email, password)}\n        >\n          Login\n        </button>\n        <button className=\"login__btn login__google\" onClick={signInWithGoogle}>\n          Login with Google\n        </button>\n        <div>\n          <Link to=\"/reset\">Forgot Password</Link>\n        </div>\n        <div>\n          Don't have an account? <Link to=\"/register\">Register</Link> now.\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default Login;","import React, { useEffect, useState } from \"react\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport {\n  auth,\n  registerWithEmailAndPassword,\n  signInWithGoogle,\n} from \"./../firebase\";\n// import \"./Register.css\";\nfunction Register() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [user, loading, error] = useAuthState(auth);\n  // const history = useHistory();\n  const navigate = useNavigate();\n  const register = () => {\n    if (!name) alert(\"Please enter name\");\n    registerWithEmailAndPassword(name, email, password);\n  };\n  useEffect(() => {\n    if (loading) return;\n    // if (user) history.replace(\"/dashboard\");\n    if (user) navigate(\"/dashboard\");\n  }, [user, loading]);\n  return (\n    <div className=\"register\">\n      <div className=\"register__container\">\n        <input\n          type=\"text\"\n          className=\"register__textBox\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          placeholder=\"Full Name\"\n        />\n        <input\n          type=\"text\"\n          className=\"register__textBox\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          placeholder=\"E-mail Address\"\n        />\n        <input\n          type=\"password\"\n          className=\"register__textBox\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          placeholder=\"Password\"\n        />\n        <button className=\"register__btn\" onClick={register}>\n          Register\n        </button>\n        <button\n          className=\"register__btn register__google\"\n          onClick={signInWithGoogle}\n        >\n          Register with Google\n        </button>\n        <div>\n          Already have an account? <Link to=\"/\">Login</Link> now.\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default Register;\n","import React, { useEffect, useState } from \"react\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { auth, sendPasswordReset } from \"./../firebase\";\n// import \"./Reset.css\";\nfunction Reset() {\n  const [email, setEmail] = useState(\"\");\n  const [user, loading, error] = useAuthState(auth);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (loading) return;\n    if (user) navigate(\"/dashboard\");\n  }, [user, loading]);\n  return (\n    <div className=\"reset\">\n      <div className=\"reset__container\">\n        <input\n          type=\"text\"\n          className=\"reset__textBox\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          placeholder=\"E-mail Address\"\n        />\n        <button\n          className=\"reset__btn\"\n          onClick={() => sendPasswordReset(email)}\n        >\n          Send password reset email\n        </button>\n        <div>\n          Don't have an account? <Link to=\"/register\">Register</Link> now.\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default Reset;\n","import React, { useEffect, useState } from \"react\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useNavigate } from \"react-router-dom\";\n// import \"./Dashboard.css\";\nimport { auth, db, logout } from \"./../firebase\";\nimport { query, collection, getDocs, where } from \"firebase/firestore\";\nfunction Dashboard() {\n  const [user, loading, error] = useAuthState(auth);\n  const [name, setName] = useState(\"\");\n  const navigate = useNavigate();\n  const fetchUserName = async () => {\n    try {\n      const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user?.uid));\n      const doc = await getDocs(q);\n      const data = doc.docs[0].data();\n      setName(data.name);\n    } catch (err) {\n      console.error(err);\n      alert(\"An error occured while fetching user data\");\n    }\n  };\n  useEffect(() => {\n    if (loading) return;\n    if (!user) return navigate(\"/\");\n    fetchUserName();\n  }, [user, loading]);\n  return (\n    <div className=\"dashboard\">\n       <div className=\"dashboard__container\">\n        Logged in as\n         <div>{name}</div>\n         <div>{user?.email}</div>\n         <button className=\"dashboard__btn\" onClick={logout}>\n          Logout\n         </button>\n       </div>\n     </div>\n  );\n}\nexport default Dashboard;\n","import { Container } from \"react-bootstrap\";\nimport { AuthProvider } from \"../contexts/AuthContext\";\nimport Signup from \"./Signup\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport Reset from \"./Reset\";\nimport Dashboard from \"./Dashboard\";\n\nfunction App() {\n  return (\n    <Container className=\"d-flex align-items-center justify-content-center\" style={{ minHeight: \"100vh\" }}>\n      <div className=\"w-100\" style={{ maxWidth: '400px' }}>\n        <Router basename=\"rummy-score-tracker\">\n          <AuthProvider>\n            <Routes>\n              {/* <Route path=\"/signup\" component={Signup}/> */}\n              <Route exact path=\"/\" element={<Login />} />\n              <Route exact path=\"/register\" element={<Register />} />\n              <Route exact path=\"/reset\" element={<Reset />} />\n              <Route exact path=\"/dashboard\" element={<Dashboard />} />\n            </Routes>\n          </AuthProvider>\n        </Router>\n      </div>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}