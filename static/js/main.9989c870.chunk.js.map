{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/Login.js","components/Register.js","components/Reset.js","components/Dashboard.js","components/ReadOnlyRow.js","components/EditableRow.js","components/NewGame.js","components/App.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","db","getFirestore","googleProvider","GoogleAuthProvider","signInWithGoogle","a","signInWithPopup","res","user","q","query","collection","where","uid","getDocs","docs","length","addDoc","name","displayName","authProvider","email","console","error","alert","message","logInWithEmailAndPassword","password","signInWithEmailAndPassword","registerWithEmailAndPassword","createUserWithEmailAndPassword","sendPasswordReset","sendPasswordResetEmail","logout","signOut","saveRoundData","roundData","updateRoundData","id","forEach","d","docRef","doc","updateDoc","deleteRoundData","roundId","deleteDoc","getGameData","gameData","log","data","push","AuthContext","React","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","value","signup","Provider","Login","setEmail","setPassword","useAuthState","navigate","useNavigate","className","type","onChange","e","target","placeholder","onClick","to","Register","setName","Reset","Dashboard","fetchUserName","ReadOnlyRow","round","handleEditClick","handleDeleteClick","Object","keys","map","key","event","EditableRow","editRoundData","handleEditRoundChange","handleCancelClick","idx","required","NewGame","rounds","setRounds","addRoundData","setAddRoundData","setEditRoundData","editRoundId","setEditRoundId","index","preventDefault","fieldValue","newRoundData","roundValues","players","player","newRounds","findIndex","splice","setPlayers","playerName","setPlayerName","onSubmit","editedRound","newRound","nanoid","handleAddRoundChange","App","Container","style","minHeight","maxWidth","basename","exact","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQAkDMA,EAAMC,YAAc,CACxBC,OAAQ,0CACRC,WAAY,sCACZC,UAAW,sBACXC,cAAe,kCACfC,kBAAmB,eACnBC,MAAO,8CAGHC,EAAOC,YAAQT,GACfU,EAAKC,YAAaX,GAElBY,EAAiB,IAAIC,IACrBC,EAAgB,uCAAG,gCAAAC,EAAA,+EAEHC,YAAgBR,EAAMI,GAFnB,cAEfK,EAFe,OAGfC,EAAOD,EAAIC,KACXC,EAAIC,YAAMC,YAAWX,EAAI,SAAUY,YAAM,MAAO,KAAMJ,EAAKK,MAJ5C,SAKFC,YAAQL,GALN,UAMI,IANJ,OAMZM,KAAKC,OANO,kCAObC,YAAON,YAAWX,EAAI,SAAU,CACpCa,IAAKL,EAAKK,IACVK,KAAMV,EAAKW,YACXC,aAAc,SACdC,MAAOb,EAAKa,QAXK,0DAerBC,QAAQC,MAAR,MACAC,MAAM,KAAIC,SAhBW,0DAAH,qDAoBhBC,EAAyB,uCAAG,WAAOL,EAAOM,GAAd,SAAAtB,EAAA,+EAExBuB,YAA2B9B,EAAMuB,EAAOM,GAFhB,sDAI9BL,QAAQC,MAAR,MACAC,MAAM,KAAIC,SALoB,wDAAH,wDASzBI,EAA4B,uCAAG,WAAOX,EAAMG,EAAOM,GAApB,iBAAAtB,EAAA,+EAEfyB,YAA+BhC,EAAMuB,EAAOM,GAF7B,cAE3BpB,EAF2B,OAG3BC,EAAOD,EAAIC,KAHgB,SAI3BS,YAAON,YAAWX,EAAI,SAAU,CACpCa,IAAKL,EAAKK,IACVK,OACAE,aAAc,QACdC,UAR+B,uDAWjCC,QAAQC,MAAR,MACAC,MAAM,KAAIC,SAZuB,yDAAH,0DAgB5BM,EAAiB,uCAAG,WAAOV,GAAP,SAAAhB,EAAA,+EAEhB2B,YAAuBlC,EAAMuB,GAFb,OAGtBG,MAAM,6BAHgB,gDAKtBF,QAAQC,MAAR,MACAC,MAAM,KAAIC,SANY,yDAAH,sDAUjBQ,EAAS,WACbC,YAAQpC,IAGJqC,EAAa,uCAAG,WAAOC,GAAP,SAAA/B,EAAA,+EAEZY,YAAON,YAAWX,EAAI,QAASoC,GAFnB,sDAIlBd,QAAQC,MAAR,MACAC,MAAM,KAAIC,SALQ,wDAAH,sDASbY,EAAe,uCAAG,WAAOD,GAAP,eAAA/B,EAAA,sEAEdI,EAAIC,YAAMC,YAAWX,EAAI,QAASY,YAAM,KAAM,KAAMwB,EAAUE,KAFhD,SAGDxB,YAAQL,GAHP,cAIf8B,QAAL,uCAAa,WAAOC,GAAP,eAAAnC,EAAA,6DACLoC,EAASC,YAAI1C,EAAI,OAAQwC,EAAEF,IADtB,SAELK,YAAUF,EAAQL,GAFb,2CAAb,uDAJoB,gDASpBd,QAAQC,MAAR,MACAC,MAAM,KAAIC,SAVU,yDAAH,sDAcfmB,EAAe,uCAAG,WAAOC,GAAP,eAAAxC,EAAA,sEAEdI,EAAIC,YAAMC,YAAWX,EAAI,QAASY,YAAM,KAAM,KAAMiC,IAFtC,SAGD/B,YAAQL,GAHP,cAIf8B,QAAL,uCAAa,WAAOC,GAAP,eAAAnC,EAAA,6DACLoC,EAASC,YAAI1C,EAAI,OAAQwC,EAAEF,IADtB,SAELQ,YAAUL,GAFL,2CAAb,uDAJoB,gDASpBnB,QAAQC,MAAR,MACAC,MAAM,KAAIC,SAVU,yDAAH,sDAcfsB,EAAW,uCAAG,8BAAA1C,EAAA,6DACZ2C,EAAW,GADC,SAGVvC,EAAIC,YAAMC,YAAWX,EAAI,SAHf,SAIGc,YAAQL,GAJX,cAKX8B,SAAQ,SAACC,GACZlB,QAAQ2B,IAAIT,EAAEU,QACdF,EAASG,KAAKX,EAAEU,WAPF,gDAUhB5B,QAAQC,MAAR,MACAC,MAAM,KAAIC,SAXM,2CAaTuB,GAbS,+DAAH,qD,OC3JXI,EAAcC,IAAMC,gBAMnB,SAASC,EAAT,GAAqC,IAAbC,EAAY,EAAZA,SAC3B,EAAsCC,qBAAtC,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAMAC,qBAAU,WAMN,OALoBhE,EAAKiE,oBAAmB,SAAAvD,GACxCmD,EAAenD,GACfqD,GAAW,QAIhB,IAGH,IAAMG,EAAQ,CACVN,cACAO,OAhBJ,SAAgB5C,EAAOM,GACnB,OAAOG,YAA+BhC,EAAMuB,EAAOM,KAkBvD,OACI,cAACyB,EAAYc,SAAb,CAAsBF,MAAOA,EAA7B,UACMJ,GAAWJ,I,oDCkBVW,MAhDf,WACE,MAA0BV,mBAAS,IAAnC,mBAAOpC,EAAP,KAAc+C,EAAd,KACA,EAAgCX,mBAAS,IAAzC,mBAAO9B,EAAP,KAAiB0C,EAAjB,KACA,EAA+BC,YAAaxE,GAA5C,mBAAOU,EAAP,KAAaoD,EAAb,KACMW,GADN,KACiBC,eAQjB,OAPAV,qBAAU,WACJF,GAIApD,GAAM+D,EAAS,gBAClB,CAAC/D,EAAMoD,IAER,qBAAKa,UAAU,QAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,uBACEC,KAAK,OACLD,UAAU,iBACVT,MAAO3C,EACPsD,SAAU,SAACC,GAAD,OAAOR,EAASQ,EAAEC,OAAOb,QACnCc,YAAY,mBAEd,uBACEJ,KAAK,WACLD,UAAU,iBACVT,MAAOrC,EACPgD,SAAU,SAACC,GAAD,OAAOP,EAAYO,EAAEC,OAAOb,QACtCc,YAAY,aAEd,wBACEL,UAAU,aACVM,QAAS,kBAAMrD,EAA0BL,EAAOM,IAFlD,mBAMA,wBAAQ8C,UAAU,2BAA2BM,QAAS3E,EAAtD,+BAGA,8BACE,cAAC,IAAD,CAAM4E,GAAG,SAAT,+BAEF,0DACyB,cAAC,IAAD,CAAMA,GAAG,YAAT,sBADzB,iBCmBOC,MAxDf,WACE,MAA0BxB,mBAAS,IAAnC,mBAAOpC,EAAP,KAAc+C,EAAd,KACA,EAAgCX,mBAAS,IAAzC,mBAAO9B,EAAP,KAAiB0C,EAAjB,KACA,EAAwBZ,mBAAS,IAAjC,mBAAOvC,EAAP,KAAagE,EAAb,KACA,EAA+BZ,YAAaxE,GAA5C,mBAAOU,EAAP,KAAaoD,EAAb,KAEMW,GAFN,KAEiBC,eAUjB,OALAV,qBAAU,WACJF,GAEApD,GAAM+D,EAAS,gBAClB,CAAC/D,EAAMoD,IAER,qBAAKa,UAAU,WAAf,SACE,sBAAKA,UAAU,sBAAf,UACE,uBACEC,KAAK,OACLD,UAAU,oBACVT,MAAO9C,EACPyD,SAAU,SAACC,GAAD,OAAOM,EAAQN,EAAEC,OAAOb,QAClCc,YAAY,cAEd,uBACEJ,KAAK,OACLD,UAAU,oBACVT,MAAO3C,EACPsD,SAAU,SAACC,GAAD,OAAOR,EAASQ,EAAEC,OAAOb,QACnCc,YAAY,mBAEd,uBACEJ,KAAK,WACLD,UAAU,oBACVT,MAAOrC,EACPgD,SAAU,SAACC,GAAD,OAAOP,EAAYO,EAAEC,OAAOb,QACtCc,YAAY,aAEd,wBAAQL,UAAU,gBAAgBM,QAjCvB,WACV7D,GAAMM,MAAM,qBACjBK,EAA6BX,EAAMG,EAAOM,IA+BtC,sBAGA,wBACE8C,UAAU,iCACVM,QAAS3E,EAFX,kCAMA,4DAC2B,cAAC,IAAD,CAAM4E,GAAG,IAAT,mBAD3B,iBCrBOG,MA/Bf,WACE,MAA0B1B,mBAAS,IAAnC,mBAAOpC,EAAP,KAAc+C,EAAd,KACA,EAA+BE,YAAaxE,GAA5C,mBAAOU,EAAP,KAAaoD,EAAb,KACMW,GADN,KACiBC,eAKjB,OAJAV,qBAAU,WACJF,GACApD,GAAM+D,EAAS,gBAClB,CAAC/D,EAAMoD,IAER,qBAAKa,UAAU,QAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,uBACEC,KAAK,OACLD,UAAU,iBACVT,MAAO3C,EACPsD,SAAU,SAACC,GAAD,OAAOR,EAASQ,EAAEC,OAAOb,QACnCc,YAAY,mBAEd,wBACEL,UAAU,aACVM,QAAS,kBAAMhD,EAAkBV,IAFnC,uCAMA,0DACyB,cAAC,IAAD,CAAM2D,GAAG,YAAT,sBADzB,iBCUOI,MAlCf,WACE,MAA+Bd,YAAaxE,GAA5C,mBAAOU,EAAP,KAAaoD,EAAb,KACA,GADA,KACwBH,mBAAS,KAAjC,mBAAOvC,EAAP,KAAagE,EAAb,KACMX,EAAWC,cACXa,EAAa,uCAAG,gCAAAhF,EAAA,sEAEZI,EAAIC,YAAMC,YAAWX,EAAI,SAAUY,YAAM,MAAO,KAAR,OAAcJ,QAAd,IAAcA,OAAd,EAAcA,EAAMK,MAFhD,SAGAC,YAAQL,GAHR,OAGZiC,EAHY,OAIZQ,EAAOR,EAAI3B,KAAK,GAAGmC,OACzBgC,EAAQhC,EAAKhC,MALK,gDAOlBI,QAAQC,MAAR,MACAC,MAAM,6CARY,yDAAH,qDAgBnB,OALAsC,qBAAU,WACR,IAAIF,EACJ,OAAKpD,OACL6E,IADkBd,EAAS,OAE1B,CAAC/D,EAAMoD,IAER,qBAAKa,UAAU,YAAf,SACG,sBAAKA,UAAU,uBAAf,yBAEE,8BAAMvD,IACN,qCAAMV,QAAN,IAAMA,OAAN,EAAMA,EAAMa,QACZ,wBAAQoD,UAAU,gBAAgBM,QAAS,kBAAMR,EAAS,aAA1D,sBACA,wBAAQE,UAAU,iBAAiBM,QAAS9C,EAA5C,0B,wBCRMqD,G,MAvBK,SAAC,GAAmD,IAAD,EAAhDC,EAAgD,EAAhDA,MAAOC,EAAyC,EAAzCA,gBAAiBC,EAAwB,EAAxBA,kBAC7C,OACE,yCACGC,OAAOC,KAAKJ,UADf,aACG,EAAoBK,KAAI,SAAAC,GACvB,GAAW,OAARA,EACD,OAAQ,6BAAKN,EAAMM,QAGvB,+BACE,wBACEnB,KAAK,SACLK,QAAS,SAACe,GAAD,OAAWN,EAAgBM,EAAOP,IAF7C,kBAMA,wBAAQb,KAAK,SAASK,QAAS,kBAAMU,EAAkBF,EAAMjD,KAA7D,4BCoBOyD,EAnCK,SAAC,GAId,IAAD,EAHJC,EAGI,EAHJA,cACAC,EAEI,EAFJA,sBACAC,EACI,EADJA,kBAEA,OACE,yCACGR,OAAOC,KAAKK,UADf,aACG,EAA4BJ,KAAI,SAACC,EAAKM,GACrC,GAAW,OAARN,EACD,OACE,6BACE,uBACEnB,KAAK,OACL0B,SAAS,WACTtB,YAAY,kBACZ5D,KAAK,WACL8C,MAAOgC,EAAcH,GACrBlB,SAAU,SAACC,GACTqB,EAAsBrB,EAAGuB,WAOrC,+BACE,wBAAQzB,KAAK,SAAb,kBACA,wBAAQA,KAAK,SAASK,QAASmB,EAA/B,2BC6KOG,EAjMC,WACd,IAAM9B,EAAWC,cAEjB,EAA4Bf,mBAAS,IAArC,mBAAO6C,EAAP,KAAeC,EAAf,KACA,EAAwC9C,mBAAS,IAAjD,mBAAO+C,EAAP,KAAqBC,EAArB,KAGA3C,oBAAS,sBAAC,4BAAAzD,EAAA,sEACe0C,IADf,OACFC,EADE,OAERuD,EAAUvD,GAFF,2CAGP,IAEH,MAA0CS,mBAAS,IAAnD,mBAAOuC,EAAP,KAAsBU,EAAtB,KAGA,EAAsCjD,mBAAS,MAA/C,mBAAOkD,EAAP,KAAoBC,EAApB,KAaMX,EAAwB,SAACH,EAAOe,GACpCf,EAAMgB,iBAEN,IAAMC,EAAajB,EAAMjB,OAAOb,MAE1BgD,EAAY,eAAQhB,GAC1BgB,EAAaH,GAASE,EAEtBL,EAAiBM,IA0CbxB,EAAkB,SAACM,EAAOP,GAC9BO,EAAMgB,iBACNF,EAAerB,EAAMjD,IAErB,IAAM2E,EAAc,GAEb,OAAPC,QAAO,IAAPA,KAAStB,KAAI,SAACuB,EAAQhB,GACpBc,EAAYd,GAAOZ,EAAMY,MAG3BO,EAAiBO,IAGbf,EAAoB,WACxBU,EAAe,OAGXnB,EAAoB,SAAC5C,GACzB,IAAMuE,EAAS,YAAOd,GAEhBO,EAAQP,EAAOe,WAAU,SAAC9B,GAAD,OAAWA,EAAMjD,KAAOO,KAEvDuE,EAAUE,OAAOT,EAAO,GAExBN,EAAUa,GACVxE,EAAgBC,IAGlB,EAA8BY,mBAAS,IAAvC,mBAAOyD,EAAP,KAAgBK,EAAhB,KACA,EAAoC9D,mBAAS,IAA7C,mBAAO+D,EAAP,KAAmBC,EAAnB,KAmBA,OACE,gCACE,8CACA,uBAAMC,SAZoB,SAAC5B,GAC7BA,EAAMgB,iBAENI,EAAQ/D,KAAKqE,GACbC,EAAc,IAEdF,EAAWL,IAMT,UACE,uBACExC,KAAK,OACLxD,KAAK,SACL8C,MAAOwD,EACPpB,SAAS,WACTtB,YAAY,uBACZH,SA3BsB,SAACmB,GAC7BA,EAAMgB,iBAEN,IAAMC,EAAajB,EAAMjB,OAAOb,MAEhCyD,EAAcV,MAwBV,wBAAQrC,KAAK,SAAb,2BAEF,sBAAKD,UAAU,gBAAf,UACE,sBAAMiD,SApFkB,SAAC5B,GAC7BA,EAAMgB,iBAEN,IAAMa,EAAc,CAClBrF,GAAIqE,GAEC,OAAPO,QAAO,IAAPA,KAAStB,KAAI,SAACuB,EAAQhB,GACpBwB,EAAYxB,GAAOH,EAAcG,MAGnC,IAAMiB,EAAS,YAAOd,GAItBc,EAFcd,EAAOe,WAAU,SAAC9B,GAAD,OAAWA,EAAMjD,KAAOqE,MAEpCgB,EAEnBpB,EAAUa,GACVR,EAAe,MACfvE,EAAgBsF,IAkEZ,SACE,kCACE,gCACE,oCACGT,QADH,IACGA,OADH,EACGA,EAAStB,KAAI,SAAAuB,GAAM,OAAI,6BAAKA,WAGjC,uCACGb,QADH,IACGA,OADH,EACGA,EAAQV,KAAI,SAACL,EAAOY,GAAR,OACX,cAAC,WAAD,UACGQ,IAAgBpB,EAAMjD,GACrB,cAAC,EAAD,CACE0D,cAAeA,EACfC,sBAAuBA,EACvBC,kBAAmBA,IAGrB,cAAC,EAAD,CACEX,MAAOA,EACPC,gBAAiBA,EACjBC,kBAAmBA,gBASjC,oDACA,uBAAMiC,SApIiB,SAAC5B,GAAW,IAAD,EACtCA,EAAMgB,iBAEN,IAAMc,EAAW,CACftF,GAAIuF,eAEC,OAAPX,QAAO,IAAPA,KAAStB,KAAI,SAACuB,EAAQhB,GACpByB,EAASzB,GAAOK,EAAaL,MAG/B,IAAMiB,EAAS,sBAAOd,GAAP,CAAesB,IAC9B,UAAAlC,OAAOC,KAAKa,UAAZ,SAA2BZ,KAAI,SAAC1C,EAAMiD,GACpCK,EAAaL,GAAO,MAEtBI,EAAUa,GACVjF,EAAcyF,IAqHV,iBACGV,QADH,IACGA,OADH,EACGA,EAAStB,KAAI,SAACuB,EAAQhB,GAAT,OACd,uBACEzB,KAAK,OACLxD,KAAK,WACL8C,MAAOwC,EAAaL,GACpBC,SAAS,WACTtB,YAAY,kBACZH,SACE,SAACC,IAnKgB,SAACkB,EAAOe,GACnCf,EAAMgB,iBAEN,IAAMC,EAAajB,EAAMjB,OAAOb,MAE1BgD,EAAY,eAAQR,GAC1BQ,EAAaH,GAASE,EAEtBN,EAAgBO,GA4JJc,CAAqBlD,EAAGuB,SAG9B,wBAAQzB,KAAK,SAAb,uBAIJ,wBAAQD,UAAU,gBAAgBM,QAAS,kBAAMR,EAAS,eAA1D,2BCtKSwD,MArBf,WACE,OACE,cAACC,EAAA,EAAD,CAAWvD,UAAU,mDAAmDwD,MAAO,CAAEC,UAAW,SAA5F,SACE,qBAAKzD,UAAU,QAAQwD,MAAO,CAAEE,SAAU,SAA1C,SACE,cAAC,IAAD,CAAQC,SAAS,sBAAjB,SACE,cAAC7E,EAAD,UACE,eAAC,IAAD,WAEE,cAAC,IAAD,CAAO8E,OAAK,EAACC,KAAK,IAAIC,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,YAAYC,QAAS,cAAC,EAAD,MACvC,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,SAASC,QAAS,cAAC,EAAD,MACpC,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,aAAaC,QAAS,cAAC,EAAD,MACxC,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,WAAWC,QAAS,cAAC,EAAD,kB,MCjBpDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9989c870.chunk.js","sourcesContent":["/*import { initializeApp } from 'firebase/app'\nimport { getAuth } from 'firebase/auth'\n\n// console.log('api key : ', process.env.RUMMY_SCORE_TRACKER_FIREBASE_API_KEY)\n\n// const app = initializeApp({\n//     apiKey: process.env.RUMMY_SCORE_TRACKER_FIREBASE_API_KEY,\n//     authDomain: process.env.RUMMY_SCORE_TRACKER_FIREBASE_AUTH_DOMAIN,\n//     projectId: process.env.RUMMY_SCORE_TRACKER_FIREBASE_PROJECT_ID,\n//     storageBucket: process.env.RUMMY_SCORE_TRACKER_FIREBASE_STORAGE_BUCKET,\n//     messagingSenderId: process.env.RUMMY_SCORE_TRACKER_FIREBASE_MESSAGING_SENDER_ID,\n//     appId: process.env.RUMMY_SCORE_TRACKER_FIREBASE_APP_ID\n// })\n\nconst app = initializeApp({\n  apiKey: \"AIzaSyDaSmceFuVUP36mJDmdqccjlxSxacjaVg0\",\n  authDomain: \"rummy-score-tracker.firebaseapp.com\",\n  projectId: \"rummy-score-tracker\",\n  storageBucket: \"rummy-score-tracker.appspot.com\",\n  messagingSenderId: \"420450892849\",\n  appId: \"1:420450892849:web:acdc3c6f8d9c875d116910\"\n})\n\nexport const auth = getAuth(app)\nexport default app*/\n\n\nimport { initializeApp } from \"firebase/app\";\nimport {\n  GoogleAuthProvider,\n  getAuth,\n  signInWithPopup,\n  signInWithEmailAndPassword,\n  createUserWithEmailAndPassword,\n  sendPasswordResetEmail,\n  signOut,\n} from \"firebase/auth\";\n\nimport {\n  getFirestore,\n  query,\n  getDocs,\n  collection,\n  where,\n  addDoc,\n  updateDoc,\n  doc,\n  deleteDoc\n} from \"firebase/firestore\";\n\nconst app = initializeApp({\n  apiKey: \"AIzaSyDaSmceFuVUP36mJDmdqccjlxSxacjaVg0\",\n  authDomain: \"rummy-score-tracker.firebaseapp.com\",\n  projectId: \"rummy-score-tracker\",\n  storageBucket: \"rummy-score-tracker.appspot.com\",\n  messagingSenderId: \"420450892849\",\n  appId: \"1:420450892849:web:acdc3c6f8d9c875d116910\"\n});\n\nconst auth = getAuth(app);\nconst db = getFirestore(app);\n\nconst googleProvider = new GoogleAuthProvider();\nconst signInWithGoogle = async () => {\n  try {\n    const res = await signInWithPopup(auth, googleProvider);\n    const user = res.user;\n    const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user.uid));\n    const docs = await getDocs(q);\n    if (docs.docs.length === 0) {\n      await addDoc(collection(db, \"users\"), {\n        uid: user.uid,\n        name: user.displayName,\n        authProvider: \"google\",\n        email: user.email,\n      });\n    }\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst logInWithEmailAndPassword = async (email, password) => {\n  try {\n    await signInWithEmailAndPassword(auth, email, password);\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst registerWithEmailAndPassword = async (name, email, password) => {\n  try {\n    const res = await createUserWithEmailAndPassword(auth, email, password);\n    const user = res.user;\n    await addDoc(collection(db, \"users\"), {\n      uid: user.uid,\n      name,\n      authProvider: \"local\",\n      email,\n    });\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst sendPasswordReset = async (email) => {\n  try {\n    await sendPasswordResetEmail(auth, email);\n    alert(\"Password reset link sent!\");\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst logout = () => {\n  signOut(auth);\n};\n\nconst saveRoundData = async (roundData) => {\n  try {\n    await addDoc(collection(db, \"game\"), roundData);\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst updateRoundData = async (roundData) => {\n  try {\n    const q = query(collection(db, \"game\"), where(\"id\", \"==\", roundData.id));\n    const docs = await getDocs(q);\n    docs.forEach(async (d) => {\n      const docRef = doc(db, \"game\", d.id);\n      await updateDoc(docRef, roundData);\n    })\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst deleteRoundData = async (roundId) => {\n  try {\n    const q = query(collection(db, \"game\"), where(\"id\", \"==\", roundId));\n    const docs = await getDocs(q);\n    docs.forEach(async (d) => {\n      const docRef = doc(db, \"game\", d.id);\n      await deleteDoc(docRef);\n    })\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst getGameData = async () => {\n  const gameData = [];\n  try {\n    const q = query(collection(db, \"game\"));\n    const docs = await getDocs(q);\n    docs.forEach((d) => {\n      console.log(d.data());\n      gameData.push(d.data());\n    })\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  } finally {\n    return gameData;\n  }\n};\n\nexport {\n  auth,\n  db,\n  signInWithGoogle,\n  logInWithEmailAndPassword,\n  registerWithEmailAndPassword,\n  sendPasswordReset,\n  logout,\n  saveRoundData,\n  updateRoundData,\n  deleteRoundData,\n  getGameData\n};\n","import { createUserWithEmailAndPassword } from '@firebase/auth';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { auth } from '../firebase';\n\nconst AuthContext = React.createContext()\n\nexport const useAuth = () => {\n    return useContext(AuthContext);\n};\n\nexport function AuthProvider({ children }) {\n    const [currentUser, setCurrentUser] = useState();\n    const [loading, setLoading] = useState(true);\n\n    function signup(email, password) {\n        return createUserWithEmailAndPassword(auth, email, password);\n    }\n\n    useEffect(() => {\n        const unsubscribe = auth.onAuthStateChanged(user => {\n            setCurrentUser(user);\n            setLoading(false);\n        })\n\n        return unsubscribe;\n    }, []);\n\n\n    const value = {\n        currentUser,\n        signup\n    };\n\n    return (\n        <AuthContext.Provider value={value}>\n            {!loading && children}\n        </AuthContext.Provider>\n    );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { auth, logInWithEmailAndPassword, signInWithGoogle } from \"./../firebase\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\n// import \"./Login.css\";\nfunction Login() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, loading, error] = useAuthState(auth);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (loading) {\n      // maybe trigger a loading screen\n      return;\n    }\n    if (user) navigate(\"/dashboard\");\n  }, [user, loading]);\n  return (\n    <div className=\"login\">\n      <div className=\"login__container\">\n        <input\n          type=\"text\"\n          className=\"login__textBox\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          placeholder=\"E-mail Address\"\n        />\n        <input\n          type=\"password\"\n          className=\"login__textBox\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          placeholder=\"Password\"\n        />\n        <button\n          className=\"login__btn\"\n          onClick={() => logInWithEmailAndPassword(email, password)}\n        >\n          Login\n        </button>\n        <button className=\"login__btn login__google\" onClick={signInWithGoogle}>\n          Login with Google\n        </button>\n        <div>\n          <Link to=\"/reset\">Forgot Password</Link>\n        </div>\n        <div>\n          Don't have an account? <Link to=\"/register\">Register</Link> now.\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default Login;","import React, { useEffect, useState } from \"react\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport {\n  auth,\n  registerWithEmailAndPassword,\n  signInWithGoogle,\n} from \"./../firebase\";\n// import \"./Register.css\";\nfunction Register() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [user, loading, error] = useAuthState(auth);\n  // const history = useHistory();\n  const navigate = useNavigate();\n  const register = () => {\n    if (!name) alert(\"Please enter name\");\n    registerWithEmailAndPassword(name, email, password);\n  };\n  useEffect(() => {\n    if (loading) return;\n    // if (user) history.replace(\"/dashboard\");\n    if (user) navigate(\"/dashboard\");\n  }, [user, loading]);\n  return (\n    <div className=\"register\">\n      <div className=\"register__container\">\n        <input\n          type=\"text\"\n          className=\"register__textBox\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          placeholder=\"Full Name\"\n        />\n        <input\n          type=\"text\"\n          className=\"register__textBox\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          placeholder=\"E-mail Address\"\n        />\n        <input\n          type=\"password\"\n          className=\"register__textBox\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          placeholder=\"Password\"\n        />\n        <button className=\"register__btn\" onClick={register}>\n          Register\n        </button>\n        <button\n          className=\"register__btn register__google\"\n          onClick={signInWithGoogle}\n        >\n          Register with Google\n        </button>\n        <div>\n          Already have an account? <Link to=\"/\">Login</Link> now.\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default Register;\n","import React, { useEffect, useState } from \"react\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { auth, sendPasswordReset } from \"./../firebase\";\n// import \"./Reset.css\";\nfunction Reset() {\n  const [email, setEmail] = useState(\"\");\n  const [user, loading, error] = useAuthState(auth);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (loading) return;\n    if (user) navigate(\"/dashboard\");\n  }, [user, loading]);\n  return (\n    <div className=\"reset\">\n      <div className=\"reset__container\">\n        <input\n          type=\"text\"\n          className=\"reset__textBox\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          placeholder=\"E-mail Address\"\n        />\n        <button\n          className=\"reset__btn\"\n          onClick={() => sendPasswordReset(email)}\n        >\n          Send password reset email\n        </button>\n        <div>\n          Don't have an account? <Link to=\"/register\">Register</Link> now.\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default Reset;\n","import React, { useEffect, useState } from \"react\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useNavigate } from \"react-router-dom\";\n// import \"./Dashboard.css\";\nimport { auth, db, logout } from \"./../firebase\";\nimport { query, collection, getDocs, where } from \"firebase/firestore\";\nfunction Dashboard() {\n  const [user, loading, error] = useAuthState(auth);\n  const [name, setName] = useState(\"\");\n  const navigate = useNavigate();\n  const fetchUserName = async () => {\n    try {\n      const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user?.uid));\n      const doc = await getDocs(q);\n      const data = doc.docs[0].data();\n      setName(data.name);\n    } catch (err) {\n      console.error(err);\n      alert(\"An error occured while fetching user data\");\n    }\n  };\n  useEffect(() => {\n    if (loading) return;\n    if (!user) return navigate(\"/\");\n    fetchUserName();\n  }, [user, loading]);\n  return (\n    <div className=\"dashboard\">\n       <div className=\"dashboard__container\">\n        Logged in as\n         <div>{name}</div>\n         <div>{user?.email}</div>\n         <button className=\"dashboard_btn\" onClick={() => navigate(\"/newgame\")}>New Game</button>\n         <button className=\"dashboard__btn\" onClick={logout}>\n          Logout\n         </button>\n       </div>\n     </div>\n  );\n}\nexport default Dashboard;\n","import React from \"react\";\n\nconst ReadOnlyRow = ({ round, handleEditClick, handleDeleteClick }) => {\n  return (\n    <tr>\n      {Object.keys(round)?.map(key => {\n        if(key !== 'id') {\n          return (<td>{round[key]}</td>);\n        }\n      })}\n      <td>\n        <button\n          type=\"button\"\n          onClick={(event) => handleEditClick(event, round)}\n        >\n          Edit\n        </button>\n        <button type=\"button\" onClick={() => handleDeleteClick(round.id)}>\n          Delete\n        </button>\n      </td>\n    </tr>\n  );\n};\n\nexport default ReadOnlyRow;","import React from \"react\";\n\nconst EditableRow = ({\n  editRoundData,\n  handleEditRoundChange,\n  handleCancelClick,\n}) => {\n  return (\n    <tr>\n      {Object.keys(editRoundData)?.map((key, idx) => {\n        if(key !== 'id') {\n          return (\n            <td>\n              <input\n                type=\"text\"\n                required=\"required\"\n                placeholder=\"Enter points...\"\n                name=\"fullName\"\n                value={editRoundData[key]}\n                onChange={(e) => {\n                  handleEditRoundChange(e, idx);\n                }}\n              ></input>\n            </td>\n          );\n        }\n      })}\n      <td>\n        <button type=\"submit\">Save</button>\n        <button type=\"button\" onClick={handleCancelClick}>\n          Cancel\n        </button>\n      </td>\n    </tr>\n  );\n};\n\nexport default EditableRow;","import React, { useState, Fragment, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { nanoid } from \"nanoid\";\nimport \"./NewGame.css\";\nimport ReadOnlyRow from \"./ReadOnlyRow\";\nimport EditableRow from \"./EditableRow\";\nimport { deleteRoundData, getGameData, saveRoundData, updateRoundData } from \"../firebase\";\n\nconst NewGame = () => {\n  const navigate = useNavigate();\n\n  const [rounds, setRounds] = useState([]);\n  const [addRoundData, setAddRoundData] = useState({\n  });\n\n  useEffect(async () => {\n    const gameData = await getGameData();\n    setRounds(gameData);\n  }, []);\n\n  const [editRoundData, setEditRoundData] = useState({\n  });\n\n  const [editRoundId, setEditRoundId] = useState(null);\n\n  const handleAddRoundChange = (event, index) => {\n    event.preventDefault();\n\n    const fieldValue = event.target.value;\n\n    const newRoundData = { ...addRoundData };\n    newRoundData[index] = fieldValue;\n\n    setAddRoundData(newRoundData);\n  };\n\n  const handleEditRoundChange = (event, index) => {\n    event.preventDefault();\n\n    const fieldValue = event.target.value;\n\n    const newRoundData = { ...editRoundData };\n    newRoundData[index] = fieldValue;\n\n    setEditRoundData(newRoundData);\n  };\n\n  const handleAddRoundSubmit = (event) => {\n    event.preventDefault();\n\n    const newRound = {\n      id: nanoid()\n    };\n    players?.map((player, idx) => {\n      newRound[idx] = addRoundData[idx];\n    });\n\n    const newRounds = [...rounds, newRound];\n    Object.keys(addRoundData)?.map((data, idx) => {\n      addRoundData[idx] = '';\n    });\n    setRounds(newRounds);\n    saveRoundData(newRound);\n  };\n\n  const handleEditRoundSubmit = (event) => {\n    event.preventDefault();\n\n    const editedRound = {\n      id: editRoundId\n    };\n    players?.map((player, idx) => {\n      editedRound[idx] = editRoundData[idx];\n    });\n\n    const newRounds = [...rounds];\n\n    const index = rounds.findIndex((round) => round.id === editRoundId);\n\n    newRounds[index] = editedRound;\n\n    setRounds(newRounds);\n    setEditRoundId(null);\n    updateRoundData(editedRound);\n  };\n\n  const handleEditClick = (event, round) => {\n    event.preventDefault();\n    setEditRoundId(round.id);\n\n    const roundValues = {\n    };\n    players?.map((player, idx) => {\n      roundValues[idx] = round[idx];\n    });\n\n    setEditRoundData(roundValues);\n  };\n\n  const handleCancelClick = () => {\n    setEditRoundId(null);\n  };\n\n  const handleDeleteClick = (roundId) => {\n    const newRounds = [...rounds];\n\n    const index = rounds.findIndex((round) => round.id === roundId);\n\n    newRounds.splice(index, 1);\n\n    setRounds(newRounds);\n    deleteRoundData(roundId);\n  };\n\n  const [players, setPlayers] = useState([]);\n  const [playerName, setPlayerName] = useState('');\n\n  const handleAddPlayerChange = (event) => {\n    event.preventDefault();\n\n    const fieldValue = event.target.value;\n\n    setPlayerName(fieldValue);\n  };\n\n  const handleAddPlayerSubmit = (event) => {\n    event.preventDefault();\n\n    players.push(playerName);\n    setPlayerName('');\n\n    setPlayers(players);\n  };\n\n  return (\n    <div>\n      <h2>Add a Player</h2>\n      <form onSubmit={handleAddPlayerSubmit}>\n        <input\n          type=\"text\"\n          name=\"player\"\n          value={playerName}\n          required=\"required\"\n          placeholder=\"Enter Player Name...\"\n          onChange={handleAddPlayerChange}\n        />\n        <button type=\"submit\">Add Player</button>\n      </form>\n      <div className=\"app-container\">\n        <form onSubmit={handleEditRoundSubmit}>\n          <table>\n            <thead>\n              <tr>\n                {players?.map(player => <th>{player}</th>)}\n              </tr>\n            </thead>\n            <tbody>\n              {rounds?.map((round, idx) => (\n                <Fragment>\n                  {editRoundId === round.id ? (\n                    <EditableRow\n                      editRoundData={editRoundData}\n                      handleEditRoundChange={handleEditRoundChange}\n                      handleCancelClick={handleCancelClick}\n                    />\n                  ) : (\n                    <ReadOnlyRow\n                      round={round}\n                      handleEditClick={handleEditClick}\n                      handleDeleteClick={handleDeleteClick}\n                    />\n                  )}\n                </Fragment>\n              ))}\n            </tbody>\n          </table>\n        </form>\n\n        <h2>Enter Round Scores</h2>\n        <form onSubmit={handleAddRoundSubmit}>\n          {players?.map((player, idx) => \n          <input\n            type=\"text\"\n            name=\"fullName\"\n            value={addRoundData[idx]}\n            required=\"required\"\n            placeholder=\"Enter points...\"\n            onChange={\n              (e) => {\n                handleAddRoundChange(e, idx);\n              }}\n          />)}\n          <button type=\"submit\">Add</button>\n        </form>\n\n      </div>\n      <button className=\"dashboard_btn\" onClick={() => navigate(\"/dashboard\")}>Dashboard</button>\n    </div>\n  );\n};\n\nexport default NewGame;","import { Container } from \"react-bootstrap\";\nimport { AuthProvider } from \"../contexts/AuthContext\";\nimport Signup from \"./Signup\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport Reset from \"./Reset\";\nimport Dashboard from \"./Dashboard\";\nimport NewGame from \"./NewGame\";\n\nfunction App() {\n  return (\n    <Container className=\"d-flex align-items-center justify-content-center\" style={{ minHeight: \"100vh\" }}>\n      <div className=\"w-100\" style={{ maxWidth: '700px' }}>\n        <Router basename=\"rummy-score-tracker\">\n          <AuthProvider>\n            <Routes>\n              {/* <Route path=\"/signup\" component={Signup}/> */}\n              <Route exact path=\"/\" element={<Login />} />\n              <Route exact path=\"/register\" element={<Register />} />\n              <Route exact path=\"/reset\" element={<Reset />} />\n              <Route exact path=\"/dashboard\" element={<Dashboard />} />\n              <Route exact path=\"/newgame\" element={<NewGame />} />\n            </Routes>\n          </AuthProvider>\n        </Router>\n      </div>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}