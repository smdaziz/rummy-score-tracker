{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/Signup.js","components/App.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","AuthContext","React","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","signup","email","password","createUserWithEmailAndPassword","Provider","Signup","emailRef","useRef","passwordRef","passwordConfirmRef","useContext","error","setError","e","a","preventDefault","current","console","log","Card","Body","className","Alert","variant","Form","onSubmit","Group","id","Label","Control","type","ref","required","Button","disabled","App","Container","style","minHeight","maxWidth","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNAcMA,EAAMC,YAAc,CACxBC,OAAQ,0CACRC,WAAY,sCACZC,UAAW,sBACXC,cAAe,kCACfC,kBAAmB,eACnBC,MAAO,8CAGIC,EAAOC,YAAQT,G,OCnBtBU,EAAcC,IAAMC,gBAMnB,SAASC,EAAT,GAAqC,IAAbC,EAAY,EAAZA,SAC3B,EAAsCC,qBAAtC,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAMAC,qBAAU,WAMN,OALoBZ,EAAKa,oBAAmB,SAAAC,GACxCL,EAAeK,GACfH,GAAW,QAIhB,IAGH,IAAMI,EAAQ,CACVP,cACAQ,OAhBJ,SAAgBC,EAAOC,GACnB,OAAOC,YAA+BnB,EAAMiB,EAAOC,KAkBvD,OACI,cAAChB,EAAYkB,SAAb,CAAsBL,MAAOA,EAA7B,UACML,GAAWJ,I,2DC/BV,SAASe,IACpB,IAAMC,EAAWC,mBACXC,EAAcD,mBACdE,EAAqBF,mBACrBP,EDDCU,qBAAWxB,GCElB,EAA0BK,mBAAS,IAAnC,mBAAOoB,EAAP,KAAcC,EAAd,KACA,EAA8BrB,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAN6B,4CAQ7B,WAA4BkB,GAA5B,SAAAC,EAAA,yDACID,EAAEE,iBAECP,EAAYQ,QAAQjB,QAAUU,EAAmBO,QAAQjB,MAHhE,yCAIea,EAAS,2BAJxB,uBAQQA,EAAS,IACTjB,GAAW,GATnB,SAUcK,EAAOM,EAASU,QAAQjB,MAAOS,EAAYQ,QAAQjB,OAVjE,yDAYQkB,QAAQC,IAAI,iBACZN,EAAS,+BAbjB,QAgBIjB,GAAW,GAhBf,2DAR6B,sBA2B7B,OACI,qCACI,cAACwB,EAAA,EAAD,UACI,eAACA,EAAA,EAAKC,KAAN,WACI,oBAAIC,UAAU,mBAAd,qBACCV,GAAS,cAACW,EAAA,EAAD,CAAOC,QAAQ,SAAf,SAAyBZ,IACnC,eAACa,EAAA,EAAD,CAAMC,SAjCO,4CAiCb,UACI,eAACD,EAAA,EAAKE,MAAN,CAAYC,GAAG,QAAf,UACI,cAACH,EAAA,EAAKI,MAAN,oBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,QAAQC,IAAKzB,EAAU0B,UAAQ,OAEtD,eAACR,EAAA,EAAKE,MAAN,CAAYC,GAAG,WAAf,UACI,cAACH,EAAA,EAAKI,MAAN,uBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,WAAWC,IAAKvB,EAAawB,UAAQ,OAE5D,eAACR,EAAA,EAAKE,MAAN,CAAYC,GAAG,mBAAf,UACI,cAACH,EAAA,EAAKI,MAAN,oCACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,WAAWC,IAAKtB,EAAoBuB,UAAQ,OAEnE,cAACC,EAAA,EAAD,CAAQC,SAAUxC,EAAS2B,UAAU,aAAaS,KAAK,SAAvD,6BAIZ,qBAAKT,UAAU,yBAAf,gD,oBC/BGc,MAlBf,WACE,OACE,cAACC,EAAA,EAAD,CAAWf,UAAU,mDAAmDgB,MAAO,CAAEC,UAAW,SAA5F,SACE,sBAAKjB,UAAU,QAAQgB,MAAO,CAAEE,SAAU,SAA1C,UACE,cAAC,IAAD,UACE,cAAClD,EAAD,UACE,cAAC,IAAD,UAEE,cAAC,IAAD,CAAOmD,KAAK,UAAUC,UAAW,cAACpC,EAAD,YAIvC,cAACA,EAAD,U,MCZRqC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.180df8e8.chunk.js","sourcesContent":["import { initializeApp } from 'firebase/app'\nimport { getAuth } from 'firebase/auth'\n\n// console.log('api key : ', process.env.RUMMY_SCORE_TRACKER_FIREBASE_API_KEY)\n\n// const app = initializeApp({\n//     apiKey: process.env.RUMMY_SCORE_TRACKER_FIREBASE_API_KEY,\n//     authDomain: process.env.RUMMY_SCORE_TRACKER_FIREBASE_AUTH_DOMAIN,\n//     projectId: process.env.RUMMY_SCORE_TRACKER_FIREBASE_PROJECT_ID,\n//     storageBucket: process.env.RUMMY_SCORE_TRACKER_FIREBASE_STORAGE_BUCKET,\n//     messagingSenderId: process.env.RUMMY_SCORE_TRACKER_FIREBASE_MESSAGING_SENDER_ID,\n//     appId: process.env.RUMMY_SCORE_TRACKER_FIREBASE_APP_ID\n// })\n\nconst app = initializeApp({\n  apiKey: \"AIzaSyDaSmceFuVUP36mJDmdqccjlxSxacjaVg0\",\n  authDomain: \"rummy-score-tracker.firebaseapp.com\",\n  projectId: \"rummy-score-tracker\",\n  storageBucket: \"rummy-score-tracker.appspot.com\",\n  messagingSenderId: \"420450892849\",\n  appId: \"1:420450892849:web:acdc3c6f8d9c875d116910\"\n})\n\nexport const auth = getAuth(app)\nexport default app\n","import { createUserWithEmailAndPassword } from '@firebase/auth';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { auth } from '../firebase';\n\nconst AuthContext = React.createContext()\n\nexport const useAuth = () => {\n    return useContext(AuthContext);\n};\n\nexport function AuthProvider({ children }) {\n    const [currentUser, setCurrentUser] = useState();\n    const [loading, setLoading] = useState(true);\n\n    function signup(email, password) {\n        return createUserWithEmailAndPassword(auth, email, password);\n    }\n\n    useEffect(() => {\n        const unsubscribe = auth.onAuthStateChanged(user => {\n            setCurrentUser(user);\n            setLoading(false);\n        })\n\n        return unsubscribe;\n    }, []);\n\n\n    const value = {\n        currentUser,\n        signup\n    };\n\n    return (\n        <AuthContext.Provider value={value}>\n            {!loading && children}\n        </AuthContext.Provider>\n    );\n}\n","import React, { useRef, useState } from 'react';\nimport { Form, Button, Card, Alert } from 'react-bootstrap';\nimport { useAuth } from '../contexts/AuthContext';\n\nexport default function Signup() {\n    const emailRef = useRef();\n    const passwordRef = useRef();\n    const passwordConfirmRef = useRef();\n    const signup = useAuth();\n    const [error, setError] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n\n        if(passwordRef.current.value !== passwordConfirmRef.current.value) {\n            return setError('Passwords do not match');\n        }\n\n        try {\n            setError('');\n            setLoading(true);\n            await signup(emailRef.current.value, passwordRef.current.value);\n        } catch(error) {\n            console.log('error : ' + error);\n            setError('Failed to create an account');\n        }\n\n        setLoading(false);\n    }\n\n    return (\n        <>\n            <Card>\n                <Card.Body>\n                    <h2 className=\"text-center mb-4\">Sign Up</h2>\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\n                    <Form onSubmit={handleSubmit}>\n                        <Form.Group id=\"email\">\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control type=\"email\" ref={emailRef} required />\n                        </Form.Group>\n                        <Form.Group id=\"password\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control type=\"password\" ref={passwordRef} required />\n                        </Form.Group>\n                        <Form.Group id=\"password-confirm\">\n                            <Form.Label>Password Confirmation</Form.Label>\n                            <Form.Control type=\"password\" ref={passwordConfirmRef} required />\n                        </Form.Group>\n                        <Button disabled={loading} className=\"w-100 mt-3\" type=\"submit\">Sign Up</Button>\n                    </Form>\n                </Card.Body>\n            </Card>\n            <div className=\"w-100 text-center mt-2\">\n                Already have an account? Log In\n            </div>\n        </>\n    )\n}\n","import { Container } from \"react-bootstrap\";\nimport { AuthProvider } from \"../contexts/AuthContext\";\nimport Signup from \"./Signup\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Container className=\"d-flex align-items-center justify-content-center\" style={{ minHeight: \"100vh\" }}>\n      <div className=\"w-100\" style={{ maxWidth: '400px' }}>\n        <Router>\n          <AuthProvider>\n            <Switch>\n              {/* <Route path=\"/signup\" component={Signup}/> */}\n              <Route path=\"/signup\" component={<Signup/>}/>\n            </Switch>\n          </AuthProvider>\n        </Router>\n        <Signup />\n      </div>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}