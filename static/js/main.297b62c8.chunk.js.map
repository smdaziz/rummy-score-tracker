{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/Login.js","components/Register.js","components/Reset.js","components/Dashboard.js","components/ReadOnlyRow.js","components/EditableRow.js","assets/winner-cup.png","components/NewGame.js","components/App.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","db","getFirestore","googleProvider","GoogleAuthProvider","signInWithGoogle","a","signInWithPopup","res","user","q","query","collection","where","uid","getDocs","docs","length","addDoc","name","displayName","authProvider","email","console","error","alert","message","logInWithEmailAndPassword","password","signInWithEmailAndPassword","registerWithEmailAndPassword","createUserWithEmailAndPassword","sendPasswordReset","sendPasswordResetEmail","logout","signOut","savePlayers","players","playersObj","Object","assign","getPlayers","forEach","doc","push","data","saveRoundData","roundData","Date","now","updateRoundData","id","d","docRef","updateDoc","deleteRoundData","roundId","deleteDoc","getGameData","gameData","sort","round1","round2","roundNumber","resetGame","saveGameHistory","gameQuery","playersQuery","keys","player","playerTotals","rounds","round","Number","playerRanking","total","p1","p2","gameHistory","utcDateMS","winner","AuthContext","React","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","value","signup","Provider","Login","setEmail","setPassword","useAuthState","navigate","useNavigate","className","type","onChange","e","target","placeholder","onClick","to","Register","setName","Reset","Dashboard","fetchUserName","ReadOnlyRow","handleEditClick","handleDeleteClick","event","map","EditableRow","editRoundData","handleEditRoundChange","handleCancelClick","key","idx","required","NewGame","setPlayers","playerName","setPlayerName","setRounds","addRoundData","setAddRoundData","allPlayersAdded","setAllPlayersAdded","playerScores","setPlayerScores","gameOver","setGameOver","setWinner","savedPlayers","tempSavedPlayers","playerScoresTemp","lowScore","savePlayersHandler","preventDefault","setEditRoundData","editRoundId","setEditRoundId","index","fieldValue","newRoundData","handleAddRoundSubmit","newRound","nanoid","newRounds","window","location","reload","roundValues","findIndex","splice","onSubmit","editedRound","style","width","handleAddRoundChange","src","WinnerCup","height","App","Container","minHeight","maxWidth","basename","exact","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.297b62c8.chunk.js","sourcesContent":["/*import { initializeApp } from 'firebase/app'\nimport { getAuth } from 'firebase/auth'\n\n// console.log('api key : ', process.env.RUMMY_SCORE_TRACKER_FIREBASE_API_KEY)\n\n// const app = initializeApp({\n//     apiKey: process.env.RUMMY_SCORE_TRACKER_FIREBASE_API_KEY,\n//     authDomain: process.env.RUMMY_SCORE_TRACKER_FIREBASE_AUTH_DOMAIN,\n//     projectId: process.env.RUMMY_SCORE_TRACKER_FIREBASE_PROJECT_ID,\n//     storageBucket: process.env.RUMMY_SCORE_TRACKER_FIREBASE_STORAGE_BUCKET,\n//     messagingSenderId: process.env.RUMMY_SCORE_TRACKER_FIREBASE_MESSAGING_SENDER_ID,\n//     appId: process.env.RUMMY_SCORE_TRACKER_FIREBASE_APP_ID\n// })\n\nconst app = initializeApp({\n  apiKey: \"AIzaSyDaSmceFuVUP36mJDmdqccjlxSxacjaVg0\",\n  authDomain: \"rummy-score-tracker.firebaseapp.com\",\n  projectId: \"rummy-score-tracker\",\n  storageBucket: \"rummy-score-tracker.appspot.com\",\n  messagingSenderId: \"420450892849\",\n  appId: \"1:420450892849:web:acdc3c6f8d9c875d116910\"\n})\n\nexport const auth = getAuth(app)\nexport default app*/\n\n\nimport { initializeApp } from \"firebase/app\";\nimport {\n  GoogleAuthProvider,\n  getAuth,\n  signInWithPopup,\n  signInWithEmailAndPassword,\n  createUserWithEmailAndPassword,\n  sendPasswordResetEmail,\n  signOut,\n} from \"firebase/auth\";\n\nimport {\n  getFirestore,\n  query,\n  getDocs,\n  collection,\n  where,\n  addDoc,\n  updateDoc,\n  doc,\n  deleteDoc\n} from \"firebase/firestore\";\n\nconst app = initializeApp({\n  apiKey: \"AIzaSyDaSmceFuVUP36mJDmdqccjlxSxacjaVg0\",\n  authDomain: \"rummy-score-tracker.firebaseapp.com\",\n  projectId: \"rummy-score-tracker\",\n  storageBucket: \"rummy-score-tracker.appspot.com\",\n  messagingSenderId: \"420450892849\",\n  appId: \"1:420450892849:web:acdc3c6f8d9c875d116910\"\n});\n\nconst auth = getAuth(app);\nconst db = getFirestore(app);\n\nconst googleProvider = new GoogleAuthProvider();\nconst signInWithGoogle = async () => {\n  try {\n    const res = await signInWithPopup(auth, googleProvider);\n    const user = res.user;\n    const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user.uid));\n    const docs = await getDocs(q);\n    if (docs.docs.length === 0) {\n      await addDoc(collection(db, \"users\"), {\n        uid: user.uid,\n        name: user.displayName,\n        authProvider: \"google\",\n        email: user.email,\n      });\n    }\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst logInWithEmailAndPassword = async (email, password) => {\n  try {\n    await signInWithEmailAndPassword(auth, email, password);\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst registerWithEmailAndPassword = async (name, email, password) => {\n  try {\n    const res = await createUserWithEmailAndPassword(auth, email, password);\n    const user = res.user;\n    await addDoc(collection(db, \"users\"), {\n      uid: user.uid,\n      name,\n      authProvider: \"local\",\n      email,\n    });\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst sendPasswordReset = async (email) => {\n  try {\n    await sendPasswordResetEmail(auth, email);\n    alert(\"Password reset link sent!\");\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst logout = () => {\n  signOut(auth);\n};\n\nconst savePlayers = async (players) => {\n  try {\n    let playersObj = {};\n    Object.assign(playersObj, players);\n    await addDoc(collection(db, \"players\"), playersObj);\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst getPlayers = async () => {\n  const players = [];\n  try {\n    const q = query(collection(db, \"players\"));\n    const docs = await getDocs(q);\n    docs.forEach((doc) => {\n      players.push(doc.data());\n    });\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  } finally {\n    return players;\n  }\n};\n\nconst saveRoundData = async (roundData) => {\n  try {\n    roundData['roundNumber'] = Date.now();\n    await addDoc(collection(db, \"game\"), roundData);\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst updateRoundData = async (roundData) => {\n  try {\n    const q = query(collection(db, \"game\"), where(\"id\", \"==\", roundData.id));\n    const docs = await getDocs(q);\n    docs.forEach(async (d) => {\n      const docRef = doc(db, \"game\", d.id);\n      await updateDoc(docRef, roundData);\n    });\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst deleteRoundData = async (roundId) => {\n  try {\n    const q = query(collection(db, \"game\"), where(\"id\", \"==\", roundId));\n    const docs = await getDocs(q);\n    docs.forEach(async (d) => {\n      const docRef = doc(db, \"game\", d.id);\n      await deleteDoc(docRef);\n    });\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst getGameData = async () => {\n  const gameData = [];\n  try {\n    const q = query(collection(db, \"game\"));\n    const docs = await getDocs(q);\n    docs.forEach((doc) => {\n      gameData.push(doc.data());\n    });\n    gameData?.sort((round1, round2) => round1?.roundNumber - round2?.roundNumber);\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  } finally {\n    return gameData;\n  }\n};\n\nconst resetGame = async() => {\n  try {\n    await saveGameHistory();\n    const gameQuery = query(collection(db, \"game\"));\n    const gameDocs = await getDocs(gameQuery);\n    gameDocs.forEach(async (d) => {\n      const docRef = doc(db, \"game\", d.id);\n      await deleteDoc(docRef);\n    });\n    const playersQuery = query(collection(db, \"players\"));\n    const playerDocs = await getDocs(playersQuery);\n    playerDocs.forEach(async (d) => {\n      const docRef = doc(db, \"players\", d.id);\n      await deleteDoc(docRef);\n    });\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst saveGameHistory = async() => {\n  try {\n    //get players\n    const players = [];\n\n    const playersQuery = query(collection(db, \"players\"));\n    const playerDocs = await getDocs(playersQuery);\n    playerDocs.forEach(async (d) => {\n      const playersObj = d?.data();\n      Object.keys(playersObj)?.forEach(player => {\n        players.push(playersObj[player]);\n      });\n    });\n\n    //player scores\n    const playerTotals = {};\n    players?.forEach(player => playerTotals[player] = 0);\n\n    //get rounds\n    const rounds = [];\n    const gameQuery = query(collection(db, \"game\"));\n    const gameDocs = await getDocs(gameQuery);\n    gameDocs.forEach(async (d) => {\n      const round = d?.data();\n      rounds.push(round);\n      players?.forEach(player => {\n        playerTotals[player] += Number(round[player]);\n      });\n    });\n    rounds?.sort((round1, round2) => round1?.roundNumber - round2?.roundNumber);\n\n    const playerRanking = [];\n    players?.forEach(player => {\n      playerRanking.push({\n        name: player,\n        total: playerTotals[player]\n      });\n    });\n    playerRanking?.sort((p1, p2) => p1?.total - p2?.total);\n\n    const gameHistory = {\n      utcDateMS: Date.now(),\n      rounds,\n      players,\n      playerRanking,\n      winner: playerRanking[0]?.name\n    };\n    // console.log(JSON.stringify(gameHistory));\n    await addDoc(collection(db, \"game_history\"), gameHistory);\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nexport {\n  auth,\n  db,\n  signInWithGoogle,\n  logInWithEmailAndPassword,\n  registerWithEmailAndPassword,\n  sendPasswordReset,\n  logout,\n  savePlayers,\n  getPlayers,\n  saveRoundData,\n  updateRoundData,\n  deleteRoundData,\n  getGameData,\n  resetGame\n};\n","import { createUserWithEmailAndPassword } from '@firebase/auth';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { auth } from '../firebase';\n\nconst AuthContext = React.createContext()\n\nexport const useAuth = () => {\n    return useContext(AuthContext);\n};\n\nexport function AuthProvider({ children }) {\n    const [currentUser, setCurrentUser] = useState();\n    const [loading, setLoading] = useState(true);\n\n    function signup(email, password) {\n        return createUserWithEmailAndPassword(auth, email, password);\n    }\n\n    useEffect(() => {\n        const unsubscribe = auth.onAuthStateChanged(user => {\n            setCurrentUser(user);\n            setLoading(false);\n        })\n\n        return unsubscribe;\n    }, []);\n\n\n    const value = {\n        currentUser,\n        signup\n    };\n\n    return (\n        <AuthContext.Provider value={value}>\n            {!loading && children}\n        </AuthContext.Provider>\n    );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { auth, logInWithEmailAndPassword, signInWithGoogle } from \"./../firebase\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\n// import \"./Login.css\";\nfunction Login() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, loading, error] = useAuthState(auth);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (loading) {\n      // maybe trigger a loading screen\n      return;\n    }\n    if (user) navigate(\"/dashboard\");\n  }, [user, loading]);\n  return (\n    <div className=\"login\">\n      <div className=\"login__container\">\n        <input\n          type=\"text\"\n          className=\"login__textBox\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          placeholder=\"E-mail Address\"\n        />\n        <input\n          type=\"password\"\n          className=\"login__textBox\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          placeholder=\"Password\"\n        />\n        <button\n          className=\"login__btn\"\n          onClick={() => logInWithEmailAndPassword(email, password)}\n        >\n          Login\n        </button>\n        <button className=\"login__btn login__google\" onClick={signInWithGoogle}>\n          Login with Google\n        </button>\n        <div>\n          <Link to=\"/reset\">Forgot Password</Link>\n        </div>\n        <div>\n          Don't have an account? <Link to=\"/register\">Register</Link> now.\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default Login;","import React, { useEffect, useState } from \"react\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport {\n  auth,\n  registerWithEmailAndPassword,\n  signInWithGoogle,\n} from \"./../firebase\";\n// import \"./Register.css\";\nfunction Register() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [user, loading, error] = useAuthState(auth);\n  // const history = useHistory();\n  const navigate = useNavigate();\n  const register = () => {\n    if (!name) alert(\"Please enter name\");\n    registerWithEmailAndPassword(name, email, password);\n  };\n  useEffect(() => {\n    if (loading) return;\n    // if (user) history.replace(\"/dashboard\");\n    if (user) navigate(\"/dashboard\");\n  }, [user, loading]);\n  return (\n    <div className=\"register\">\n      <div className=\"register__container\">\n        <input\n          type=\"text\"\n          className=\"register__textBox\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          placeholder=\"Full Name\"\n        />\n        <input\n          type=\"text\"\n          className=\"register__textBox\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          placeholder=\"E-mail Address\"\n        />\n        <input\n          type=\"password\"\n          className=\"register__textBox\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          placeholder=\"Password\"\n        />\n        <button className=\"register__btn\" onClick={register}>\n          Register\n        </button>\n        <button\n          className=\"register__btn register__google\"\n          onClick={signInWithGoogle}\n        >\n          Register with Google\n        </button>\n        <div>\n          Already have an account? <Link to=\"/\">Login</Link> now.\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default Register;\n","import React, { useEffect, useState } from \"react\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { auth, sendPasswordReset } from \"./../firebase\";\n// import \"./Reset.css\";\nfunction Reset() {\n  const [email, setEmail] = useState(\"\");\n  const [user, loading, error] = useAuthState(auth);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (loading) return;\n    if (user) navigate(\"/dashboard\");\n  }, [user, loading]);\n  return (\n    <div className=\"reset\">\n      <div className=\"reset__container\">\n        <input\n          type=\"text\"\n          className=\"reset__textBox\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          placeholder=\"E-mail Address\"\n        />\n        <button\n          className=\"reset__btn\"\n          onClick={() => sendPasswordReset(email)}\n        >\n          Send password reset email\n        </button>\n        <div>\n          Don't have an account? <Link to=\"/register\">Register</Link> now.\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default Reset;\n","import React, { useEffect, useState } from \"react\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useNavigate } from \"react-router-dom\";\n// import \"./Dashboard.css\";\nimport { auth, db, logout } from \"./../firebase\";\nimport { query, collection, getDocs, where } from \"firebase/firestore\";\nfunction Dashboard() {\n  const [user, loading, error] = useAuthState(auth);\n  const [name, setName] = useState(\"\");\n  const navigate = useNavigate();\n  const fetchUserName = async () => {\n    try {\n      const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user?.uid));\n      const doc = await getDocs(q);\n      const data = doc.docs[0].data();\n      setName(data.name);\n    } catch (err) {\n      console.error(err);\n      alert(\"An error occured while fetching user data\");\n    }\n  };\n  useEffect(() => {\n    if (loading) return;\n    if (!user) return navigate(\"/\");\n    fetchUserName();\n  }, [user, loading]);\n  return (\n    <div className=\"dashboard\">\n       <div className=\"dashboard__container\">\n        Logged in as\n         <div>{name}</div>\n         <div>{user?.email}</div>\n         <button className=\"dashboard_btn\" onClick={() => navigate(\"/newgame\")}>New Game</button>\n         <button className=\"dashboard__btn\" onClick={logout}>\n          Logout\n         </button>\n       </div>\n     </div>\n  );\n}\nexport default Dashboard;\n","import React from \"react\";\n\nconst ReadOnlyRow = ({ round, players, handleEditClick, handleDeleteClick }) => {\n  return (\n    <tr>\n      <td>\n        <button\n          type=\"button\"\n          onClick={(event) => handleEditClick(event, round)}\n        >\n          Edit\n        </button>\n        <button type=\"button\" onClick={() => handleDeleteClick(round.id)}>\n          Delete\n        </button>\n      </td>\n      {\n        // Object.keys(round)?.map(key => {\n        //   if(key !== 'id') {\n        //     return (<td>{round[key]}</td>);\n        //   }\n        // })\n        players?.map(player => <td>{round[player]}</td>)\n      }\n    </tr>\n  );\n};\n\nexport default ReadOnlyRow;","import React from \"react\";\n\nconst EditableRow = ({\n  editRoundData,\n  handleEditRoundChange,\n  handleCancelClick,\n}) => {\n  return (\n    <tr>\n      <td>\n        <button type=\"submit\">Save</button>\n        <button type=\"button\" onClick={handleCancelClick}>\n          Cancel\n        </button>\n      </td>\n      {Object.keys(editRoundData)?.map((key, idx) => {\n        if(key !== 'id') {\n          return (\n            <td>\n              <input\n                type=\"text\"\n                required=\"required\"\n                placeholder=\"Enter points...\"\n                name=\"fullName\"\n                value={editRoundData[key]}\n                onChange={(e) => {\n                  handleEditRoundChange(e, idx);\n                }}\n              ></input>\n            </td>\n          );\n        }\n      })}\n    </tr>\n  );\n};\n\nexport default EditableRow;","export default __webpack_public_path__ + \"static/media/winner-cup.dc77caad.png\";","import React, { useState, Fragment, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { nanoid } from \"nanoid\";\nimport \"./NewGame.css\";\nimport ReadOnlyRow from \"./ReadOnlyRow\";\nimport EditableRow from \"./EditableRow\";\nimport { deleteRoundData, getGameData, getPlayers, resetGame, savePlayers, saveRoundData, updateRoundData } from \"../firebase\";\nimport WinnerCup from './../assets/winner-cup.png';\n\nconst NewGame = () => {\n  const navigate = useNavigate();\n\n  const [players, setPlayers] = useState([]);\n  const [playerName, setPlayerName] = useState('');\n\n  const [rounds, setRounds] = useState([]);\n  const [addRoundData, setAddRoundData] = useState({\n  });\n\n  const [allPlayersAdded, setAllPlayersAdded] = useState(false);\n\n  const [playerScores, setPlayerScores] = useState({});\n\n  const [gameOver, setGameOver] = useState(false);\n  const [winner, setWinner] = useState('');\n\n  useEffect(async () => {\n    const gameData = await getGameData();\n    setRounds(gameData);\n    // const currentPlayers = [];\n    // gameData?.length > 0 && Object.keys(gameData?.[0]).forEach((key) => {\n    //   if(key !== 'id') {\n    //     currentPlayers.push(key);\n    //   }\n    // });\n    // setPlayers(currentPlayers);\n    \n    const savedPlayers = await getPlayers();\n    const tempSavedPlayers = [];\n    if(savedPlayers.length > 0) {\n      setAllPlayersAdded(true);\n      if(players?.length != savedPlayers?.length) {\n        Object.keys(savedPlayers[0]).map((key) => {\n          tempSavedPlayers[key] = savedPlayers[0][key];\n        });\n        setPlayers(tempSavedPlayers);\n      }\n    }\n\n    const playerScoresTemp = {};\n    tempSavedPlayers?.forEach(player => playerScoresTemp[player] = 0);\n    gameData?.forEach(round => {\n      tempSavedPlayers?.forEach(player => {\n        playerScoresTemp[player] += Number(round[player]);\n      });\n    });\n    setPlayerScores(playerScoresTemp);\n\n    let lowScore = 350;\n    tempSavedPlayers?.forEach(player => {\n    // players?.forEach(player => {\n      if(playerScoresTemp[player] > 350) {\n        setGameOver(true);\n      }\n      if(playerScoresTemp[player] < lowScore) {\n        lowScore = playerScoresTemp[player];\n        setWinner(player);\n      }\n    });\n  }, []);\n\n  const handleAddPlayerChange = (event) => {\n    event.preventDefault();\n\n    const fieldValue = event.target.value;\n\n    setPlayerName(fieldValue);\n  };\n\n  const handleAddPlayerSubmit = (event) => {\n    event.preventDefault();\n\n    players.push(playerName);\n    setPlayerName('');\n\n    setPlayers(players);\n  };\n\n  const savePlayersHandler = async (event) => {\n    event.preventDefault();\n    \n    await savePlayers(players);\n\n    const savedPlayers = await getPlayers();\n    const tempSavedPlayers = [];\n    if(savedPlayers.length > 0) {\n      setAllPlayersAdded(true);\n      if(players?.length != savedPlayers?.length) {\n        Object.keys(savedPlayers[0]).map((key) => {\n          tempSavedPlayers[key] = savedPlayers[0][key];\n        });\n        setPlayers(tempSavedPlayers);\n      }\n    }\n  }\n\n  const [editRoundData, setEditRoundData] = useState({\n  });\n\n  const [editRoundId, setEditRoundId] = useState(null);\n\n  const handleAddRoundChange = (event, index) => {\n    event.preventDefault();\n\n    const fieldValue = event.target.value;\n\n    const newRoundData = { ...addRoundData };\n    // newRoundData[index] = fieldValue;\n    newRoundData[players[index]] = fieldValue;\n\n    setAddRoundData(newRoundData);\n  };\n\n  const handleEditRoundChange = (event, index) => {\n    event.preventDefault();\n\n    const fieldValue = event.target.value;\n\n    const newRoundData = { ...editRoundData };\n    // newRoundData[index] = fieldValue;\n    newRoundData[players[index]] = fieldValue;\n\n    setEditRoundData(newRoundData);\n  };\n\n  const handleAddRoundSubmit = async (event) => {\n    event.preventDefault();\n\n    const newRound = {\n      id: nanoid()\n    };\n    players?.map((player, idx) => {\n      // newRound[idx] = addRoundData[idx];\n      newRound[players[idx]] = addRoundData[players[idx]];\n    });\n\n    const newRounds = [...rounds, newRound];\n    Object.keys(addRoundData)?.map((data, idx) => {\n      // addRoundData[idx] = '';\n      addRoundData[players[idx]] = '';\n    });\n    setRounds(newRounds);\n    await saveRoundData(newRound);\n\n    const playerScoresTemp = {};\n    players?.forEach(player => playerScoresTemp[player] = 0);\n    newRounds?.forEach(round => {\n      players?.forEach(player => {\n        playerScoresTemp[player] += Number(round[player]);\n      });\n    });\n    setPlayerScores(playerScoresTemp);\n\n    let lowScore = 350;\n    players?.forEach(player => {\n      if(playerScoresTemp[player] > 350) {\n        setGameOver(true);\n      }\n      if(playerScoresTemp[player] < lowScore) {\n        lowScore = playerScoresTemp[player];\n        setWinner(player);\n      }\n    });\n\n    window.location.reload();\n  };\n\n  const handleEditRoundSubmit = (event) => {\n    event.preventDefault();\n\n    const editedRound = {\n      id: editRoundId\n    };\n    players?.map((player, idx) => {\n      // editedRound[idx] = editRoundData[idx];\n      editedRound[players[idx]] = editRoundData[players[idx]];\n    });\n\n    const newRounds = [...rounds];\n\n    const index = rounds.findIndex((round) => round.id === editRoundId);\n\n    // newRounds[index] = editedRound;\n    newRounds[players[index]] = editedRound;\n\n    setRounds(newRounds);\n    setEditRoundId(null);\n    updateRoundData(editedRound);\n  };\n\n  const handleEditClick = (event, round) => {\n    event.preventDefault();\n    setEditRoundId(round.id);\n\n    const roundValues = {\n    };\n    players?.map((player, idx) => {\n      // roundValues[idx] = round[idx];\n      roundValues[players[idx]] = round[players[idx]];\n    });\n\n    setEditRoundData(roundValues);\n  };\n\n  const handleCancelClick = () => {\n    setEditRoundId(null);\n  };\n\n  const handleDeleteClick = (roundId) => {\n    const newRounds = [...rounds];\n\n    const index = rounds.findIndex((round) => round.id === roundId);\n\n    newRounds.splice(index, 1);\n\n    setRounds(newRounds);\n    deleteRoundData(roundId);\n  };\n\n  const resetGameHandler = () => {\n    resetGame();\n  };\n\n  const getPlayerTurn = () => {\n    if(rounds?.length == 0 || rounds?.length % players?.length == 0) {\n      return players[players?.length - 1];\n    }\n    return players[(rounds?.length % players?.length) - 1];\n  };\n\n  return (\n    <div>\n      {\n        !allPlayersAdded && \n        <div>\n          <h2>Add a Player</h2>\n          <form onSubmit={handleAddPlayerSubmit}>\n            <input\n              type=\"text\"\n              name=\"player\"\n              value={playerName}\n              required=\"required\"\n              placeholder=\"Enter Player Name...\"\n              onChange={handleAddPlayerChange}\n            />\n            <button type=\"submit\">Add Player</button>\n            <button onClick={savePlayersHandler}>Done</button>\n          </form>\n        </div>\n      }\n      {\n        !gameOver && \n        <div className=\"app-container\">\n          <form onSubmit={handleEditRoundSubmit}>\n            <table>\n              <thead>\n                <tr>\n                  {players?.length > 0 && <th>Round</th>}\n                  {players?.map(player => <th>{player}</th>)}\n                </tr>\n              </thead>\n              <tbody>\n                {rounds?.map((round, idx) => (\n                  <Fragment>\n                    {editRoundId === round.id ? (\n                      <EditableRow\n                        editRoundData={editRoundData}\n                        handleEditRoundChange={handleEditRoundChange}\n                        handleCancelClick={handleCancelClick}\n                      />\n                    ) : (\n                      <ReadOnlyRow\n                        round={round}\n                        players={players}\n                        handleEditClick={handleEditClick}\n                        handleDeleteClick={handleDeleteClick}\n                      />\n                    )}\n                  </Fragment>\n                ))}\n                <tr>\n                  <td><b>Total</b></td>\n                  {\n                    players?.map(player => <td>{playerScores[player]}</td>)\n                  }\n                </tr>\n              </tbody>\n            </table>\n          </form>\n\n          {/* <h2>Enter Round Scores</h2> */}\n          <form onSubmit={handleAddRoundSubmit}>\n            <table>\n              <tbody>\n                <tr>\n                  <td>\n                    <button type=\"submit\" style={{width: '150px'}}>Add</button>\n                  </td>\n                  {players?.map((player, idx) => \n                    <td>\n                      <input\n                        type=\"text\"\n                        style={{width: '150px'}}\n                        name=\"fullName\"\n                        // value={addRoundData[idx]}\n                        value={addRoundData[players[idx]]}\n                        required=\"required\"\n                        placeholder=\"Enter points...\"\n                        onChange={\n                          (e) => {\n                            handleAddRoundChange(e, idx);\n                          }}\n                      />\n                    </td>\n                  )}\n                </tr>\n              </tbody>\n            </table>\n          </form>\n        </div>\n      }\n      {\n        gameOver && \n        <div>\n          <div>{winner} won the game!!<img src={WinnerCup} style={{width: '50px', height: '50px'}}></img></div>\n          <button className=\"dashboard_btn\" onClick={resetGameHandler}>Reset</button>\n        </div>\n      }\n      <div>{ players?.length > 0 && getPlayerTurn() + '\\'s Turn' }</div>\n      <button className=\"dashboard_btn\" onClick={() => navigate(\"/dashboard\")}>Dashboard</button>\n      {/* <button className=\"dashboard_btn\" onClick={() => navigate(\"/newgame\")}>Refresh</button> */}\n    </div>\n  );\n};\n\nexport default NewGame;","import { Container } from \"react-bootstrap\";\nimport { AuthProvider } from \"../contexts/AuthContext\";\nimport Signup from \"./Signup\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport Reset from \"./Reset\";\nimport Dashboard from \"./Dashboard\";\nimport NewGame from \"./NewGame\";\n\nfunction App() {\n  return (\n    <Container className=\"d-flex align-items-center justify-content-center\" style={{ minHeight: \"100vh\" }}>\n      <div className=\"w-100\" style={{ maxWidth: '700px' }}>\n        <Router basename=\"rummy-score-tracker\">\n          <AuthProvider>\n            <Routes>\n              {/* <Route path=\"/signup\" component={Signup}/> */}\n              <Route exact path=\"/\" element={<Login />} />\n              <Route exact path=\"/register\" element={<Register />} />\n              <Route exact path=\"/reset\" element={<Reset />} />\n              <Route exact path=\"/dashboard\" element={<Dashboard />} />\n              <Route exact path=\"/newgame\" element={<NewGame />} />\n            </Routes>\n          </AuthProvider>\n        </Router>\n      </div>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}