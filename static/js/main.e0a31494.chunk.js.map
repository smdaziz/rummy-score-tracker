{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/Login.js","components/Register.js","components/Reset.js","components/Dashboard.js","components/ReadOnlyRow.js","components/EditableRow.js","assets/winner-cup.png","components/NewGame.js","components/RegisterPlayer.js","components/PieChart.js","components/GameHistory.js","components/App.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","db","getFirestore","googleProvider","GoogleAuthProvider","signInWithGoogle","a","signInWithPopup","res","user","q","query","collection","where","uid","getDocs","docs","length","addDoc","name","displayName","authProvider","email","console","error","alert","message","logInWithEmailAndPassword","password","signInWithEmailAndPassword","registerWithEmailAndPassword","createUserWithEmailAndPassword","sendPasswordReset","sendPasswordResetEmail","logout","signOut","registerPlayer","player","getRegisteredPlayers","players","forEach","doc","push","data","sort","p1","p2","id","savePlayers","playersObj","Object","assign","getPlayers","saveRoundData","roundData","Date","now","updateRoundData","d","docRef","updateDoc","deleteRoundData","roundId","deleteDoc","getGameData","gameData","round1","round2","roundNumber","resetGame","saveGameHistory","gameQuery","playersQuery","keys","playerTotals","rounds","round","Number","playerRanking","total","gameHistory","utcDateMS","winner","discardGame","getGameHistoryData","gameHistoryData","game","gameDate","date","getMonth","getDate","getFullYear","winnerScore","runner","runnerScore","game1","game2","AuthContext","React","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","value","signup","Provider","Login","setEmail","setPassword","useAuthState","navigate","useNavigate","className","type","onChange","e","target","placeholder","onClick","to","Register","setName","Reset","Dashboard","fetchUserName","gameInProgress","setGameInProgress","class","ReadOnlyRow","roundIndex","handleEditClick","handleDeleteClick","subRoundTotal","playerSubScores","i","playerSubScoresTemp","log","map","event","EditableRow","editRoundData","handleEditRoundChange","handleCancelClick","key","idx","required","NewGame","registeredPlayers","setRegisteredPlayers","setPlayers","playerName","setPlayerName","setRounds","addRoundData","setAddRoundData","allPlayersAdded","setAllPlayersAdded","playerScores","setPlayerScores","gameOver","setGameOver","setWinner","regsiteredPlayers","savedPlayers","tempSavedPlayers","playerScoresTemp","lowScore","savePlayersHandler","preventDefault","setEditRoundData","editRoundId","setEditRoundId","index","fieldValue","newRoundData","handleAddRoundSubmit","newRound","nanoid","newRounds","window","location","reload","roundValues","findIndex","splice","resetGameHandler","discardGameHandler","style","display","flexDirection","onSubmit","includes","marginRight","width","disabled","editedRound","handleAddRoundChange","src","WinnerCup","height","RegisterPlayer","handleRegisterPlayerSubmit","PieChart","props","outerRadius","innerRadius","colorScale","d3","select","remove","svg","append","attr","arcGenerator","pieGenerator","padAngle","arc","selectAll","enter","_","text","label","centroid","x","y","drawChart","GameHistory","setGameHistory","playerWinnerRunner","setPlayerWinnerRunner","setGameWins","setPlayersParticipated","playerGameCombo","setPlayerGameCombo","winnerChartData","setWinnerChartData","runnerChartData","setRunnerChartData","outChartData","setOutChartData","playerWinnerCount","playerRunnerCount","playerGameCount","playerOutCount","gameWinsCount","winCount","runnerCount","gameCount","out","outCount","gameWin","gameWinCount","playerGameComboKey","join","games","gameWinPlayers","split","gameWinPlayersSorted","gameWinPlayersSortedKey","gameWinsCountEntries","entries","g1","g2","sortedGameWinsCount","reduce","acc","playerGameComboObj","gameWins","playersParticipated","g","obj","wins","gamesPlayed","winPercentage","Math","runnerPercentage","outPercentage","marginBottom","marginTop","App","Container","minHeight","maxWidth","basename","exact","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0a31494.chunk.js","sourcesContent":["/*import { initializeApp } from 'firebase/app'\nimport { getAuth } from 'firebase/auth'\n\n// console.log('api key : ', process.env.RUMMY_SCORE_TRACKER_FIREBASE_API_KEY)\n\n// const app = initializeApp({\n//     apiKey: process.env.RUMMY_SCORE_TRACKER_FIREBASE_API_KEY,\n//     authDomain: process.env.RUMMY_SCORE_TRACKER_FIREBASE_AUTH_DOMAIN,\n//     projectId: process.env.RUMMY_SCORE_TRACKER_FIREBASE_PROJECT_ID,\n//     storageBucket: process.env.RUMMY_SCORE_TRACKER_FIREBASE_STORAGE_BUCKET,\n//     messagingSenderId: process.env.RUMMY_SCORE_TRACKER_FIREBASE_MESSAGING_SENDER_ID,\n//     appId: process.env.RUMMY_SCORE_TRACKER_FIREBASE_APP_ID\n// })\n\nconst app = initializeApp({\n  apiKey: \"AIzaSyDaSmceFuVUP36mJDmdqccjlxSxacjaVg0\",\n  authDomain: \"rummy-score-tracker.firebaseapp.com\",\n  projectId: \"rummy-score-tracker\",\n  storageBucket: \"rummy-score-tracker.appspot.com\",\n  messagingSenderId: \"420450892849\",\n  appId: \"1:420450892849:web:acdc3c6f8d9c875d116910\"\n})\n\nexport const auth = getAuth(app)\nexport default app*/\n\n\nimport { initializeApp } from \"firebase/app\";\nimport {\n  GoogleAuthProvider,\n  getAuth,\n  signInWithPopup,\n  signInWithEmailAndPassword,\n  createUserWithEmailAndPassword,\n  sendPasswordResetEmail,\n  signOut,\n} from \"firebase/auth\";\n\nimport {\n  getFirestore,\n  query,\n  getDocs,\n  collection,\n  where,\n  addDoc,\n  updateDoc,\n  doc,\n  deleteDoc\n} from \"firebase/firestore\";\n\nconst app = initializeApp({\n  apiKey: \"AIzaSyDaSmceFuVUP36mJDmdqccjlxSxacjaVg0\",\n  authDomain: \"rummy-score-tracker.firebaseapp.com\",\n  projectId: \"rummy-score-tracker\",\n  storageBucket: \"rummy-score-tracker.appspot.com\",\n  messagingSenderId: \"420450892849\",\n  appId: \"1:420450892849:web:acdc3c6f8d9c875d116910\"\n});\n\nconst auth = getAuth(app);\nconst db = getFirestore(app);\n\nconst googleProvider = new GoogleAuthProvider();\nconst signInWithGoogle = async () => {\n  try {\n    const res = await signInWithPopup(auth, googleProvider);\n    const user = res.user;\n    const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user.uid));\n    const docs = await getDocs(q);\n    if (docs.docs.length === 0) {\n      await addDoc(collection(db, \"users\"), {\n        uid: user.uid,\n        name: user.displayName,\n        authProvider: \"google\",\n        email: user.email,\n      });\n    }\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst logInWithEmailAndPassword = async (email, password) => {\n  try {\n    await signInWithEmailAndPassword(auth, email, password);\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst registerWithEmailAndPassword = async (name, email, password) => {\n  try {\n    const res = await createUserWithEmailAndPassword(auth, email, password);\n    const user = res.user;\n    await addDoc(collection(db, \"users\"), {\n      uid: user.uid,\n      name,\n      authProvider: \"local\",\n      email,\n    });\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst sendPasswordReset = async (email) => {\n  try {\n    await sendPasswordResetEmail(auth, email);\n    alert(\"Password reset link sent!\");\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst logout = () => {\n  signOut(auth);\n};\n\nconst registerPlayer = async (player) => {\n  try {\n    // let playersObj = {};\n    // Object.assign(playersObj, players);\n    await addDoc(collection(db, \"registered_players\"), player);\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst getRegisteredPlayers = async () => {\n  const players = [];\n  try {\n    const q = query(collection(db, \"registered_players\"));\n    const docs = await getDocs(q);\n    docs.forEach((doc) => {\n      players.push(doc?.data()?.name);\n    });\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  } finally {\n    players?.sort((p1, p2) => p1?.id - p2?.id);\n    return players;\n  }\n};\n\nconst savePlayers = async (players) => {\n  try {\n    let playersObj = {};\n    Object.assign(playersObj, players);\n    await addDoc(collection(db, \"players\"), playersObj);\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst getPlayers = async () => {\n  const players = [];\n  try {\n    const q = query(collection(db, \"players\"));\n    const docs = await getDocs(q);\n    docs.forEach((doc) => {\n      players.push(doc.data());\n    });\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  } finally {\n    return players;\n  }\n};\n\nconst saveRoundData = async (roundData) => {\n  try {\n    roundData['roundNumber'] = Date.now();\n    await addDoc(collection(db, \"game\"), roundData);\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst updateRoundData = async (roundData) => {\n  try {\n    const q = query(collection(db, \"game\"), where(\"id\", \"==\", roundData.id));\n    const docs = await getDocs(q);\n    docs.forEach(async (d) => {\n      const docRef = doc(db, \"game\", d.id);\n      await updateDoc(docRef, roundData);\n    });\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst deleteRoundData = async (roundId) => {\n  try {\n    const q = query(collection(db, \"game\"), where(\"id\", \"==\", roundId));\n    const docs = await getDocs(q);\n    docs.forEach(async (d) => {\n      const docRef = doc(db, \"game\", d.id);\n      await deleteDoc(docRef);\n    });\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst getGameData = async () => {\n  const gameData = [];\n  try {\n    const q = query(collection(db, \"game\"));\n    const docs = await getDocs(q);\n    docs.forEach((doc) => {\n      gameData.push(doc.data());\n    });\n    gameData?.sort((round1, round2) => round1?.roundNumber - round2?.roundNumber);\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  } finally {\n    return gameData;\n  }\n};\n\nconst resetGame = async() => {\n  try {\n    await saveGameHistory();\n    const gameQuery = query(collection(db, \"game\"));\n    const gameDocs = await getDocs(gameQuery);\n    gameDocs.forEach(async (d) => {\n      const docRef = doc(db, \"game\", d.id);\n      await deleteDoc(docRef);\n    });\n    const playersQuery = query(collection(db, \"players\"));\n    const playerDocs = await getDocs(playersQuery);\n    playerDocs.forEach(async (d) => {\n      const docRef = doc(db, \"players\", d.id);\n      await deleteDoc(docRef);\n    });\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst saveGameHistory = async() => {\n  try {\n    //get players\n    const players = [];\n\n    const playersQuery = query(collection(db, \"players\"));\n    const playerDocs = await getDocs(playersQuery);\n    playerDocs.forEach(async (d) => {\n      const playersObj = d?.data();\n      Object.keys(playersObj)?.forEach(player => {\n        players.push(playersObj[player]);\n      });\n    });\n\n    //player scores\n    const playerTotals = {};\n    players?.forEach(player => playerTotals[player] = 0);\n\n    //get rounds\n    const rounds = [];\n    const gameQuery = query(collection(db, \"game\"));\n    const gameDocs = await getDocs(gameQuery);\n    gameDocs.forEach(async (d) => {\n      const round = d?.data();\n      rounds.push(round);\n      players?.forEach(player => {\n        playerTotals[player] += Number(round[player]);\n      });\n    });\n    rounds?.sort((round1, round2) => round1?.roundNumber - round2?.roundNumber);\n\n    const playerRanking = [];\n    players?.forEach(player => {\n      playerRanking.push({\n        name: player,\n        total: playerTotals[player]\n      });\n    });\n    playerRanking?.sort((p1, p2) => p1?.total - p2?.total);\n\n    const gameHistory = {\n      utcDateMS: Date.now(),\n      rounds,\n      players,\n      playerRanking,\n      winner: playerRanking[0]?.name\n    };\n    // console.log(JSON.stringify(gameHistory));\n    await addDoc(collection(db, \"game_history\"), gameHistory);\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst discardGame = async() => {\n  try {\n    const gameQuery = query(collection(db, \"game\"));\n    const gameDocs = await getDocs(gameQuery);\n    gameDocs.forEach(async (d) => {\n      const docRef = doc(db, \"game\", d.id);\n      await deleteDoc(docRef);\n    });\n    const playersQuery = query(collection(db, \"players\"));\n    const playerDocs = await getDocs(playersQuery);\n    playerDocs.forEach(async (d) => {\n      const docRef = doc(db, \"players\", d.id);\n      await deleteDoc(docRef);\n    });\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst getGameHistoryData = async () => {\n  const gameHistoryData = [];\n  try {\n    const q = query(collection(db, \"game_history\"));\n    const docs = await getDocs(q);\n    docs.forEach((doc) => {\n      const game = doc.data();\n      const gameDate = new Date(game?.utcDateMS);\n      gameHistoryData.push({\n        utcDateMS: game?.utcDateMS,\n        playerRanking: game?.playerRanking,\n        date: (gameDate.getMonth()+1) + \"/\" + gameDate.getDate() + \"/\" + gameDate.getFullYear(),\n        rounds: game?.rounds?.length,\n        winner: game?.winner,\n        winnerScore: game?.playerRanking?.[0]?.total,\n        runner: game?.playerRanking?.[1]?.name,\n        runnerScore: game?.playerRanking?.[1]?.total\n      });\n    });\n    gameHistoryData?.sort((game1, game2) => game2?.utcDateMS - game1?.utcDateMS);\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  } finally {\n    return gameHistoryData;\n  }\n};\n\nexport {\n  auth,\n  db,\n  signInWithGoogle,\n  logInWithEmailAndPassword,\n  registerWithEmailAndPassword,\n  sendPasswordReset,\n  logout,\n  registerPlayer,\n  getRegisteredPlayers,\n  savePlayers,\n  getPlayers,\n  saveRoundData,\n  updateRoundData,\n  deleteRoundData,\n  getGameData,\n  resetGame,\n  discardGame,\n  getGameHistoryData\n};\n","import { createUserWithEmailAndPassword } from '@firebase/auth';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { auth } from '../firebase';\n\nconst AuthContext = React.createContext()\n\nexport const useAuth = () => {\n    return useContext(AuthContext);\n};\n\nexport function AuthProvider({ children }) {\n    const [currentUser, setCurrentUser] = useState();\n    const [loading, setLoading] = useState(true);\n\n    function signup(email, password) {\n        return createUserWithEmailAndPassword(auth, email, password);\n    }\n\n    useEffect(() => {\n        const unsubscribe = auth.onAuthStateChanged(user => {\n            setCurrentUser(user);\n            setLoading(false);\n        })\n\n        return unsubscribe;\n    }, []);\n\n\n    const value = {\n        currentUser,\n        signup\n    };\n\n    return (\n        <AuthContext.Provider value={value}>\n            {!loading && children}\n        </AuthContext.Provider>\n    );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { auth, logInWithEmailAndPassword, signInWithGoogle } from \"./../firebase\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\n// import \"./Login.css\";\nfunction Login() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, loading, error] = useAuthState(auth);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (loading) {\n      // maybe trigger a loading screen\n      return;\n    }\n    if (user) navigate(\"/dashboard\");\n  }, [user, loading]);\n  return (\n    <div className=\"login\">\n      <div className=\"login__container\">\n        <input\n          type=\"text\"\n          className=\"m-1\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          placeholder=\"E-mail Address\"\n        />\n        <br></br>\n        <input\n          type=\"password\"\n          className=\"m-1\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          placeholder=\"Password\"\n        />\n        <br></br>\n        <button\n          className=\"btn btn-success m-1\"\n          onClick={() => logInWithEmailAndPassword(email, password)}\n        >\n          Login\n        </button>\n        <br></br>\n        <button className=\"btn btn-success m-1\" onClick={signInWithGoogle}>\n          Login with Google\n        </button>\n        <div>\n          <Link to=\"/reset\">Forgot Password</Link>\n        </div>\n        <div>\n          Don't have an account? <Link to=\"/register\">Register</Link> now.\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default Login;","import React, { useEffect, useState } from \"react\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport {\n  auth,\n  registerWithEmailAndPassword,\n  signInWithGoogle,\n} from \"./../firebase\";\n// import \"./Register.css\";\nfunction Register() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [user, loading, error] = useAuthState(auth);\n  // const history = useHistory();\n  const navigate = useNavigate();\n  const register = () => {\n    if (!name) alert(\"Please enter name\");\n    registerWithEmailAndPassword(name, email, password);\n  };\n  useEffect(() => {\n    if (loading) return;\n    // if (user) history.replace(\"/dashboard\");\n    if (user) navigate(\"/dashboard\");\n  }, [user, loading]);\n  return (\n    <div className=\"register\">\n      <div className=\"register__container\">\n        <input\n          type=\"text\"\n          className=\"register__textBox\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          placeholder=\"Full Name\"\n        />\n        <input\n          type=\"text\"\n          className=\"register__textBox\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          placeholder=\"E-mail Address\"\n        />\n        <input\n          type=\"password\"\n          className=\"register__textBox\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          placeholder=\"Password\"\n        />\n        <button className=\"register__btn\" onClick={register}>\n          Register\n        </button>\n        <button\n          className=\"register__btn register__google\"\n          onClick={signInWithGoogle}\n        >\n          Register with Google\n        </button>\n        <div>\n          Already have an account? <Link to=\"/\">Login</Link> now.\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default Register;\n","import React, { useEffect, useState } from \"react\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { auth, sendPasswordReset } from \"./../firebase\";\n// import \"./Reset.css\";\nfunction Reset() {\n  const [email, setEmail] = useState(\"\");\n  const [user, loading, error] = useAuthState(auth);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (loading) return;\n    if (user) navigate(\"/dashboard\");\n  }, [user, loading]);\n  return (\n    <div className=\"reset\">\n      <div className=\"reset__container\">\n        <input\n          type=\"text\"\n          className=\"reset__textBox\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          placeholder=\"E-mail Address\"\n        />\n        <button\n          className=\"reset__btn\"\n          onClick={() => sendPasswordReset(email)}\n        >\n          Send password reset email\n        </button>\n        <div>\n          Don't have an account? <Link to=\"/register\">Register</Link> now.\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default Reset;\n","import React, { useEffect, useState } from \"react\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useNavigate } from \"react-router-dom\";\n// import \"./Dashboard.css\";\nimport { auth, db, getGameData, logout } from \"./../firebase\";\nimport { query, collection, getDocs, where } from \"firebase/firestore\";\nfunction Dashboard() {\n  const [user, loading, error] = useAuthState(auth);\n  const [name, setName] = useState(\"\");\n  const navigate = useNavigate();\n  const fetchUserName = async () => {\n    try {\n      const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user?.uid));\n      const doc = await getDocs(q);\n      const data = doc.docs[0].data();\n      setName(data.name);\n    } catch (err) {\n      console.error(err);\n      alert(\"An error occured while fetching user data\");\n    }\n  };\n\n  const [gameInProgress, setGameInProgress] = useState(false);\n  useEffect(async() => {\n    if (loading) return;\n    if (!user) return navigate(\"/\");\n    fetchUserName();\n\n    const gameData = await getGameData();\n    setGameInProgress(gameData?.length > 0);\n  }, [user, loading]);\n  return (\n    <div className=\"dashboard\">\n       <div className=\"dashboard__container\">\n        Logged in as\n         <div>{name}</div>\n         <div>{user?.email}</div>\n         <div>\n           <button class=\"btn btn-success my-1\" onClick={() => navigate(\"/registerplayer\")}>Register Player</button>\n         </div>\n         <div>\n          <button class=\"btn btn-success my-1\" onClick={() => navigate(\"/newgame\")}>\n            { gameInProgress ? 'Continue Game' : 'New Game' }\n          </button>\n         </div>\n         <div>\n           <button class=\"btn btn-success my-1\" onClick={() => navigate(\"/gamehistory\")}>Game History</button>\n         </div>\n         <div>\n          <button class=\"btn btn-success my-1\" onClick={logout}>Logout</button>\n         </div>\n       </div>\n     </div>\n  );\n}\nexport default Dashboard;\n","import React from \"react\";\n\nconst ReadOnlyRow = ({ round, roundIndex, players, rounds, handleEditClick, handleDeleteClick }) => {\n  //calculate subround total - start\n  const subRoundTotal = [];\n  let playerSubScores = {};\n  players?.forEach(player => playerSubScores[player] = 0);\n  for(let i = 0; i <= rounds?.length; i++) {\n    if (i > 0 && i % players?.length == 0) {\n      let playerSubScoresTemp = Object.assign({}, playerSubScores);\n      subRoundTotal[(i / players?.length) - 1] = playerSubScoresTemp;\n    }\n    if (i < rounds?.length) {\n      players?.forEach(player => {\n        playerSubScores[player] += Number(rounds[i][player]);\n      });\n    }\n  }\n  console.log('subRoundTotal', subRoundTotal);\n  //calculate subround total - end\n  if (roundIndex > 0 && roundIndex % players.length === 0) {\n    return (\n      <>\n        <tr class=\"round-total\">\n          <td><b>Round {roundIndex/players.length}</b></td>\n          {\n            players?.map(player => <td>{subRoundTotal?.[(roundIndex / players.length) - 1]?.[player]}</td>)\n          }\n        </tr>\n        <tr>\n          <td>\n            <button\n              type=\"button\"\n              class=\"btn btn-success mx-1\"\n              onClick={(event) => handleEditClick(event, round)}\n            >\n              Edit\n            </button>\n            <button type=\"button\" class=\"btn btn-warning\" onClick={() => handleDeleteClick(round.id)}>\n              Delete\n            </button>\n          </td>\n          {\n            players?.map(player => <td>{round[player]}</td>)\n          }\n        </tr>\n      </>\n    );\n  }\n  return (\n    <tr>\n      <td>\n        <button\n          type=\"button\"\n          class=\"btn btn-success mx-1\"\n          onClick={(event) => handleEditClick(event, round)}\n        >\n          Edit\n        </button>\n        <button type=\"button\" class=\"btn btn-warning\" onClick={() => handleDeleteClick(round.id)}>\n          Delete\n        </button>\n      </td>\n      {\n        // Object.keys(round)?.map(key => {\n        //   if(key !== 'id') {\n        //     return (<td>{round[key]}</td>);\n        //   }\n        // })\n        players?.map(player => <td>{round[player]}</td>)\n      }\n    </tr>\n  );\n};\n\nexport default ReadOnlyRow;","import React from \"react\";\n\nconst EditableRow = ({\n  editRoundData,\n  handleEditRoundChange,\n  handleCancelClick,\n}) => {\n  return (\n    <tr>\n      <td>\n        <button type=\"submit\" class=\"btn btn-success mx-1\">Save</button>\n        <button type=\"button\" class=\"btn btn-warning\" onClick={handleCancelClick}>\n          Cancel\n        </button>\n      </td>\n      {Object.keys(editRoundData)?.map((key, idx) => {\n        if(key !== 'id') {\n          return (\n            <td>\n              <input\n                type=\"text\"\n                required=\"required\"\n                placeholder=\"Enter points...\"\n                name=\"fullName\"\n                value={editRoundData[key]}\n                onChange={(e) => {\n                  handleEditRoundChange(e, idx);\n                }}\n              ></input>\n            </td>\n          );\n        }\n      })}\n    </tr>\n  );\n};\n\nexport default EditableRow;","export default __webpack_public_path__ + \"static/media/winner-cup.dc77caad.png\";","import React, { useState, Fragment, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { nanoid } from \"nanoid\";\nimport \"./NewGame.css\";\nimport ReadOnlyRow from \"./ReadOnlyRow\";\nimport EditableRow from \"./EditableRow\";\nimport { deleteRoundData, getGameData, getPlayers, getRegisteredPlayers, resetGame, discardGame, savePlayers, saveRoundData, updateRoundData } from \"../firebase\";\nimport WinnerCup from './../assets/winner-cup.png';\n\nconst NewGame = () => {\n  const navigate = useNavigate();\n\n  const [registeredPlayers, setRegisteredPlayers] = useState([]);\n  const [players, setPlayers] = useState([]);\n  const [playerName, setPlayerName] = useState('');\n\n  const [rounds, setRounds] = useState([]);\n  const [addRoundData, setAddRoundData] = useState({\n  });\n\n  const [allPlayersAdded, setAllPlayersAdded] = useState(false);\n\n  const [playerScores, setPlayerScores] = useState({});\n\n  const [gameOver, setGameOver] = useState(false);\n  const [winner, setWinner] = useState('');\n\n  useEffect(async () => {\n    const regsiteredPlayers = await getRegisteredPlayers();\n    setRegisteredPlayers(regsiteredPlayers);\n\n    const gameData = await getGameData();\n    setRounds(gameData);\n    // const currentPlayers = [];\n    // gameData?.length > 0 && Object.keys(gameData?.[0]).forEach((key) => {\n    //   if(key !== 'id') {\n    //     currentPlayers.push(key);\n    //   }\n    // });\n    // setPlayers(currentPlayers);\n    \n    const savedPlayers = await getPlayers();\n    const tempSavedPlayers = [];\n    if(savedPlayers.length > 0) {\n      setAllPlayersAdded(true);\n      if(players?.length != savedPlayers?.length) {\n        Object.keys(savedPlayers[0]).map((key) => {\n          tempSavedPlayers[key] = savedPlayers[0][key];\n        });\n        setPlayers(tempSavedPlayers);\n      }\n    }\n\n    const playerScoresTemp = {};\n    tempSavedPlayers?.forEach(player => playerScoresTemp[player] = 0);\n    gameData?.forEach(round => {\n      tempSavedPlayers?.forEach(player => {\n        playerScoresTemp[player] += Number(round[player]);\n      });\n    });\n    setPlayerScores(playerScoresTemp);\n\n    let lowScore = 350;\n    tempSavedPlayers?.forEach(player => {\n    // players?.forEach(player => {\n      if(playerScoresTemp[player] > 350) {\n        setGameOver(true);\n      }\n      if(playerScoresTemp[player] < lowScore) {\n        lowScore = playerScoresTemp[player];\n        setWinner(player);\n      }\n    });\n\n  }, []);\n\n  const handleAddPlayerChange = (event) => {\n    event.preventDefault();\n\n    const fieldValue = event.target.value;\n\n    setPlayerName(fieldValue);\n  };\n\n  const handleAddPlayerSubmit = (event) => {\n    event.preventDefault();\n\n    !players?.includes(playerName) && playerName && players.push(playerName);\n    setPlayerName('');\n\n    setPlayers(players);\n  };\n\n  const savePlayersHandler = async (event) => {\n    event.preventDefault();\n    \n    await savePlayers(players);\n\n    const savedPlayers = await getPlayers();\n    const tempSavedPlayers = [];\n    if(savedPlayers.length > 0) {\n      setAllPlayersAdded(true);\n      if(players?.length != savedPlayers?.length) {\n        Object.keys(savedPlayers[0]).map((key) => {\n          tempSavedPlayers[key] = savedPlayers[0][key];\n        });\n        setPlayers(tempSavedPlayers);\n      }\n    }\n  }\n\n  const [editRoundData, setEditRoundData] = useState({\n  });\n\n  const [editRoundId, setEditRoundId] = useState(null);\n\n  const handleAddRoundChange = (event, index) => {\n    event.preventDefault();\n\n    const fieldValue = event.target.value;\n\n    const newRoundData = { ...addRoundData };\n    // newRoundData[index] = fieldValue;\n    newRoundData[players[index]] = fieldValue;\n\n    setAddRoundData(newRoundData);\n  };\n\n  const handleEditRoundChange = (event, index) => {\n    event.preventDefault();\n\n    const fieldValue = event.target.value;\n\n    const newRoundData = { ...editRoundData };\n    // newRoundData[index] = fieldValue;\n    newRoundData[players[index]] = fieldValue;\n\n    setEditRoundData(newRoundData);\n  };\n\n  const handleAddRoundSubmit = async (event) => {\n    event.preventDefault();\n\n    const newRound = {\n      id: nanoid()\n    };\n    players?.map((player, idx) => {\n      // newRound[idx] = addRoundData[idx];\n      newRound[players[idx]] = addRoundData[players[idx]];\n    });\n\n    const newRounds = [...rounds, newRound];\n    Object.keys(addRoundData)?.map((data, idx) => {\n      // addRoundData[idx] = '';\n      addRoundData[players[idx]] = '';\n    });\n    setRounds(newRounds);\n    await saveRoundData(newRound);\n\n    const playerScoresTemp = {};\n    players?.forEach(player => playerScoresTemp[player] = 0);\n    newRounds?.forEach(round => {\n      players?.forEach(player => {\n        playerScoresTemp[player] += Number(round[player]);\n      });\n    });\n    setPlayerScores(playerScoresTemp);\n\n    let lowScore = 350;\n    players?.forEach(player => {\n      if(playerScoresTemp[player] > 350) {\n        setGameOver(true);\n      }\n      if(playerScoresTemp[player] < lowScore) {\n        lowScore = playerScoresTemp[player];\n        setWinner(player);\n      }\n    });\n\n    window.location.reload();\n  };\n\n  const handleEditRoundSubmit = (event) => {\n    event.preventDefault();\n\n    const editedRound = {\n      id: editRoundId\n    };\n    players?.map((player, idx) => {\n      // editedRound[idx] = editRoundData[idx];\n      editedRound[players[idx]] = editRoundData[players[idx]];\n    });\n\n    const newRounds = [...rounds];\n\n    const index = rounds.findIndex((round) => round.id === editRoundId);\n\n    // newRounds[index] = editedRound;\n    newRounds[players[index]] = editedRound;\n\n    setRounds(newRounds);\n    setEditRoundId(null);\n    updateRoundData(editedRound);\n  };\n\n  const handleEditClick = (event, round) => {\n    event.preventDefault();\n    setEditRoundId(round.id);\n\n    const roundValues = {\n    };\n    players?.map((player, idx) => {\n      // roundValues[idx] = round[idx];\n      roundValues[players[idx]] = round[players[idx]];\n    });\n\n    setEditRoundData(roundValues);\n  };\n\n  const handleCancelClick = () => {\n    setEditRoundId(null);\n  };\n\n  const handleDeleteClick = (roundId) => {\n    const newRounds = [...rounds];\n\n    const index = rounds.findIndex((round) => round.id === roundId);\n\n    newRounds.splice(index, 1);\n\n    setRounds(newRounds);\n    deleteRoundData(roundId);\n  };\n\n  const resetGameHandler = async () => {\n    await resetGame();\n    navigate(\"/dashboard\");\n  };\n\n  const discardGameHandler = async () => {\n    await discardGame();\n    navigate(\"/dashboard\");\n  };\n\n  const getPlayerTurn = () => {\n    if(rounds?.length == 0 || rounds?.length % players?.length == 0) {\n      return players[players?.length - 1];\n    }\n    return players[(rounds?.length % players?.length) - 1];\n  };\n\n  return (\n    <div>\n      {\n        !allPlayersAdded && \n        <div style={{display: 'flex', flexDirection: 'column'}}>\n          <h2>Select Player</h2>\n          <form style={{flexDirection: 'column'}} onSubmit={handleAddPlayerSubmit}>\n            {/* <input\n              type=\"text\"\n              name=\"player\"\n              value={playerName}\n              required=\"required\"\n              placeholder=\"Enter Player Name...\"\n              onChange={handleAddPlayerChange}\n            /> */}\n            <div style={{display: 'flex', flexDirection: 'column'}} onChange={handleAddPlayerChange}>\n              {registeredPlayers?.map(player => \n                <div style={{ marginRight: '10px' }}>\n                  <input\n                    type=\"radio\"\n                    name=\"playerName\"\n                    value={player}\n                  />\n                  {player}\n                </div>\n              )}\n            </div>\n            <button type=\"submit\" class=\"btn btn-success\" style={{width: '150px'}}>Add Player</button>\n            <button class=\"btn btn-success\" style={{width: '150px'}} onClick={savePlayersHandler} disabled={players.length <= 1}>Start Game</button>\n          </form>\n        </div>\n      }\n      {\n        !gameOver && \n        <div className=\"app-container\">\n          <form onSubmit={handleEditRoundSubmit}>\n            <table class=\"table rummy-table\">\n              <thead>\n                <tr>\n                  {players?.length > 0 && <th>Round</th>}\n                  {players?.map(player => <th>{player}</th>)}\n                </tr>\n              </thead>\n              <tbody>\n                {rounds?.map((round, idx) => (\n                  <Fragment>\n                    {editRoundId === round.id ? (\n                      <EditableRow\n                        editRoundData={editRoundData}\n                        handleEditRoundChange={handleEditRoundChange}\n                        handleCancelClick={handleCancelClick}\n                      />\n                    ) : (\n                      <ReadOnlyRow\n                        round={round}\n                        roundIndex={idx}\n                        players={players}\n                        handleEditClick={handleEditClick}\n                        handleDeleteClick={handleDeleteClick}\n                        rounds={rounds}\n                      />\n                    )}\n                  </Fragment>\n                ))}\n                <tr class=\"total\">\n                  <td><b>Total</b></td>\n                  {\n                    players?.map(player => <td>{playerScores[player]}</td>)\n                  }\n                </tr>\n              </tbody>\n            </table>\n          </form>\n\n          {/* <h2>Enter Round Scores</h2> */}\n          <form onSubmit={handleAddRoundSubmit}>\n            <table class=\"table\">\n              <tbody>\n                <tr>\n                  <td>\n                    <button type=\"submit\" class=\"btn btn-success\" style={{width: '150px'}} disabled={!allPlayersAdded}>Add</button>\n                  </td>\n                  {players?.map((player, idx) => \n                    <td>\n                      <input\n                        type=\"text\"\n                        style={{width: '100px'}}\n                        name=\"fullName\"\n                        // value={addRoundData[idx]}\n                        value={addRoundData[players[idx]]}\n                        required=\"required\"\n                        placeholder=\"Enter points...\"\n                        onChange={\n                          (e) => {\n                            handleAddRoundChange(e, idx);\n                          }}\n                      />\n                    </td>\n                  )}\n                </tr>\n              </tbody>\n            </table>\n          </form>\n        </div>\n      }\n      {\n        gameOver && \n        <div>\n          <div>{winner} won the game!!<img src={WinnerCup} style={{width: '25px', height: '25px'}}></img></div>\n          <div>\n            <button class=\"btn btn-success my-1\" onClick={resetGameHandler} disabled={!allPlayersAdded}>Reset</button>\n          </div>\n          <div>\n            <button class=\"btn btn-warning my-1\" onClick={discardGameHandler} disabled={!allPlayersAdded}>Discard</button>\n          </div>\n        </div>\n      }\n      <div>{ players?.length > 0 && getPlayerTurn() + '\\'s Turn' }</div>\n      <button class=\"btn btn-success\" onClick={() => navigate(\"/dashboard\")}>Dashboard</button>\n      {/* <button className=\"dashboard_btn\" onClick={() => navigate(\"/newgame\")}>Refresh</button> */}\n    </div>\n  );\n};\n\nexport default NewGame;","import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getRegisteredPlayers, registerPlayer } from \"../firebase\";\n\nimport \"./NewGame.css\";\n\nconst RegisterPlayer = () => {\n  const navigate = useNavigate();\n\n  const [players, setPlayers] = useState([]);\n  const [playerName, setPlayerName] = useState('');\n\n  useEffect(async () => {\n    const savedPlayers = await getRegisteredPlayers();\n    setPlayers(savedPlayers);\n  }, []);\n\n  const handleRegisterPlayerChange = (event) => {\n    event.preventDefault();\n\n    const fieldValue = event.target.value;\n\n    setPlayerName(fieldValue);\n  };\n\n  const handleRegisterPlayerSubmit = async (event) => {\n    event.preventDefault();\n    \n    await registerPlayer({\n      name: playerName,\n      id: Date.now()\n    });\n\n    setPlayerName('');\n    const savedPlayers = await getRegisteredPlayers();\n    setPlayers(savedPlayers);\n  };\n\n  return (\n    <div>\n      <div>\n        <h2>Players</h2>\n        <form onSubmit={handleRegisterPlayerSubmit}>\n          <input\n            type=\"text\"\n            name=\"player\"\n            value={playerName}\n            required=\"required\"\n            placeholder=\"Enter Player Name...\"\n            onChange={handleRegisterPlayerChange}\n          />\n          <button type=\"submit\" class=\"btn btn-success\">Register</button>\n        </form>\n      </div>\n      {\n        players?.length > 0 &&\n        <div class=\"mt-2\">\n          <table class=\"table register-player\">\n            <thead>\n              <tr>\n                <th>Player Number</th>\n                <th>Player Name</th>\n              </tr>\n            </thead>\n            <tbody>\n                {players?.map((player, idx) => \n                  <tr>\n                    <td>{idx+1}</td>\n                    <td>{player}</td>\n                  </tr>\n                )}\n              </tbody>\n          </table>\n        </div>\n      }\n      <button class=\"btn btn-success\" onClick={() => navigate(\"/dashboard\")}>Dashboard</button>\n    </div>\n  );\n};\n\nexport default RegisterPlayer;","import React, { useEffect } from 'react';\nimport * as d3 from 'd3';\n\nfunction PieChart(props) {\n  const {\n    name,\n    data,\n    outerRadius,\n    innerRadius,\n  } = props;\n\n  const margin = {\n    top: 50, right: 50, bottom: 50, left: 50,\n  };\n\n  const width = 2 * outerRadius + margin.left + margin.right;\n  const height = 2 * outerRadius + margin.top + margin.bottom;\n\n  // const colorScale = d3     \n  //   .scaleSequential()      \n  //   .interpolator(d3.interpolateCool)      \n  //   .domain([0, data.length]);\n\n  const colorScale = d3.scaleOrdinal(d3.schemeCategory10);\n\n  useEffect(() => {\n    drawChart();\n  }, [data]);\n\n  function drawChart() {\n    // Remove the old svg\n    d3.select('#pie-container'+'-'+name)\n      .select('svg')\n      .remove();\n\n    // Create new svg\n    const svg = d3\n      .select('#pie-container'+'-'+name)\n      .append('svg')\n      .attr('width', width)\n      .attr('height', height)\n      .append('g')\n      .attr('transform', `translate(${width / 2}, ${height / 2})`);\n\n    const arcGenerator = d3\n      .arc()\n      .innerRadius(innerRadius)\n      .outerRadius(outerRadius);\n\n    const pieGenerator = d3\n      .pie()\n      .padAngle(0)\n      .value((d) => d.value);\n\n    const arc = svg\n      .selectAll()\n      .data(pieGenerator(data))\n      .enter();\n\n    // Append arcs\n    arc\n      .append('path')\n      .attr('d', arcGenerator)\n      .style('fill', (_, i) => colorScale(i))\n      .style('stroke', '#ffffff')\n      .style('stroke-width', 0);\n\n    // Append text labels\n    arc\n      .append('text')\n      .attr('text-anchor', 'middle')\n      .attr('alignment-baseline', 'middle')\n      .text((d) => d.data.label)\n      // .style('fill', (_, i) => colorScale(data.length - i))\n      // .style('fill', 'white')\n      .style('fill', '#E3F2E6') // same as html body background color\n      .attr('transform', (d) => {\n        const [x, y] = arcGenerator.centroid(d);\n        return `translate(${x}, ${y})`;\n      });\n  }    \n\n  return <div id={\"pie-container\"+\"-\"+name} />;\n}\n\nexport default PieChart;","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getGameHistoryData } from \"../firebase\";\n\n// import \"./NewGame.css\";\n\nimport WinnerCup from './../assets/winner-cup.png';\nimport PieChart from \"./PieChart\";\n\nconst GameHistory = () => {\n  const navigate = useNavigate();\n\n  const [gameHistory, setGameHistory] = useState([]);\n\n  const [playerWinnerRunner, setPlayerWinnerRunner] = useState([]);\n\n  const [gameWins, setGameWins] = useState([]);\n  const [playersParticipated, setPlayersParticipated] = useState([]);\n  const [playerGameCombo, setPlayerGameCombo] = useState({});\n\n  const [winnerChartData, setWinnerChartData] = useState([]);\n  const [runnerChartData, setRunnerChartData] = useState([]);\n  const [outChartData, setOutChartData] = useState([]);\n\n  useEffect(async () => {\n    const gameHistory = await getGameHistoryData();\n    setGameHistory(gameHistory);\n\n    const playerWinnerCount = {};\n    const playerRunnerCount = {};\n    const playerGameCount = {};\n    const playerOutCount = {};\n    const gameWinsCount = {};\n    const playerGameCombo = {};\n    gameHistory?.forEach(game => {\n      //winner\n      let winCount = playerWinnerCount[game?.winner];\n      if(!winCount) {\n        playerWinnerCount[game?.winner] = 1;\n      } else {\n        playerWinnerCount[game?.winner] = winCount+1;\n      }\n      //runner\n      let runnerCount = playerRunnerCount[game?.runner];\n      if(!runnerCount) {\n        playerRunnerCount[game?.runner] = 1;\n      } else {\n        playerRunnerCount[game?.runner] = runnerCount+1;\n      }\n      //player game count\n      game?.playerRanking?.forEach(player => {\n        let gameCount = playerGameCount[player?.name];\n        if(!gameCount) {\n          playerGameCount[player?.name] = 1;\n        } else {\n          playerGameCount[player?.name] = gameCount+1;\n        }\n      });\n      //out\n      const out = game?.playerRanking?.[game?.playerRanking?.length - 1]?.name;\n      let outCount = playerOutCount[out];\n      if(!outCount) {\n        playerOutCount[out] = 1;\n      } else {\n        playerOutCount[out] = outCount+1;\n      }\n      //ranking\n      const gameWin = [];\n      game?.playerRanking?.map((player, idx) => gameWin.push(player?.name));\n      let gameWinCount = gameWinsCount[gameWin];\n      if(!gameWinCount) {\n        gameWinsCount[gameWin] = 1;\n      } else {\n        gameWinsCount[gameWin] = gameWinCount+1;\n      }\n      //player game combo\n      const playerGameComboKey = game?.playerRanking?.map(player => player?.name)?.sort()?.join(',');\n      let playerGameComboCount = playerGameCombo[playerGameComboKey];\n      if(!playerGameComboCount) {\n        playerGameCombo[playerGameComboKey] = {games: [game]};\n      } else {\n        playerGameCombo[playerGameComboKey]?.games?.push(game);\n      }\n      Object.keys(gameWinsCount).forEach(gameWin => {\n        const gameWinPlayers = gameWin?.split(',');\n        const gameWinPlayersSorted = gameWinPlayers?.sort();\n        const gameWinPlayersSortedKey = gameWinPlayersSorted?.join(',');\n        let gameWinsCountTemp = playerGameCombo[gameWinPlayersSortedKey]?.gameWinsCount?.gameWin;\n        if(!gameWinsCountTemp) {\n          if(!playerGameCombo[gameWinPlayersSortedKey]?.gameWinsCount) {\n            playerGameCombo[gameWinPlayersSortedKey]['gameWinsCount'] = {};\n          }\n        }\n        playerGameCombo[gameWinPlayersSortedKey].gameWinsCount[gameWin] = gameWinsCount[gameWin];\n        // Convert object to array of key-value pairs\n        const gameWinsCountEntries = Object.entries(playerGameCombo[gameWinPlayersSortedKey].gameWinsCount);\n        // Sort the array based on values\n        gameWinsCountEntries?.sort((g1, g2) => g2?.[1] - g1?.[1]);\n        // Convert sorted array back to object\n        const sortedGameWinsCount = gameWinsCountEntries?.reduce((acc, [key, value]) => {\n          acc[key] = value;\n          return acc;\n        }, {});\n        // Assign the sorted object back to the original structure\n        playerGameCombo[gameWinPlayersSortedKey].gameWinsCount = sortedGameWinsCount;\n      });\n    });\n    //player winner runner out counts by game combo - start\n    Object.keys(playerGameCombo)?.forEach(playerGameComboKey => {\n      const playerGameComboObj = playerGameCombo[playerGameComboKey];\n      const playerWinnerCount = {};\n      const playerRunnerCount = {};\n      const playerOutCount = {};\n      playerGameComboObj?.games?.forEach(game => {\n        //winner\n        let winCount = playerWinnerCount[game?.winner];\n        if(!winCount) {\n          playerWinnerCount[game?.winner] = 1;\n        } else {\n          playerWinnerCount[game?.winner] = winCount+1;\n        }\n        //runner\n        let runnerCount = playerRunnerCount[game?.runner];\n        if(!runnerCount) {\n          playerRunnerCount[game?.runner] = 1;\n        } else {\n          playerRunnerCount[game?.runner] = runnerCount+1;\n        }\n        //out\n        const out = game?.playerRanking?.[game?.playerRanking?.length - 1]?.name;\n        let outCount = playerOutCount[out];\n        if(!outCount) {\n          playerOutCount[out] = 1;\n        } else {\n          playerOutCount[out] = outCount+1;\n        }\n      });\n      playerGameCombo[playerGameComboKey].playerWinnerCount = playerWinnerCount;\n      playerGameCombo[playerGameComboKey].playerRunnerCount = playerRunnerCount;\n      playerGameCombo[playerGameComboKey].playerOutCount = playerOutCount;\n      playerGameCombo[playerGameComboKey].winnerChartData = [];\n      playerGameCombo[playerGameComboKey].runnerChartData = [];\n      playerGameCombo[playerGameComboKey].outChartData = [];\n      playerGameComboKey?.split(',')?.forEach(player => {\n        playerGameCombo[playerGameComboKey].winnerChartData.push({\n          label: player,\n          value: playerGameCombo[playerGameComboKey].playerWinnerCount[player]\n        });\n        playerGameCombo[playerGameComboKey].runnerChartData.push({\n          label: player,\n          value: playerGameCombo[playerGameComboKey].playerRunnerCount[player]\n        });\n        playerGameCombo[playerGameComboKey].outChartData.push({\n          label: player,\n          value: playerGameCombo[playerGameComboKey].playerOutCount[player]\n        });\n      });\n    });\n    //player winner runner out counts by game combo - end\n    const gameWins = [];\n    const playersParticipated = [];\n    Object?.keys(gameWinsCount)?.map(g => {\n      const obj = {\n        players: g?.split(','),\n        wins: gameWinsCount[g]\n      };\n      obj?.players?.forEach(player => !playersParticipated.includes(player) && playersParticipated.push(player));\n      gameWins.push(obj);\n    });\n    gameWins?.sort((game1, game2) => game2.wins - game1.wins);\n    setGameWins(gameWins);\n    setPlayersParticipated(playersParticipated);\n    setPlayerGameCombo(playerGameCombo);\n\n    const playerWinnerRunner = [];\n    Object?.keys(playerWinnerCount)?.forEach(player => {\n    // playersParticipated?.forEach(player => {\n      playerWinnerRunner.push({\n        playerName: player,\n        winner: playerWinnerCount[player],\n        runner: playerRunnerCount[player],\n        out: playerOutCount[player],\n        gamesPlayed: playerGameCount[player],\n        winPercentage: Math.round((playerWinnerCount[player] / playerGameCount[player]) * 100),\n        runnerPercentage: Math.round((playerRunnerCount[player] / playerGameCount[player]) * 100),\n        outPercentage: Math.round((playerOutCount[player] / playerGameCount[player]) * 100)\n      });\n      winnerChartData.push({\n        label: player,\n        value: playerWinnerCount[player]\n      });\n      runnerChartData.push({\n        label: player,\n        value: playerRunnerCount[player]\n      });\n      outChartData.push({\n        label: player,\n        value: playerOutCount[player]\n      });\n    });\n\n    setWinnerChartData(winnerChartData);\n    setRunnerChartData(runnerChartData);\n    setOutChartData(outChartData);\n\n    playerWinnerRunner?.sort((p1, p2) => p2?.winPercentage - p1?.winPercentage);\n\n    setPlayerWinnerRunner(playerWinnerRunner);\n  }, []);\n\n  return (\n    <div>\n      {\n        gameHistory?.length > 0 &&\n        <div>\n          <table class=\"table history-table\">\n            <thead>\n              <tr>\n                <th>Date</th>\n                <th>Rounds Played</th>\n                <th>Winner</th>\n                <th>Runner</th>\n              </tr>\n            </thead>\n            <tbody>\n                {gameHistory?.map(game => \n                  <tr>\n                    <td>{game?.date}</td>\n                    <td>{game?.rounds}</td>\n                    <td>{game?.winner} <br></br> ({game?.winnerScore})</td>\n                    <td>{game?.runner} <br></br> ({game?.runnerScore})</td>\n                  </tr>\n                )}\n              </tbody>\n          </table>\n        </div>\n      }\n      {\n        playerWinnerRunner?.length > 0 && \n        <div style={{width: '360px'}}>\n          <div>{playerWinnerRunner[0]?.playerName} is All Time Winner <img src={WinnerCup} style={{width: '20px', height: '20px'}}></img></div>\n          <table class=\"table player-stats-table\">\n            <thead>\n              <tr>\n                <th>Player Name</th>\n                <th>Winner</th>\n                <th>Runner</th>\n                <th>Out</th>\n                <th>Games Played</th>\n                <th>Win %</th>\n                <th>Runner %</th>\n                <th>Out %</th>\n              </tr>\n            </thead>\n            <tbody>\n                {playerWinnerRunner?.map(player => \n                  <tr>\n                    <td>{player?.playerName}</td>\n                    <td>{player?.winner}</td>\n                    <td>{player?.runner}</td>\n                    <td>{player?.out}</td>\n                    <td>{player?.gamesPlayed}</td>\n                    <td>{player?.winPercentage}</td>\n                    <td>{player?.runnerPercentage}</td>\n                    <td>{player?.outPercentage}</td>\n                  </tr>\n                )}\n              </tbody>\n          </table>\n          {/* <div style={{marginTop: '50px'}}><b>Winner Chart</b></div>\n          <PieChart\n            name='winner'\n            data={winnerChartData}\n            outerRadius={200}\n            innerRadius={100}\n          />\n          <div style={{marginTop: '50px'}}><b>Runner Chart</b></div>\n          <PieChart\n            name='runner'\n            data={runnerChartData}\n            outerRadius={200}\n            innerRadius={100}\n          />\n          <div style={{marginTop: '50px'}}><b>Out Chart</b></div>\n          <PieChart\n            name='out'\n            data={outChartData}\n            outerRadius={200}\n            innerRadius={100}\n          /> */}\n        </div>\n      }\n      {\n        <div style={{marginBottom: '50px'}}>\n          <div style={{marginBottom: '25px'}}><b>Win Combinations</b></div>\n          {\n            Object?.keys(playerGameCombo)?.map((playerGameComboKey, idx) => {\n              const playersParticipated = playerGameComboKey?.split(',');\n              return (\n                <div style={{marginBottom: '25px'}}>\n                  <div><b>Players: </b>{playerGameComboKey?.split(',')?.map(player => <li>{player}</li>)}</div>\n                  <table class=\"table history-table\">\n                    <thead>\n                      <tr>\n                        {\n                          playersParticipated?.map((player, idx) => \n                            <th>\n                              { idx == 0 ? 'Winner' : (idx == 1 ? 'Runner' : `Place - ${idx+1}`) }\n                            </th>\n                          )\n                        }\n                        <th>Wins</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {\n                        Object?.keys(playerGameCombo[playerGameComboKey]?.gameWinsCount)?.map(gameWin => {\n                          return (\n                            <tr>\n                              {gameWin?.split(',')?.map((player, idx) => <td>{player}</td> )}\n                              <td>{playerGameCombo[playerGameComboKey]?.gameWinsCount[gameWin]}</td>\n                            </tr>\n                          )\n                        })\n                      }\n                    </tbody>\n                  </table>\n                  <div style={{marginTop: '50px'}}><b>Winner Chart</b></div>\n                  <PieChart\n                    name={`winner-${idx}`}\n                    data={playerGameCombo?.[playerGameComboKey]?.winnerChartData}\n                    outerRadius={200}\n                    innerRadius={100}\n                  />\n                  <div style={{marginTop: '50px'}}><b>Runner Chart</b></div>\n                  <PieChart\n                    name={`runner-${idx}`}\n                    data={playerGameCombo?.[playerGameComboKey]?.runnerChartData}\n                    outerRadius={200}\n                    innerRadius={100}\n                  />\n                  <div style={{marginTop: '50px'}}><b>Out Chart</b></div>\n                  <PieChart\n                    name={`out-${idx}`}\n                    data={playerGameCombo?.[playerGameComboKey]?.outChartData}\n                    outerRadius={200}\n                    innerRadius={100}\n                  />\n                </div>\n              )\n            })\n          }\n          {/* <table class=\"table history-table\">\n            <thead>\n              <tr>\n                {\n                  playersParticipated?.map((player, idx) => \n                    <th>\n                      { idx == 0 ? 'Winner' : (idx == 1 ? 'Runner' : `Place - ${idx+1}`) }\n                    </th>\n                  )\n                }\n                <th>Wins</th>\n              </tr>\n            </thead>\n            <tbody>\n              {gameWins?.map(gameWin => \n                <tr>\n                  {gameWin?.players?.map((player, idx) => <td>{player}</td> )}\n                  <td>{gameWin?.wins}</td>\n                </tr>\n              )}\n            </tbody>\n          </table> */}\n        </div>\n      }\n      <button class=\"btn btn-success\" onClick={() => navigate(\"/dashboard\")}>Dashboard</button>\n    </div>\n  );\n};\n\nexport default GameHistory;","import { Container } from \"react-bootstrap\";\nimport { AuthProvider } from \"../contexts/AuthContext\";\nimport Signup from \"./Signup\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport Reset from \"./Reset\";\nimport Dashboard from \"./Dashboard\";\nimport NewGame from \"./NewGame\";\nimport RegisterPlayer from \"./RegisterPlayer\";\nimport GameHistory from \"./GameHistory\";\n\nfunction App() {\n  return (\n    <Container className=\"d-flex align-items-center justify-content-center\" style={{ minHeight: \"100vh\" }}>\n      <div className=\"w-100\" style={{ maxWidth: '700px' }}>\n        <Router basename=\"rummy-score-tracker\">\n          <AuthProvider>\n            <Routes>\n              {/* <Route path=\"/signup\" component={Signup}/> */}\n              <Route exact path=\"/\" element={<Login />} />\n              <Route exact path=\"/register\" element={<Register />} />\n              <Route exact path=\"/reset\" element={<Reset />} />\n              <Route exact path=\"/dashboard\" element={<Dashboard />} />\n              <Route exact path=\"/registerplayer\" element={<RegisterPlayer />} />\n              <Route exact path=\"/newgame\" element={<NewGame />} />\n              <Route exact path=\"/gamehistory\" element={<GameHistory />} />\n            </Routes>\n          </AuthProvider>\n        </Router>\n      </div>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}